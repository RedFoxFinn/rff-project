{"version":3,"sources":["core/store/reducers/AppReducer.js","core/classes/User.js","core/store/reducers/LoginReducer.js","core/tools/classProvider.js","core/graphql/rff/fragments/f_userFragment.js","core/graphql/rff/queries/q_me.js","components/Navigation.js","components/widgets/CountryCount.js","core/graphql/rff/queries/q_groupCount.js","components/widgets/GroupCount.js","core/graphql/rff/queries/q_allListCount.js","core/graphql/rff/queries/q_listCount.js","components/widgets/ListCount.js","core/graphql/rff/queries/q_taskCount.js","core/graphql/rff/queries/q_allTaskCount.js","components/widgets/TaskCount.js","core/graphql/rff/queries/q_dishCount.js","components/widgets/DishCount.js","core/graphql/rff/queries/q_carbCount.js","core/graphql/rff/queries/q_proteinCount.js","core/graphql/rff/queries/q_spiceCount.js","components/widgets/IngredientCount.js","core/graphql/rff/queries/q_methodCount.js","components/widgets/MethodCount.js","components/widgets/TrackedStopsCount.js","core/graphql/rff/queries/q_userCount.js","components/widgets/UserCount.js","components/AdminTools.js","components/widgets/Colors.js","components/widgets/Technologies.js","components/widgets/OtherStyles.js","components/About.js","components/Calculate.js","components/Dashboard.js","core/graphql/rff/fragments/f_ingredientFragment.js","core/graphql/rff/queries/q_allCarbs.js","core/graphql/rff/queries/q_allProteins.js","core/graphql/rff/queries/q_allSpices.js","core/graphql/rff/fragments/f_methodFragment.js","core/graphql/rff/queries/q_allMethods.js","core/graphql/rff/fragments/f_dishIngredientFragment.js","core/graphql/rff/fragments/f_dishMethodFragment.js","core/graphql/rff/fragments/f_dishFragment.js","core/graphql/rff/queries/q_allDishes.js","core/graphql/rff/mutations/m_addMethod.js","core/graphql/rff/mutations/m_addIngredient.js","core/graphql/rff/mutations/m_addDish.js","core/graphql/rff/subscriptions/s_dishAdded.js","core/graphql/rff/subscriptions/s_dishUpdated.js","core/graphql/rff/subscriptions/s_dishRemoved.js","core/graphql/rff/subscriptions/s_dishVoted.js","core/graphql/rff/subscriptions/s_ingredientAdded.js","core/graphql/rff/subscriptions/s_ingredientUpdated.js","core/graphql/rff/subscriptions/s_ingredientRemoved.js","core/graphql/rff/subscriptions/s_methodAdded.js","core/graphql/rff/subscriptions/s_methodUpdated.js","core/graphql/rff/subscriptions/s_methodRemoved.js","core/store/reducers/DishyReducer.js","components/Dishy.js","components/LandingPage.js","core/graphql/rff/mutations/m_login.js","components/LoginPage.js","core/store/reducers/CountryReducer.js","core/classes/Country.js","components/widgets/CountryDetails.js","components/OpenCountry.js","core/graphql/rff/mutations/m_addUser.js","components/RegistrationPage.js","components/widgets/Task.js","core/graphql/rff/fragments/f_groupListFragment.js","core/graphql/rff/queries/q_groupLists.js","core/graphql/rff/fragments/f_privateListFragment.js","core/graphql/rff/queries/q_privateLists.js","core/graphql/rff/fragments/f_taskFragment.js","core/graphql/rff/queries/q_tasks.js","core/graphql/rff/mutations/m_taskActivation.js","core/graphql/rff/mutations/m_taskDeactivation.js","core/graphql/rff/mutations/m_taskPriority.js","core/graphql/rff/subscriptions/s_taskAdded.js","core/graphql/rff/subscriptions/s_taskUpdated.js","core/graphql/rff/subscriptions/s_taskRemoved.js","core/graphql/rff/subscriptions/s_listAddedGroup.js","core/graphql/rff/subscriptions/s_listAddedPrivate.js","core/graphql/rff/subscriptions/s_listRemovedGroup.js","core/graphql/rff/subscriptions/s_listRemovedPrivate.js","components/Tasker.js","components/Transporter.js","core/services/Connector.js","core/graphql/rff/mutations/m_updateUser.js","components/UserSettings.js","App.js","serviceWorker.js","core/store/reducers/RegReducer.js","core/store/Store.js","index.js"],"names":["initialState","repository","url","name","theme","application","notification","switchApp","app","dispatch","a","type","handleError","error","message","setTimeout","handleInfo","info","AppReducer","state","action","User","props","this","username","role","id","active","removable","propTypes","PropTypes","string","bool","user","loginFailure","loginSuccess","LoginReducer","classProvider","element","USER_DETAILS","gql","ME","mapDispatchToProps","switchTheme","localStorage","setItem","logout","connect","appState","loginState","client","useApolloClient","themes","loginToken","getItem","setTheme","useEffect","query","variables","token","substring","then","result","errors","data","me","ThemeSelector","className","map","t","key","onClick","to","getUsername","removeItem","countries","countryState","length","GROUP_COUNT","userToken","mode","useQuery","loading","groupCount","ALL_LIST_COUNT","LIST_COUNT","listCount","allListCount","TASK_COUNT","ALL_TASK_COUNT","countType","taskCount","allTaskCount","DISH_COUNT","dishCount","CARB_COUNT","PROTEIN_COUNT","SPICE_COUNT","carbResult","proteinResult","spiceResult","carbCount","proteinCount","spiceCount","METHOD_COUNT","methodCount","USER_COUNT","userCount","show","push","frontend","icon","reactIcon","ReduxIcon","graphqlIcon","apollostackIcon","backend","logoNodejs","expressIcon","mongodbIcon","testing","jestIcon","cypressIcon","tools","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","altairIcon","repo","href","f","b","d","dt","useState","value1","setValue1","value2","setValue2","Addition","Number","Subtraction","numbro","format","thousandSeparated","trimMantissa","mantissa","Division","Multiplication","Exponentiation","res1","res2","res3","Cube","RootSquare","Math","sqrt","RootCubic","cbrt","placeholder","onChange","target","value","common","link","advanced","INGREDIENT_DETAILS","ALL_CARBS","ALL_PROTEINS","ALL_SPICES","METHOD_DETAILS","ALL_METHODS","DISH_INGREDIENT_DETAILS","DISH_METHOD_DETAILS","DISH_DETAILS","ALL_DISHES","ADD_METHOD","ADD_INGREDIENT","ADD_DISH","DISH_ADDED","DISH_UPDATED","DISH_REMOVED","DISH_VOTED","INGREDIENT_ADDED","INGREDIENT_UPDATED","INGREDIENT_REMOVED","METHOD_ADDED","METHOD_UPDATED","METHOD_REMOVED","carbSearch","proteinSearch","spiceSearch","methodSearch","newDish","newDishCarbs","newDishProteins","newDishSpices","newDishMethods","DishyReducer","carb","protein","spice","method","initDish","resetDish","addDishCarb","addDishProtein","addDishSpice","addDishMethod","dishyState","carbResults","proteinResults","spiceResults","methodResults","dishResults","useSubscription","fetchPolicy","onSubscriptionData","dish","subscriptionData","dishAdded","updateCacheWithDish","dishUpdated","dishVoted","dishRemoved","ingredient","ingredientAdded","updateCacheWithCarb","updateCacheWithProtein","updateCacheWithSpice","ingredientUpdated","methodAdded","updateCacheWithMethod","methodUpdated","methodRemoved","eventType","includedIn","set","object","c","includes","readQuery","dataInStore","allCarbs","writeQuery","concat","forEach","p","allProteins","s","allSpices","m","allMethods","allDishes","Loading","Error","Empty","handleAddComponent","event","component","preventDefault","filter","handleNewComponent","document","getElementById","mutate","mutation","errorPolicy","addIngredient","addMethod","DishComponentForm","selection","NewCarb","NewMethod","NewProtein","NewSpice","minLength","required","handleNewDish","note","cookingMethods","proteins","carbs","spices","resetDishForm","Dish","view","methods","DishComponents","components","viewType","Component","uses","resultCount","random","floor","setSelection","defaultValue","JSON","parse","disabled","stringify","LOGIN","useMutation","login","password","countrySearch","selected","setSearch","search","CountryReducer","Country","numericCode","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","timezones","borders","nativeName","currencies","languages","flag","array","subRegion","number","country","Alias","alts","getAltSpellings","Borders","getBorders","Calling","codes","getCallingCodes","Currency","getCurrencies","code","symbol","Domain","domains","getDomain","CountryFlag","Image","size","src","getFlag","Language","getLanguages","l","Timezones","zones","getTimezones","z","getNumericCode","getName","overrideSearch","multi","Flag","getAlpha2","toLowerCase","getNativeName","getCapital","getRegion","getSubregion","getPopulation","getAlpha3","resetSearch","matched","handleSearch","onReset","title","resetIcon","i","ADD_USER","register","confirm","onSubmit","autoComplete","status","task","priority","creator","GROUP_LIST_DETAILS","GROUP_LISTS","PRIVATE_LIST_DETAILS","PRIVATE_LISTS","TASK_DETAILS","TASKS","TASK_ADDED","TASK_UPDATED","TASK_REMOVED","LIST_ADDED_GROUP","LIST_ADDED_PRIVATE","LIST_REMOVED_GROUP","LIST_REMOVED_PRIVATE","taskAdded","updateCacheWithTask","listAddedPrivate","listRemovedPrivate","listAddedGroup","listRemovedGroup","listID","tasks","ListsP","privateLists","List","list","ListsG","groupLists","expanded","setExpanded","listType","userShield","usersIcon","Tasks","getCountries","axios","get","UPDATE_USER","UserData","getRole","getActive","getRemovable","getId","ChangeUsername","handleUsernameChange","ChangePassword","handlePasswordChange","newPassword","toString","newUsername","initCountries","wsLink","WebSocketLink","uri","process","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","rffLink","split","getMainDefinition","kind","operation","hslLink","rffClient","ApolloClient","cache","InMemoryCache","connectToDevTools","hslClient","body","Connector","response","init","basename","exact","path","render","Calculate","OpenCountry","Boolean","window","location","hostname","match","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","reducers","combineReducers","regState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49e2bc25.chunk.js","sourcesContent":["// RFF demo project\n// AppReducer.js\n// creates reducer to Redux global state for application to use - app in general\n\nconst initialState = {\n  repository: {\n    url: 'https://github.com/RedFoxFinn/rff-project',\n    name: 'rff-demo-project'\n  },\n  theme: 'light',\n  application: 'Home',\n  notification: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'fu':\n    return {...state};\n  case 'switchApplication':\n    return {...state, application: action.application};\n  case 'switchTheme':\n    return {...state, theme: action.theme};\n  case 'setNotification':\n    return {...state, notification: action.notification};\n  case 'resetNotification':\n    return {...state, notification: null};\n  default:\n    return state;\n  }\n};\n\nexport const switchApp = (app) => {\n  return async dispatch => {\n    dispatch({\n      type: 'switchApplication', application: app\n    });\n  };\n};\n\nexport const switchTheme = (theme) => {\n  return async dispatch => {\n    localStorage.setItem('rffTheme', theme);\n    dispatch({\n      type: 'switchTheme', theme: theme\n    });\n  };\n};\n\nexport const handleError = (error) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'error', message: error}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\nexport const handleInfo = (info) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'info', message: info}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\n\nexport default AppReducer;","// RFF demo project\n// Country.js\n// creates User-class for application to use - users\n\nimport PropTypes from 'prop-types';\n\nclass User {\n  constructor(props) {\n    this.state = {\n      username: props.username,\n      role: props.role,\n      id: props.id,\n      active: props.active,\n      removable: props.removable\n    };\n  }\n  getUsername() {\n    return this.state.username;\n  }\n  getRole() {\n    return this.state.role;\n  }\n  getId() {\n    return this.state.id;\n  }\n  getActive() {\n    return this.state.active;\n  }\n  getRemovable() {\n    return this.state.removable;\n  }\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  role: PropTypes.string,\n  id: PropTypes.string,\n  active: PropTypes.bool,\n  removable: PropTypes.bool\n};\n\nexport default User;","// RFF demo project\n// LoginReducer.js\n// creates reducer to Redux global state for application to use - login\n\nimport User from '../../classes/User';\n\nconst initialState = {\n  user: null\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'loginSuccess':\n    return {...state, user: new User(action.user)};\n  case 'loginFailure':\n    return {...state};\n  case 'logout':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport const loginFailure = () => {\n  return async dispatch => {\n    dispatch({type: 'loginFailure'});\n  };\n};\nexport const loginSuccess = (user) => {\n  return async dispatch => {\n    dispatch({type: 'loginSuccess', user: user});\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({type: 'logout'});\n  };\n};\n\nexport default LoginReducer;","// RFF demo project\n// classProvider.js\n// provides predefined CSS-classes for application to use based on selected theme\n\nconst classProvider = (theme, element) => {\n  if (theme === 'dark') {\n    switch(element) {\n    case 'navMenu':\n      return 'navMenuDa';\n    case 'navSubMenu':\n      return 'navSubMenuDa';\n    case 'navButton':\n      return 'navButtonDa';\n    case 'navSubButton':\n      return 'navSubButtonDa';\n    case 'navContent':\n      return 'navContentDa';\n    case 'navSubContent':\n      return 'navSubContentDa';\n    case 'heading':\n      return 'headingDa';\n    case 'formElement':\n      return 'formElementDa';\n    case 'calculateElement':\n      return 'formElementDa';\n    case 'calculateResult':\n      return 'calculateResultDa';\n    case 'technologyElement':\n      return 'technologyElementDa';\n    case 'text':\n      return 'textDa';\n    case 'loginButton':\n      return 'loginButtonDa';\n    case 'loginContent':\n      return 'loginContentDa';\n    case 'loginMenu':\n      return 'loginMenuDa';\n    case 'link':\n      return 'linkDa';\n    case 'description':\n      return 'descriptionDa';\n    case 'countrySearch':\n      return 'searchElementDa';\n    case 'countrySearchCancel':\n      return 'searchCancelDa';\n    case 'countryDetails':\n      return 'countryDetailsDa';\n    case 'dishyElement':\n      return 'dishyElementDa';\n    case 'stopContainer':\n      return 'stopContainer';\n    case 'stopDetails':\n      return 'stopDetailsDa';\n    case 'linkButton':\n      return 'linkButtonDa';\n    case 'notificationInfo':\n      return 'notificationInfoDa';\n    case 'notificationError':\n      return 'notificationErrorDa';\n    case 'notificationNull':\n      return 'notificationNullDa';\n    case 'tile':\n      return 'tile';\n    case 'tileDescription':\n      return 'tileDescriptionDa';\n    case 'tileLoading':\n      return 'tileLoading';\n    case 'tileError':\n      return 'tileError';\n    case 'dashTile':\n      return 'dashTile';\n    case 'listHeader':\n      return 'listHeaderDa';\n    case 'listDescription':\n      return 'listDescriptionDa';\n    case 'task':\n      return 'taskDa';\n    case 'selector':\n      return 'selectorDa';\n    case 'selected':\n      return 'selectedDa';\n    case 'activator':\n      return 'activatorDa';\n    case 'deactivator':\n      return 'deactivatorDa';\n    case 'field':\n      return 'fieldDa';\n    case 'noteArea':\n      return 'noteAreaDa';\n    default:\n      return '';\n    }\n  } else {\n    switch(element) {\n    case 'navMenu':\n      return 'navMenuLi';\n    case 'navSubMenu':\n      return 'navSubMenuLi';\n    case 'navButton':\n      return 'navButtonLi';\n    case 'navSubButton':\n      return 'navSubButtonLi';\n    case 'navContent':\n      return 'navContentLi';\n    case 'navSubContent':\n      return 'navSubContentLi';\n    case 'heading':\n      return 'headingLi';\n    case 'formElement':\n      return 'formElementLi';\n    case 'calculateElement':\n      return 'formElementLi';\n    case 'calculateResult':\n      return 'calculateResultLi';\n    case 'technologyElement':\n      return 'technologyElementLi';\n    case 'text':\n      return 'textLi';\n    case 'loginButton':\n      return 'loginButtonLi';\n    case 'loginContent':\n      return 'loginContentLi';\n    case 'loginMenu':\n      return 'loginMenuLi';\n    case 'link':\n      return 'linkLi';\n    case 'description':\n      return 'descriptionLi';\n    case 'countrySearch':\n      return 'searchElementLi';\n    case 'countrySearchCancel':\n      return 'searchCancelLi';\n    case 'countryDetails':\n      return 'countryDetailsLi';\n    case 'dishyElement':\n      return 'dishyElementLi';\n    case 'stopContainer':\n      return 'stopContainer';\n    case 'stopDetails':\n      return 'stopDetailsLi';\n    case 'linkButton':\n      return 'linkButtonLi';\n    case 'notificationInfo':\n      return 'notificationInfoLi';\n    case 'notificationError':\n      return 'notificationErrorLi';\n    case 'notificationNull':\n      return 'notificationNullLi';\n    case 'tile':\n      return 'tile';\n    case 'tileDescription':\n      return 'tileDescriptionLi';\n    case 'tileLoading':\n      return 'tileLoading';\n    case 'tileError':\n      return 'tileError';\n    case 'listHeader':\n      return 'listHeaderLi';\n    case 'listDescription':\n      return 'listDescriptionLi';\n    case 'task':\n      return 'taskLi';\n    case 'selector':\n      return 'selectorLi';\n    case 'selected':\n      return 'selectedLi';\n    case 'activator':\n      return 'activatorLi';\n    case 'deactivator':\n      return 'deactivatorLi';\n    case 'field':\n      return 'fieldLi';\n    case 'noteArea':\n      return 'noteAreaLi';\n    default:\n      return '';\n    }\n  }\n};\n\nexport default classProvider;","\nimport gql from 'graphql-tag';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    username\n    role\n    removable\n    active\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ME = gql`\n  query me($token: String!) {\n    me(token: $token) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// Navigation.js\n// React component that renders navigation-section of the webapp\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {handleError, handleInfo, switchApp, switchTheme} from '../core/store/reducers/AppReducer';\nimport {logout, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/navigation.css';\nimport '../core/style/global.css';\n\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  switchApp, switchTheme, logout, loginSuccess, handleError, handleInfo\n};\n\nconst Navigation = (props) => {\n\n  const client = useApolloClient();\n  const themes = ['light', 'dark'];\n  const theme = props.appState.theme;\n  const loginToken = localStorage.getItem('rffUserToken');\n  const setTheme = localStorage.getItem('rffTheme');\n\n  useEffect(() => {\n    loginToken !== null && client.query({\n      query: ME,\n      variables: {\n        token: loginToken.substring(7)\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        props.loginSuccess(result.data.me);\n      } else {\n        props.handleError(errors[0]);\n      }\n    });\n  }, [loginToken, client]);\n  useEffect(() => {\n    setTheme !== null && props.switchTheme(setTheme);\n  }, []);\n\n  const MenuModule = () => {\n    return (\n      <div className={classProvider(theme, 'navMenu')}>\n        <button className={classProvider(theme, 'navButton')}>menu</button>\n        <div className={classProvider(theme, 'navContent')}>\n          <Link to='/' onClick={() => props.switchApp('Home')}>Home</Link>\n          <Link to='/dashboard' onClick={() => props.switchApp('Dashboard')}>Dashboard</Link>\n          <Link to='/calculate' onClick={() => props.switchApp( 'Calculate')}>Calculate</Link>\n          <Link to='/countries' onClick={() => props.switchApp( 'OpenCountry')}>OpenCountry</Link>\n          <Link to='/dishy' onClick={() => props.switchApp( 'Dishy')}>Dishy</Link>\n          {props.loginState.user && <Link to='/tasker' onClick={() => props.switchApp( 'Tasker')}>Tasker</Link>}\n          <Link to='/transit' onClick={() => props.switchApp( 'Transporter')}>Transporter</Link>\n          {props.loginState.user && (props.loginState.user.role === 'admin' || props.loginState.user.role === 'owner')\n            && <Link to='/admin' onClick={() => props.switchApp( 'Admin tools')}>Admin tools</Link>}\n          <Link to='/about' onClick={() => props.switchApp( 'About')}>About</Link>\n          <ThemeSelector/>\n        </div>\n      </div>\n    );\n  };\n\n  const ThemeSelector = () => {\n    return (\n      <div className={classProvider(theme, 'navSubMenu')}>\n        <button className={classProvider(theme, 'navSubButton')}>\n          <strong>{props.appState.theme}</strong> theme selected\n        </button>\n        <div className={classProvider(theme, 'navSubContent')}>\n          {themes.map((t) =>\n            <a key={t} onClick={() => props.switchTheme(t)}>{t}</a>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const LoginModule = () => {\n    if (!localStorage.getItem('rffUserToken')) {\n      return (\n        <div className={classProvider(theme, 'loginMenu')}>\n          <Link to='/login' onClick={() => props.switchApp('Login')}>login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(theme, 'navMenu')}>\n          <button type='button' className={classProvider(theme, 'navButton')}>\n            {props.loginState.user !== null ? props.loginState.user.getUsername() : null}\n          </button>\n          <div className={classProvider(theme, 'navContent')}>\n            <Link to='/user' onClick={() => props.switchApp('UserSettings')}>settings</Link>\n            <Link to='/' onClick={() => logout()}>logout</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  function logout() {\n    props.logout();\n    localStorage.removeItem('rffUserToken');\n    props.handleInfo('logged out');\n    props.switchApp('Home');\n  }\n\n  const NotificationModule = () => {\n    const notification = props.appState.notification;\n\n    if (notification && notification.type === 'info') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationInfo')}>{notification.message}</h4>\n        </div>\n      );\n    } else if (notification && notification.type === 'error') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationError')}>{notification.message}</h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationNull')}>{' '}</h4>\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='navRow'>\n      <MenuModule/>\n      <NotificationModule/>\n      <LoginModule/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","// RFF demo project\n// CountryCount.js\n// React component that renders country counter based on available country information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries\n  };\n};\n\nconst CountryCount = (props) => {\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.theme, 'tileDescription')}>\n        <strong>{props.countries.length}</strong> countries information available</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(CountryCount);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_COUNT = gql`\n  query groupCount($token: String!, $mode: String) {\n    groupCount(token: $token, mode: $mode)\n  }\n`;","// RFF demo project\n// GroupCount.js\n// React component that renders group counter based on user groups in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {GROUP_COUNT} from '../../core/graphql/rff/queries/q_groupCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst GroupCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.groupCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> group accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> groups accessible</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken,\n        mode: 'admin'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>all {data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(GroupCount);","\nimport gql from 'graphql-tag';\n\nexport const ALL_LIST_COUNT = gql`\n  query allListCount($token: String!) {\n    allListCount(token: $token)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const LIST_COUNT = gql`\n  query listCount($token: String!) {\n    listCount(token: $token)\n  }\n`;","// RFF demo project\n// ListCount.js\n// React component that renders list counter based on available task list information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport {useQuery} from '@apollo/react-hooks';\nimport '../../core/style/global.css';\n\nimport {ALL_LIST_COUNT} from '../../core/graphql/rff/queries/q_allListCount';\nimport {LIST_COUNT} from '../../core/graphql/rff/queries/q_listCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst ListCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading task list count</p>;\n    } else {\n      if (error) {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading task list\n          count</p>;\n      } else if (data) {\n        return data.listCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task list accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task lists accessible</p>;\n      }\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task list count</p>;\n    } else {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allListCount}</strong> task lists in database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task list count</p>;\n      }\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCount);","\nimport gql from 'graphql-tag';\n\nexport const TASK_COUNT = gql`\n  query taskCount($token: String!, $countType: String!) {\n    taskCount(token: $token, countType: $countType)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const ALL_TASK_COUNT = gql`\n  query allTaskCount($token: String!) {\n    allTaskCount(token: $token)\n  }\n`;","// RFF demo project\n// CountryCount.js\n// React component that renders task counter based on available task information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nimport {TASK_COUNT} from '../../core/graphql/rff/queries/q_taskCount';\nimport {ALL_TASK_COUNT} from '../../core/graphql/rff/queries/q_allTaskCount';\nimport {useQuery} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TaskCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(TASK_COUNT, {\n      variables: {\n        token: userToken,\n        countType: 'total'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.taskCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> task listed in accessible lists</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> tasks listed in accessible lists</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_TASK_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allTaskCount}</strong> tasks listed in the database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TaskCount);","\nimport gql from 'graphql-tag';\n\nexport const DISH_COUNT = gql`\n  query {\n    dishCount\n  }\n`;","// RFF demo project\n// DishCount.js\n// React component that renders dish counter based on available dish information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {DISH_COUNT} from '../../core/graphql/rff/queries/q_dishCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst DishCount = (props) => {\n  const {data, error, loading} = useQuery(DISH_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.dishCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dish available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dishes available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading dish count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading dish count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DishCount);","\n\nimport gql from 'graphql-tag';\n\nexport const CARB_COUNT = gql`\n  query {\n    carbCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const PROTEIN_COUNT = gql`\n  query {\n    proteinCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const SPICE_COUNT = gql`\n  query {\n    spiceCount\n  }\n`;","// RFF demo project\n// IngredientCount.js\n// React component that renders ingredient counter based on available ingredient information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {CARB_COUNT} from '../../core/graphql/rff/queries/q_carbCount.js';\nimport {PROTEIN_COUNT} from '../../core/graphql/rff/queries/q_proteinCount.js';\nimport {SPICE_COUNT} from '../../core/graphql/rff/queries/q_spiceCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst IngredientCount = (props) => {\n  const carbResult = useQuery(CARB_COUNT);\n  const proteinResult = useQuery(PROTEIN_COUNT);\n  const spiceResult = useQuery(SPICE_COUNT);\n  let data = 0;\n\n  const Count = () => {\n    if (!carbResult.loading && !proteinResult.loading && !spiceResult.loading) {\n      if (carbResult.data && proteinResult.data && spiceResult.data) {\n        data = carbResult.data.carbCount + proteinResult.data.proteinCount + spiceResult.data.spiceCount;\n        return data === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredient available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredients available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading ingredient count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading ingredient count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(IngredientCount);","\nimport gql from 'graphql-tag';\n\nexport const METHOD_COUNT = gql`\n  query {\n    methodCount\n  }\n`;","// RFF demo project\n// MethodCount.js\n// React component that renders method counter based on available cooking method information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {METHOD_COUNT} from '../../core/graphql/rff/queries/q_methodCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst MethodCount = (props) => {\n  const {data, error, loading} = useQuery(METHOD_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.methodCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking method available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking methods available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading cooking method count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading cooking method count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(MethodCount);","// RFF demo project\n// TrackedStopsCount.js\n// React component that renders stop counter based on available stop tracking information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TrackedStopsCount = (props) => {\n  const data = 0;\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.appState.theme, 'tileDescription')}><strong>{data}</strong> stops timetables tracked</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TrackedStopsCount);","\nimport gql from 'graphql-tag';\n\nexport const USER_COUNT = gql`\n  query userCount($token: String!) {\n    userCount(token: $token)\n  }\n`;","// RFF demo project\n// UserCount.js\n// React component that renders user counter based on available information\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useApolloClient, useQuery} from '@apollo/react-hooks';\n\nimport {USER_COUNT} from '../../core/graphql/rff/queries/q_userCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst UserCount = (props) => {\n  const userCount = useQuery(USER_COUNT, {\n    variables: {\n      token: localStorage.getItem('rffUserToken').substring(7)\n    }\n  });\n\n  const Count = () => {\n    if (props.mode === 'admin') {\n      if (userCount.loading) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileLoading')}>loading user count</p>\n        );\n      } else if (userCount.error) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading data</p>\n        );\n      } else if (userCount.data) {\n        return userCount.data.userCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> user</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> users</p>;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserCount);","// RFF demo project\n// AdminTools.js\n// React component that renders webapp administrative tools\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport CountryCount from './widgets/CountryCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport TaskCount from './widgets/TaskCount';\nimport DishCount from './widgets/DishCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport MethodCount from './widgets/MethodCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport UserCount from './widgets/UserCount';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst AdminTools = (props) => {\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <ListCount mode='admin'/>\n        <TaskCount mode='admin'/>\n        <GroupCount mode='admin'/>\n        <UserCount mode='admin'/>\n        <TrackedStopsCount mode='admin'/>\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>App statistics:</h4>\n        <WidgetsCommon/>\n        <WidgetsAdvanced/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>User management:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Group management:</h4>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(AdminTools);","// RFF demo project\n// Colors.js\n// React component that renders color palette available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Colors = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used color palette:</h4>\n        <div className='appElements'>\n          <div className='peru'/>\n          <div className='gainsboro'/>\n          <div className='darkslategrey'/>\n          <div className='yellowgreen'/>\n          <div className='reactblue'/>\n          <div className='slateblue'/>\n          <div className='deeppink'/>\n        </div>\n        <div className='appElements'>\n          <div className='seagreen'/>\n          <div className='googleblue'/>\n          <div className='googlered'/>\n          <div className='googleyellow'/>\n          <div className='googlegreen'/>\n          <div className='amazonorange'/>\n          <div className='heroku'/>\n        </div>\n        <div className='appElements'>\n          <div className='bus'/>\n          <div className='citybike'/>\n          <div className='tram'/>\n          <div className='train'/>\n          <div className='metro'/>\n          <div className='jokerilightrail'/>\n          <div className='ferry'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslpink'/>\n          <div className='hslpinklight'/>\n          <div className='hslgreen'/>\n          <div className='hslgreenlight'/>\n          <div className='hslwarning'/>\n          <div className='hslhighlight'/>\n          <div className='ferrylight'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslblue'/>\n          <div className='digitransit'/>\n          <div className='dgray'/>\n          <div className='gray'/>\n          <div className='lgray'/>\n          <div className='vlgray'/>\n          <div className='jbamber'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbsiena'/>\n          <div className='jbcrimson'/>\n          <div className='jbcarmine'/>\n          <div className='jbfuchsia'/>\n          <div className='jbmauve'/>\n          <div className='jblilac'/>\n          <div className='jbpurple'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbskyblue'/>\n          <div className='jbgreen'/>\n          <div className='jblemon'/>\n          <div className='slackblue'/>\n          <div className='slackgreen'/>\n          <div className='slackyellow'/>\n          <div className='slackred'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Colors);","// RFF demo project\n// Technologies.js\n// React component that renders information of used technologies in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Icon, InlineIcon} from '@iconify/react';\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport altairIcon from '@iconify/icons-logos/altair';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>},\n    {name: 'Altair', url: 'https://altair.sirmuel.design/', icon: <InlineIcon icon={altairIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>;\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>;\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>;\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>;\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>;\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>;\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Repository:</h4>\n        <Repository/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        <Front/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        <Back/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        <Data/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        <Testing/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);","// RFF demo project\n// OtherStyles.js\n// React component that renders information of miscellaneous styling available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst OtherStyles = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Other styles:</h4>\n        <div className='appElements'>\n          <a className={classProvider(props.appState.theme, 'link')} href='https://fonts.google.com/specimen/Raleway'>Font: Raleway</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(OtherStyles);","// RFF demo project\n// About.js\n// React component that renders information related to webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../core/style/global.css';\n\nimport Colors from './widgets/Colors';\nimport Technologies from './widgets/Technologies';\nimport OtherStyles from './widgets/OtherStyles';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst About = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <Technologies/>\n        <Colors/>\n        <OtherStyles/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(About);","// RFF demo project\n// Calculate.js\n// React component that renders simple calculator app\n\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/calculate.css';\nimport '../core/style/forms.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Calculator = (props) => {\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n\n  const Results = () => {\n    return (\n      <>\n        <div className='appElements'>\n          <Addition/>\n          <Multiplication/>\n          <Exponentiation/>\n          <Cube/>\n        </div>\n        <div className='appElements'>\n          <Subtraction/>\n          <Division/>\n          <RootSquare/>\n          <RootCubic/>\n        </div>\n      </>\n    );\n  };\n\n  const Addition = () => {\n    const result = Number(value1) + Number(value2);\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Addition</p>\n        <p>{value1} + {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Subtraction = () => {\n    const result = numbro(Number(value1) - Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Subtraction</p>\n        <p>{value1} - {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Division = () => {\n    if (Number(value2) === 0) {\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <a href='https://en.wikipedia.org/wiki/Division_by_zero'> nope </a>\n        </div>\n      );\n    } else {\n      const result = numbro(Number(value1) / Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <p>{value1} / {value2} {'\\u2243'} <strong>{result}</strong></p>\n        </div>\n      );\n    }\n  };\n  const Multiplication = () => {\n    const result = numbro(Number(value1) * Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Multiplication</p>\n        <p>{value1} * {value2} {'\\u2243'} <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Exponentiation = () => {\n    const res1 = numbro(Number(value1) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res3 = numbro(Number(value1) ** Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Exponentiation</p>\n        <p>{value1} ^ 2 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 2 {'\\u2243'} <strong>{res2}</strong></p>\n        <p>{value1} ^ {value2} {'\\u2243'} <strong>{res3}</strong></p>\n      </div>\n    );\n  };\n  const Cube = () => {\n    const res1 = numbro(Number(value1) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube</p>\n        <p>{value1} ^ 3 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 3 {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootSquare = () => {\n    const res1 = numbro(Math.sqrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.sqrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Square root</p>\n        <p>{'\\u221a'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221a'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootCubic = () => {\n    const res1 = numbro(Math.cbrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.cbrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube root</p>\n        <p>{'\\u221B'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221B'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <form className='appElements'>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue1(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue2(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n        </form>\n        <Results/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Calculator);","// RFF demo project\n// Dashboard.js\n// React component that renders information summary dashboard\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport CountryCount from './widgets/CountryCount';\nimport DishCount from './widgets/DishCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport MethodCount from './widgets/MethodCount';\nimport TaskCount from './widgets/TaskCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport {Link} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Dashboard = (props) => {\n  const common = [\n    {app: 'Calculate', link: '/calculate'},\n    {app: 'Dishy', link: '/dishy'},\n    {app: 'OpenCountry', link: '/countries'},\n  ];\n  const advanced = [\n    {app: 'Tasker', link: '/tasker'},\n    {app: 'Transporter', link: '/transit'},\n  ];\n\n  const ApplicationsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        {common.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const ApplicationsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        {advanced.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <GroupCount/>\n        <ListCount/>\n        <TaskCount/>\n        <TrackedStopsCount/>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Available applications:</h4>\n        <ApplicationsCommon/>\n        {props.user ? <ApplicationsAdvanced/> : null}\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Statistics:</h4>\n        <WidgetsCommon/>\n        {props.user ? <WidgetsAdvanced/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport gql from 'graphql-tag';\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    type\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_CARBS = gql`\n  query {\n    allCarbs {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_PROTEINS = gql`\n  query {\n    allProteins {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_SPICES = gql`\n  query {\n    allSpices {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const METHOD_DETAILS = gql`\n  fragment MethodDetails on CookingMethod {\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ALL_METHODS = gql`\n  query {\n    allMethods {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_INGREDIENT_DETAILS = gql`\n    fragment DishIngredientDetails on Ingredient {\n        type\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_METHOD_DETAILS = gql`\n    fragment DishMethodDetails on CookingMethod {\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\nimport {DISH_INGREDIENT_DETAILS} from './f_dishIngredientFragment';\nimport {DISH_METHOD_DETAILS} from './f_dishMethodFragment';\n\nexport const DISH_DETAILS = gql`\n  fragment DishDetails on Dish {\n    name\n    cookingMethods {\n        ...DishMethodDetails\n    }\n    proteins {\n        ...DishIngredientDetails\n    }\n    carbs {\n        ...DishIngredientDetails\n    }\n    spices {\n        ...DishIngredientDetails\n    }\n    karma\n    note\n    addedBy {\n      ...UserDetails\n    }\n    id\n  }\n  ${USER_DETAILS}\n  ${DISH_INGREDIENT_DETAILS}\n  ${DISH_METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ALL_DISHES = gql`\n  query {\n    allDishes {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ADD_METHOD = gql`\n  mutation addMethod($token: String!, $name: String!) {\n    addMethod(token: $token, name: $name) {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient($token: String!, $name: String!, $type: String!) {\n    addIngredient(token: $token, name: $name, type: $type) {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ADD_DISH = gql`\n  mutation addDish($token: String!, $name: String!, $cookingMethods: [String!]!,\n    $carbs: [String!]!, $proteins: [String!]!, $spices: [String!]!, $note: String!) {\n    addDish(token: $token, name: $name, cookingMethods: $cookingMethods,\n      carbs: $carbs, proteins: $proteins, spices: $spices, note: $note) {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_ADDED = gql`\n  subscription {\n    dishAdded {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_UPDATED = gql`\n  subscription {\n    dishUpdated {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_REMOVED = gql`\n  subscription {\n    dishRemoved {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_VOTED = gql`\n  subscription {\n    dishVoted {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_UPDATED = gql`\n  subscription {\n    ingredientUpdated {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_REMOVED = gql`\n  subscription {\n    ingredientRemoved {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_ADDED = gql`\n  subscription {\n    methodAdded {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_UPDATED = gql`\n  subscription {\n    methodUpdated {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_REMOVED = gql`\n  subscription {\n    methodRemoved {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","// RFF demo project\n// DishyReducer.js\n// creates reducer to Redux global state for application to use - dishy\n\nconst initialState = {\n  carbSearch: '',\n  proteinSearch: '',\n  spiceSearch: '',\n  methodSearch: '',\n  newDish: false,\n  newDishCarbs: [],\n  newDishProteins: [],\n  newDishSpices: [],\n  newDishMethods: []\n};\n\nconst DishyReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setCarbSearch':\n    return {...state, carbSearch: action.carbSearch};\n  case 'setProteinSearch':\n    return {...state, proteinSearch: action.proteinSearch};\n  case 'setSpiceSearch':\n    return {...state, spiceSearch: action.spiceSearch};\n  case 'setMethodSearch':\n    return {...state, methodSearch: action.methodSearch};\n  case 'setNewDish':\n    return {...state, newDish: true};\n  case 'setNewDishCarbs':\n    return {...state, newDishCarbs: [...state.newDishCarbs, action.carb]};\n  case 'setNewDishProteins':\n    return {...state, newDishProteins: [...state.newDishProteins, action.protein]};\n  case 'setNewDishSpices':\n    return {...state, newDishSpices: [...state.newDishSpices, action.spice]};\n  case 'setNewDishMethods':\n    return {...state, newDishMethods: [...state.newDishMethods, action.method]};\n  case 'resetNewDish':\n    return {...state, newDish: false, newDishCarbs: [], newDishProteins: [], newDishSpices: [], newDishMethods: []};\n  default:\n    return state;\n  }\n};\n\nexport const initDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDish'\n    });\n  };\n};\n\nexport const resetDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetNewDish'\n    });\n  };\n};\n\nexport const addDishCarb = (carb) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishCarbs', carb: {name: carb.name, id: carb.id}\n    });\n  };\n};\n\nexport const addDishProtein = (protein) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishProteins', protein: {name: protein.name, id: protein.id}\n    });\n  };\n};\n\nexport const addDishSpice = (spice) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishSpices', spice: {name: spice.name, id: spice.id}\n    });\n  };\n};\n\nexport const addDishMethod = (method) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishMethods', method: {name: method.name, id: method.id}\n    });\n  };\n};\n\nexport const setSearchCarb = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: search\n    });\n  };\n};\n\nexport const setSearchProtein = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: search\n    });\n  };\n};\n\nexport const setSearchSpice = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: search\n    });\n  };\n};\n\nexport const setSearchMethod = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: search\n    });\n  };\n};\n\nexport const resetSearchCarb = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: ''\n    });\n  };\n};\n\nexport const resetSearchProtein = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: ''\n    });\n  };\n};\n\nexport const resetSearchSpice = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: ''\n    });\n  };\n};\n\nexport const resetSearchMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: ''\n    });\n  };\n};\n\nexport default DishyReducer;","// RFF demo project\n// Dishy.js\n// React component that renders dish suggestion-section of the webapp\n\n// IMPORTS\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\n\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\nimport {ALL_PROTEINS} from '../core/graphql/rff/queries/q_allProteins';\nimport {ALL_SPICES} from '../core/graphql/rff/queries/q_allSpices';\nimport {ALL_METHODS} from '../core/graphql/rff/queries/q_allMethods';\nimport {ALL_DISHES} from '../core/graphql/rff/queries/q_allDishes';\nimport {ADD_METHOD} from '../core/graphql/rff/mutations/m_addMethod';\nimport {ADD_INGREDIENT} from '../core/graphql/rff/mutations/m_addIngredient';\nimport {ADD_DISH} from '../core/graphql/rff/mutations/m_addDish';\nimport {DISH_ADDED} from '../core/graphql/rff/subscriptions/s_dishAdded';\nimport {DISH_UPDATED} from '../core/graphql/rff/subscriptions/s_dishUpdated';\nimport {DISH_REMOVED} from '../core/graphql/rff/subscriptions/s_dishRemoved';\nimport {DISH_VOTED} from '../core/graphql/rff/subscriptions/s_dishVoted';\nimport {INGREDIENT_ADDED} from '../core/graphql/rff/subscriptions/s_ingredientAdded';\nimport {INGREDIENT_UPDATED} from '../core/graphql/rff/subscriptions/s_ingredientUpdated';\nimport {INGREDIENT_REMOVED} from '../core/graphql/rff/subscriptions/s_ingredientRemoved';\nimport {METHOD_ADDED} from '../core/graphql/rff/subscriptions/s_methodAdded';\nimport {METHOD_UPDATED} from '../core/graphql/rff/subscriptions/s_methodUpdated';\nimport {METHOD_REMOVED} from '../core/graphql/rff/subscriptions/s_methodRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {initDish, resetDish, addDishCarb, addDishProtein, addDishSpice,\n  addDishMethod} from '../core/store/reducers/DishyReducer';\n\n// prop mapper. maps imported state from store to usable props.\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    dishyState: state.dishyState,\n    user: state.loginState.user\n  };\n};\n\n// prop mapper. maps imported functions from store to usable props.\nconst mapDispatchToProps = {\n  initDish, resetDish, addDishCarb, addDishProtein, addDishSpice, addDishMethod,\n  handleInfo, handleError\n};\n\n// Dishy. application for site.\nconst Dishy = (props) => {\n  const client = useApolloClient();\n  const carbResults = useQuery(ALL_CARBS);\n  const proteinResults = useQuery(ALL_PROTEINS);\n  const spiceResults = useQuery(ALL_SPICES);\n  const methodResults = useQuery(ALL_METHODS);\n  const dishResults = useQuery(ALL_DISHES);\n\n  useSubscription(DISH_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishAdded;\n      updateCacheWithDish('added', dish);\n    }\n  });\n  useSubscription(DISH_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishUpdated;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_VOTED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishVoted;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishRemoved;\n      updateCacheWithDish('removed', dish);\n    }\n  });\n  useSubscription(INGREDIENT_ADDED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('added', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('added', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('added', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientUpdated;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('updated', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('updated', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('updated', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('removed', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('removed', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('removed', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(METHOD_ADDED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodAdded;\n      updateCacheWithMethod('added', method);\n    }\n  });\n  useSubscription(METHOD_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodUpdated;\n      updateCacheWithMethod('updated', method);\n    }\n  });\n  useSubscription(METHOD_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodRemoved;\n      updateCacheWithMethod('removed', method);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithCarb = async (eventType, carb) => {\n    const includedIn = (set, object) => set.map(c => c.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_CARBS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {allCarbs: dataInStore.allCarbs.concat(carb)}\n        });\n        props.handleInfo(`Carb added: ${carb.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.map(c => {\n              return c.id === carb.id ? carb : c;\n            })}\n        });\n        props.handleInfo(`Carb updated: ${carb.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.forEach(c => {\n              if (c.id !== carb.id) return c;\n            })}\n        });\n        props.handleInfo(`Carb removed: ${carb.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithProtein = async (eventType, protein) => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_PROTEINS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {allProteins: dataInStore.allProteins.concat(protein)}\n        });\n        props.handleInfo(`Protein added: ${protein.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.map(p => {\n              return p.id === protein.id ? protein : p;\n            })}\n        });\n        props.handleInfo(`Protein updated: ${protein.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.forEach(p => {\n              if (p.id !== protein.id) return p;\n            })}\n        });\n        props.handleInfo(`Protein removed: ${protein.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithSpice = async (eventType, spice) => {\n    const includedIn = (set, object) => set.map(s => s.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_SPICES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {allSpices: dataInStore.allSpices.concat(spice)}\n        });\n        props.handleInfo(`Spice added: ${spice.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.map(s => {\n              return s.id === spice.id ? spice : s;\n            })}\n        });\n        props.handleInfo(`Spice updated: ${spice.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.forEach(s => {\n              if (s.id !== spice.id) return s;\n            })}\n        });\n        props.handleInfo(`Spice removed: ${spice.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithMethod = async (eventType, method) => {\n    const includedIn = (set, object) => set.map(m => m.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_METHODS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {allMethods: dataInStore.allMethods.concat(method)}\n        });\n        props.handleInfo(`Method added: ${method.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.map(m => {\n              return m.id === method.id ? method : m;\n            })}\n        });\n        props.handleInfo(`Method updated: ${method.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.forEach(m => {\n              if (m.id !== method.id) return m;\n            })}\n        });\n        props.handleInfo(`Method removed: ${method.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithDish = async (eventType, dish) => {\n    const includedIn = (set, object) => set.map(d => d.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_DISHES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {allDishes: dataInStore.allDishes.concat(dish)}\n        });\n        props.handleInfo(`Dish added: ${dish.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.map(d => {\n              return d.id === dish.id ? dish : d;\n            })}\n        });\n        props.handleInfo(`Dish updated: ${dish.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.forEach(d => {\n              if (d.id !== dish.id) return d;\n            })}\n        });\n        props.handleInfo(`Dish removed: ${dish.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Loading = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>loading . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Error = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>something went wrong . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'data' is set but has no information.\n  const Empty = ({type}) => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>no {type} available</p>\n        </div>\n      </div>\n    );\n  };\n\n  // helper function to add ingredients or methods to new dish.\n  // checks whether or not instance of component has been added already before adding to list.\n  function handleAddComponent(event, component, type) {\n    event.preventDefault();\n    const {newDishCarbs, newDishProteins, newDishSpices, newDishMethods} = props.dishyState;\n    if (!props.dishyState.newDish) {\n      props.initDish();\n    }\n    switch (type) {\n    case 'carb':\n      if (!newDishCarbs.filter(c => c.id === component.id).length > 0) props.addDishCarb(component);\n      break;\n    case 'protein':\n      if (!newDishProteins.filter(p => p.id === component.id).length > 0) props.addDishProtein(component);\n      break;\n    case 'spice':\n      if (!newDishSpices.filter(s => s.id === component.id).length > 0) props.addDishSpice(component);\n      break;\n    case 'method':\n      if (!newDishMethods.filter(m => m.id === component.id).length > 0) props.addDishMethod(component);\n      break;\n    default:\n      break;\n    }\n  }\n\n  // subcomponent. renders selector for found carbs & selected carb information.\n  const Carbs = () => {\n    const [selection, setSelection] = useState(null);\n    if (carbResults.loading) {\n      return <Loading/>;\n    } else if (carbResults.data && carbResults.data.allCarbs) {\n      const resultCount = carbResults.data.allCarbs.length;\n      if (resultCount > 0) {\n        return (\n          <div id='carbSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='carbSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>carbs</option>\n                {carbResults.data.allCarbs.map((c) => <option key={c.id} value={JSON.stringify(c)}>{c.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedCarb' type='carb' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'carb')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='carbs'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found proteins & selected protein information.\n  const Proteins = () => {\n    const [selection, setSelection] = useState(null);\n    if (proteinResults.loading) {\n      return <Loading/>;\n    } else if (proteinResults.data && proteinResults.data.allProteins) {\n      const resultCount = proteinResults.data.allProteins.length;\n      if (resultCount > 0) {\n        return (\n          <div id='proteinSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='proteinSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>proteins</option>\n                {proteinResults.data.allProteins.map((p) => <option key={p.id} value={JSON.stringify(p)}>{p.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedProtein' type='protein' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'protein')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='proteins'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found spices & selected spice information.\n  const Spices = () => {\n    const [selection, setSelection] = useState(null);\n    if (spiceResults.loading) {\n      return <Loading/>;\n    } else if (spiceResults.data && spiceResults.data.allSpices) {\n      const resultCount = spiceResults.data.allSpices.length;\n      if (resultCount > 0) {\n        return (\n          <div id='spiceSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='spiceSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>spices</option>\n                {spiceResults.data.allSpices.map((s) => <option key={s.id} value={JSON.stringify(s)}>{s.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedSpice' type='spice' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'spice')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='spices'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found cooking methods & selected method information.\n  const Methods = () => {\n    const [selection, setSelection] = useState(null);\n    if (methodResults.loading) {\n      return <Loading/>;\n    } else if (methodResults.data && methodResults.data.allMethods) {\n      const resultCount = methodResults.data.allMethods.length;\n      if (resultCount > 0) {\n        return (\n          <div id='methodSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='methodSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>cooking methods</option>\n                {methodResults.data.allMethods.map((m) => <option key={m.id} value={JSON.stringify(m)}>{m.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedMethod' type='method' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'method')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='cooking methods'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found dishes & selected dish information.\n  const Dishes = () => {\n    const [selection, setSelection] = useState(null);\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else {\n        return (\n          <div id='dishSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='dishSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>dishes</option>\n                {dishResults.data.allDishes.map((d) => <option key={d.id} value={JSON.stringify(d)}>{d.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Dish id='selectedDish' methods={selection.cookingMethods} carbs={selection.carbs} spices={selection.spices}\n                  proteins={selection.proteins} note={selection.note} name={selection.name}/>\n              </div>}\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders random dish information.\n  const Random = () => {\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else if (resultCount === 1) {\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[0];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      } else {\n        const random = Math.floor(Math.random() * Math.floor(dishResults.data.allDishes.length));\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[random];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n\n  // helper function. handles new dish component submission.\n  // checks the type of submission and sets variables accordingly.\n  const handleNewComponent = async (type) => {\n    const token = await localStorage.getItem('rffUserToken').substring(7);\n    let variables;\n    switch (type) {\n    case 'carb':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newCarbName').value\n      };\n      break;\n    case 'protein':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newProteinName').value\n      };\n      break;\n    case 'spice':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newSpiceName').value\n      };\n      break;\n    case 'method':\n      variables = {\n        token: token,\n        name: document.getElementById('newMethodName').value\n      };\n      break;\n    default:\n      variables = null;\n      break;\n    }\n    if (variables !== null && variables.token) {\n      await client.mutate({\n        mutation: type === 'method' ? ADD_METHOD : ADD_INGREDIENT,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          switch (type) {\n          case 'carb':\n            updateCacheWithCarb('added', data.addIngredient);\n            break;\n          case 'protein':\n            updateCacheWithProtein('added', data.addIngredient);\n            break;\n          case 'spice':\n            updateCacheWithSpice('added', data.addIngredient);\n            break;\n          case 'method':\n            updateCacheWithMethod('added', data.addMethod);\n            break;\n          default:\n            variables = null;\n            break;\n          }\n        } else {\n          props.handleError(`Error occurred with ${type}: cannot add ${variables.name}`);\n        }\n      }\n      );\n    }\n  };\n\n  // subcomponent. renders form for new dish component submission.\n  // selector defines which type of dish component will be submitted to handler function.\n  const NewComponent = () => {\n    const [selection, setSelection] = useState('carb');\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <p className={classProvider(props.theme, 'heading')}><strong>Add new...</strong></p>\n          <div id='addComponentSelector' className='selector'>\n            <button id='componentSelectCarb' type='button' onClick={() => setSelection('carb')}\n              className={selection === 'carb'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>carb</button>\n            <button id='componentSelectProtein' type='button' onClick={() => setSelection('protein')}\n              className={selection === 'protein'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>protein</button>\n            <button id='componentSelectSpice' type='button' onClick={() => setSelection('spice')}\n              className={selection === 'spice'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>spice</button>\n            <button id='componentSelectMethod' type='button' onClick={() => setSelection('method')}\n              className={selection === 'method'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>method</button>\n          </div>\n          <DishComponentForm selection={selection}/>\n        </div>\n      </div>\n    );\n  };\n\n  const DishComponentForm = ({selection}) => {\n    switch (selection) {\n    case 'carb': return <NewCarb/>;\n    case 'method': return <NewMethod/>;\n    case 'protein': return <NewProtein/>;\n    case 'spice': return <NewSpice/>;\n    default: return null;\n    }\n  };\n  // subcomponent. renders form for new spice submission.\n  const NewSpice = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newSpiceName' placeholder='spice name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('spice')} id='saveSpice' className={classProvider(props.theme, 'activator')}>Save spice</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new protein submission.\n  const NewProtein = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newProteinName' placeholder='protein name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('protein')} id='saveProtein' className={classProvider(props.theme, 'activator')}>Save protein</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new carb submission.\n  const NewCarb = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newCarbName' placeholder='carb name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('carb')} id='saveCarb' className={classProvider(props.theme, 'activator')}>Save carb</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new cooking method submission.\n  const NewMethod = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newMethodName' placeholder='method name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('method')} id='saveMethod' className={classProvider(props.theme, 'activator')}>Save method</button>\n      </div>\n    );\n  };\n\n  // helper function. handles new dish submission.\n  // maps added dish component values to id's (string formatted),\n  // creates variables for GraphQL and triggers mutation.\n  const handleNewDish = async () => {\n    const {newDishMethods, newDishProteins, newDishCarbs, newDishSpices, newDish} = props.dishyState;\n    if (newDish) {\n      const token = await localStorage.getItem('rffUserToken').substring(7);\n      const variables = {\n        token: token(),\n        name: document.getElementById('newDishName').value,\n        note: document.getElementById('newDishNote').value,\n        cookingMethods: newDishMethods.map(m => m.id),\n        proteins: newDishProteins.map(p => p.id),\n        carbs: newDishCarbs.map(c => c.id),\n        spices: newDishSpices.map(s => s.id)\n      };\n      if (variables.token) {\n        await client.mutate({\n          mutation: ADD_DISH,\n          variables: variables,\n          errorPolicy: 'ignore'\n        }).then((result) => {\n          const {data} = result;\n          if (data !== null) {\n            resetDishForm();\n            props.handleInfo(`New dish saved: ${variables.name}`);\n          } else {\n            props.handleError(`Error occurred with dish: cannot add ${variables.name}`);\n          }\n        });\n      }\n    }\n  };\n\n  const resetDishForm = () => {\n    document.getElementById('newDishName').value = '';\n    document.getElementById('newDishNote').value = '';\n    props.resetDish();\n  };\n\n  // subcomponent. renders form for new dish submission.\n  // selector activates/deactivates form.\n  // form activated also when dish component added to new dish if form is not active.\n  // deactivation resets added components from Redux-state.\n  const NewDish = () => {\n    const {\n      newDish, newDishCarbs, newDishProteins, newDishSpices, newDishMethods\n    } = props.dishyState;\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <h4 className={classProvider(props.theme, 'heading')}>Add new dish</h4>\n          {newDish\n            ? <button type='button' onClick={() => resetDishForm()} id='newDishDeactivate'\n              className={classProvider(props.theme, 'deactivator')}>reset dish</button>\n            : <button type='button' onClick={() => props.initDish()} id='newDishActivate'\n              className={classProvider(props.theme, 'activator')}>create dish</button>}\n          {newDish && <>\n            <Dish view='new' carbs={newDishCarbs} proteins={newDishProteins}\n              spices={newDishSpices} methods={newDishMethods}/>\n            <button id='saveDish' onClick={() => handleNewDish()}\n              type='button' className={classProvider(props.theme, 'activator')}>Save dish</button>\n          </>}\n        </div>\n      </div>\n    );\n  };\n\n  // subcomponent. renders dish with given information.\n  const Dish = ({view, carbs, proteins, spices, methods, note, name}) => {\n    if (view === 'random') {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else if (view === 'new') {\n      return (\n        <div className='dish'>\n          <input className={classProvider(props.theme, 'noteArea')}\n            placeholder='dish name' type='text' id='newDishName'/>\n          <input type='text' className={classProvider(props.theme, 'noteArea')}\n            placeholder='description, steps, etc.' id='newDishNote'/>\n          <div className='componentContainer'>\n            <DishComponents id='newDishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='newDishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='newDishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='newDishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish components with given information.\n  const DishComponents = ({type, components, viewType}) => {\n    if (components.length > 0) {\n      return (\n        <div className='components'>\n          {type === 'carb' && <h4 className={classProvider(props.theme, 'text')}>Carbs:</h4>}\n          {type === 'protein' && <h4 className={classProvider(props.theme, 'text')}>Proteins:</h4>}\n          {type === 'spice' && <h4 className={classProvider(props.theme, 'text')}>Spices:</h4>}\n          {type === 'method' && <h4 className={classProvider(props.theme, 'text')}>Cooking methods:</h4>}\n          {components.map((c) => <Component key={c.name} component={c} type={type} view='plain'/>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className='components'>\n          {type === 'carb' && <p className={classProvider(props.theme, 'text')}>no carbs</p>}\n          {type === 'protein' && <p className={classProvider(props.theme, 'text')}>no proteins</p>}\n          {type === 'spice' && <p className={classProvider(props.theme, 'text')}>no spices</p>}\n          {type === 'method' && <p className={classProvider(props.theme, 'text')}>no cooking methods</p>}\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish component information.\n  const Component = ({component, view}) => {\n    if (props.dishyState.newDish && view === 'new') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else if (view === 'random' || view === 'plain') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else {\n      const uses = component.uses.length;\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n          <p className={classProvider(props.theme, 'text')}>\n            {uses > 1 ? `used in ${uses} dishes` : uses === 1 ? 'used in 1 dish' : 'no usage'}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.theme, 'heading')}>Suggested:</h4>\n        <Random id='randomDish'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Dishes:</h4>\n        <Dishes id='dishes'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Carbs:</h4>\n        <Carbs id='carbs'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Proteins:</h4>\n        <Proteins id='proteins'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Spices:</h4>\n        <Spices id='spices'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Cooking methods:</h4>\n        <Methods id='methods'/>\n        {props.show === 'advanced' && <NewComponent id='newDishComponent'/>}\n        {props.show === 'advanced' && <NewDish id='newDish'/>}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishy);","// RFF demo project\n// LandingPage.js\n// React component that renders front page for the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst LandingPage = (props) => {\n\n  const Locked = () => {\n    return(\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>If you want to use these advanced features, please log in.</p>\n      </div>\n    );\n  };\n\n  const Unlocked = () => {\n    return(\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>You have logged in and therefore eligible to use advanced features.</p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        {props.loginState.user === null\n          ? <Locked/>\n          : <Unlocked/>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(LandingPage);","\nimport gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","// RFF demo project\n// LoginPage.js\n// React component that renders login page for the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {loginFailure, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient, useMutation} from '@apollo/react-hooks';\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst LoginPage = (props) => {\n  const client = useApolloClient();\n  const [login] = useMutation(LOGIN);\n\n  const handleLogin = () => {\n    login({\n      errorPolicy: 'ignore',\n      variables: {\n        username: document.getElementById('loginUsername').value,\n        password: document.getElementById('loginPassword').value\n      }\n    }).then((result) => {\n      const {data} = result;\n      let loginToken;\n      if (data !== null) {\n        loginToken = data.login.value;\n        client.query({\n          query: ME,\n          variables: {\n            token: loginToken.substring(7)\n          }\n        }).then((result) => {\n          document.getElementById('loginUsername').value = '';\n          document.getElementById('loginPassword').value = '';\n          localStorage.setItem('rffUserToken', loginToken);\n          props.loginSuccess(result.data.me);\n          props.handleInfo('logged in successfully');\n        });\n      } else {\n        document.getElementById('loginPassword').value = '';\n        props.handleError('invalid username or password');\n        props.loginFailure();\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      {localStorage.getItem('rffUserToken') && <Redirect push to='/'/>}\n      <div className='container'>\n        <form className='commonElements'>\n          <input id='loginUsername' type='text' placeholder='username'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='loginPassword' type='password' placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='loginButton' type='button' onClick={() => handleLogin()}\n            className={classProvider(props.theme, 'formElement')}>{'login >'}</button>\n          <Link id='gotoRegisterButton' to='/register' onClick={() => props.switchApp('Register')}\n            className={classProvider(props.theme, 'formElement')}>{'register >'}</Link>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","// RFF demo project\n// CountryReducer.js\n// creates reducer to Redux global state for application to use - OpenCountry\n\nconst initialState = {\n  countries: [],\n  countrySearch: '',\n  selected: ''\n};\n\nconst CountryReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'search':\n    return {...state, countrySearch: action.search};\n  case 'resetSearch':\n    return {...state, countrySearch: ''};\n  case 'setCountries':\n    return {...state, countries: action.countries};\n  case 'setSelected':\n    return {...state, selected: action.selected};\n  case 'resetSelected':\n    return {...state, selected: ''};\n  default:\n    return state;\n  }\n};\n\nexport const initCountries = (countries) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCountries',\n      countries: countries\n    });\n  };\n};\n\nexport const resetSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetSearch'\n    });\n  };\n};\n\nexport const setSearch = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'search',\n      search: search\n    });\n  };\n};\n\nexport const setSelection = (id) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected',\n      selected: id\n    });\n  };\n};\n\nexport const resetSelection = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected'\n    });\n  };\n};\n\nexport default CountryReducer;","// RFF demo project\n// Country.js\n// creates Country-class for application to use - OpenCountry\n\nimport PropTypes from 'prop-types';\n\nclass Country {\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      numericCode: props.numericCode,\n      topLevelDomain: props.topLevelDomain,\n      alpha2Code: props.alpha2Code,\n      alpha3Code: props.alpha3Code,\n      callingCodes: props.callingCodes,\n      capital: props.capital,\n      altSpellings: props.altSpellings,\n      region: props.region,\n      subregion: props.subregion,\n      population: props.population,\n      timezones: props.timezones,\n      borders: props.borders,\n      nativeName: props.nativeName,\n      currencies: props.currencies,\n      languages: props.languages,\n      flag: props.flag\n    };\n  }\n  getName() {\n    return this.state.name;\n  }\n  getNumericCode() {\n    return this.state.numericCode;\n  }\n  getDomain() {\n    return this.state.topLevelDomain;\n  }\n  getAlpha2() {\n    return this.state.alpha2Code;\n  }\n  getAlpha3() {\n    return this.state.alpha3Code;\n  }\n  getCallingCodes() {\n    return this.state.callingCodes;\n  }\n  getCapital() {\n    return this.state.capital;\n  }\n  getAltSpellings() {\n    return this.state.altSpellings;\n  }\n  getRegion() {\n    return this.state.region;\n  }\n  getSubregion() {\n    return this.state.subregion;\n  }\n  getPopulation() {\n    return this.state.population;\n  }\n  getTimezones() {\n    return this.state.timezones;\n  }\n  getBorders() {\n    return this.state.borders;\n  }\n  getNativeName() {\n    return this.state.nativeName;\n  }\n  getCurrencies() {\n    return this.state.currencies;\n  }\n  getLanguages() {\n    return this.state.languages;\n  }\n  getFlag() {\n    return this.state.flag;\n  }\n}\n\nCountry.propTypes = {\n  name: PropTypes.string,\n  numericCode: PropTypes.string,\n  topLevelDomain: PropTypes.array,\n  alpha2Code: PropTypes.string,\n  alpha3Code: PropTypes.string,\n  callingCodes: PropTypes.array,\n  capital: PropTypes.string,\n  altSpellings: PropTypes.array,\n  region: PropTypes.string,\n  subRegion: PropTypes.string,\n  population: PropTypes.number,\n  timezones: PropTypes.array,\n  borders: PropTypes.array,\n  nativeName: PropTypes.string,\n  currencies: PropTypes.array,\n  languages: PropTypes.array,\n  flag: PropTypes.string\n};\n\nexport default Country;","// RFF demo project\n// CountryDetails.js\n// React component that renders available information of the countries\n\nimport React from 'react';\nimport {Flag, Image} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Country from '../../core/classes/Country';\nimport '../../core/style/global.css';\nimport '../../core/style/elements.css';\nimport classProvider from '../../core/tools/classProvider';\nimport {setSearch} from '../../core/store/reducers/CountryReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n  };\n};\nconst mapDispatchToProps = {\n  setSearch\n};\n\nconst CountryDetails = (props) => {\n  const country = new Country(props.country);\n\n  const overrideSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(country.getName());\n  };\n\n  const Alias = () => {\n    const alts = country.getAltSpellings();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Also known as:</label>\n        <ul>\n          {alts.map((a) => {\n            return <li className={classProvider(props.theme, 'heading')} key={a}>{a}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Borders = () => {\n    const borders = country.getBorders();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Borders with:</label>\n        <ul>\n          {borders.map((b) => {\n            return <li className={classProvider(props.theme, 'heading')} key={b}>{b}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Calling = () => {\n    const codes = country.getCallingCodes();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Calling codes:</label>\n        <ul>\n          {codes.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c}>{c}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Currency = () => {\n    const currencies = country.getCurrencies();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Currency:</label>\n        <ul>\n          {currencies.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c.name}>{c.name}, {c.code}, {c.symbol}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Domain = () => {\n    const domains = country.getDomain();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Domain extensions:</label>\n        <ul>\n          {domains.map((d) => {\n            return <li className={classProvider(props.theme, 'heading')} key={d}>{d}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const CountryFlag = () => {\n    return <Image size='medium' src={country.getFlag()}/>;\n  };\n\n  const Language = () => {\n    const languages = country.getLanguages();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Official languages:</label>\n        <ul>\n          {languages.map((l) => {\n            return <li className={classProvider(props.theme, 'heading')} key={l.name}>{l.name}, {l.nativeName}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Timezones = () => {\n    const zones = country.getTimezones();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Timezones:</label>\n        <ul>\n          {zones.map((z) => {\n            return <li className={classProvider(props.theme, 'heading')} key={z}>{z}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Header = () => {\n    if (props.multi) {\n      return (\n        <div className='countryHeader'>\n          <h4 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='countryHeader'>\n          <h3 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h3>\n        </div>\n      );\n    }\n  };\n\n  const Body = () => {\n    if (props.multi) {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <Alias/>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n          <Language/>\n          <Timezones/>\n          <Borders/>\n          <Currency/>\n          <Calling/>\n          <Domain/>\n          <CountryFlag/>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div key={country.getNumericCode()} className='countryContainer' onClick={(event) => overrideSearch(event)}>\n      <Header/>\n      <Body/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetails);","// RFF demo project\n// OpenCountry.js\n// React component that renders country data -section of the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport resetIcon from '@iconify/icons-iwwa/reset';\n\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\nimport {setSearch, resetSearch} from '../core/store/reducers/CountryReducer';\nimport CountryDetails from './widgets/CountryDetails';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries,\n    countrySearch: state.countryState.countrySearch\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearch,\n  resetSearch\n};\n\nconst Countries = (props) => {\n\n  let matched = [];\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(event.target.value);\n  };\n\n  const ListCountries = () => {\n    if (props.countrySearch.length > 0) {\n      for (let i = 0; i < props.countries.length; i++) {\n        if (props.countries[i].name.toLowerCase().includes(props.countrySearch.toLowerCase())) {\n          matched = [...matched, props.countries[i]];\n        }\n      }\n      if (matched.length >= 4) {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={true} country={c}/>\n            </div>\n          );\n        });\n      } else if (matched.length < 1) {\n        return (\n          <div className='countryAppElements'>\n            <h5>{'Couldn\\'t find any entries'}</h5>\n          </div>\n        );\n      } else {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={false} country={c}/>\n            </div>\n          );\n        });\n      }\n    } else {\n      matched = [];\n      return props.countries.map((c) => {\n        return (\n          <div key={c.numericCode} className='countryAppElements'>\n            <CountryDetails key={c.numericCode} multi={true} country={c}/>\n          </div>\n        );\n      });\n    }\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>\n          Data for {props.countrySearch.length > 0 ? props.countries.length : props.countries.length} countries found.\n        </h5>\n        <div className='appElements'>\n          <input type='search' placeholder='search country by name'\n            onChange={event => handleSearch(event)}\n            onReset={() => props.resetSearch()} value={props.countrySearch}\n            className={classProvider(props.theme, 'formElement')}/>\n          <button onClick={() => props.resetSearch()} title='reset search'\n            className={classProvider(props.theme, 'formElement')}><Icon icon={resetIcon} /></button>\n        </div>\n        <ListCountries/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// RegistrationPage.js\n// React component that renders registration page of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {ADD_USER} from '../core/graphql/rff/mutations/m_addUser';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst RegistrationPage = (props) => {\n  const client = useApolloClient();\n\n  const register = async (event) => {\n    event.preventDefault();\n    const username = document.getElementById('regUsername').value;\n    const password = document.getElementById('regPassword').value;\n    const confirm = document.getElementById('regConfirm').value;\n    password === confirm\n      ? await client.mutate({\n        mutation: ADD_USER,\n        variables: {\n          username: username,\n          password: password\n        },\n        errorPolicy: 'ignore'\n      }).then(result => {\n        const {data} = result;\n        if (data !== null) {\n          props.handleInfo(`${username} registered`);\n        } else {\n          props.handleError(`username ${username} is already in use`);\n        }\n      })\n      : props.handleError('passwords do not match');\n    document.getElementById('regUsername').value = '';\n    document.getElementById('regPassword').value = '';\n    document.getElementById('regConfirm').value = '';\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <form className='commonElements' onSubmit={(event) => register(event)}>\n          <input id='regUsername' type='text' required minLength={4} placeholder='username'\n            className={classProvider(props.theme, 'formElement')} autoComplete/>\n          <input id='regPassword' type='password' required minLength={8} placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='regConfirm' type='password' required minLength={8} placeholder='re-type password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='regButton' type='submit' className={classProvider(props.theme, 'formElement')}>{'register >'}</button>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationPage);","// RFF demo project\n// Task.js\n// React component that renders task of the tasker-section of the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/tasker.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme\n  };\n};\n\nconst Task = (props) => {\n  const handlePriority = () => {};\n\n  if (!props.status) {\n    return (\n      <div className='taskContainer'>\n        <p className={classProvider(props.theme, 'task')}>{props.task.task}</p>\n      </div>\n    );\n  } else {\n    const task = props.task;\n    return (\n      <div className='taskContainer'>\n        <p className={classProvider(props.theme, 'task')}>{task.task}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.priority}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.active}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.creator.username}</p>\n      </div>\n    );\n  }\n};\n\nexport default connect(mapStateToProps)(Task);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_LIST_DETAILS = gql`\n    fragment GroupListDetails on GroupList {\n        title\n        listType\n        removable\n        id\n        group {\n            title\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const GROUP_LISTS = gql`\n  query groupLists($token: String!) {\n    groupLists(token: $token) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const PRIVATE_LIST_DETAILS = gql`\n    fragment PrivateListDetails on PrivateList {\n        title\n        listType\n        removable\n        id\n        owner {\n            username\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const PRIVATE_LISTS = gql`\n  query privateLists($token: String!) {\n    privateLists(token: $token) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\n\nexport const TASK_DETAILS = gql`\n  fragment TaskDetails on Task {\n    task\n    active\n    priority\n    creator {\n      ...UserDetails\n    }\n    listID\n    id\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASKS = gql`\n  query tasks($token: String!, $listID: String!) {\n    tasks(token: $token, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ACTIVATION = gql`\n  mutation taskActivation($token: String!, $id: String!) {\n    taskActivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_DEACTIVATION = gql`\n  mutation taskDeactivation($token: String!, $id: String!) {\n    taskDeactivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_PRIORITY = gql`\n  mutation taskPriority($token: String!, $id: String!, $priority: Boolean!) {\n    taskPriority(token: $token, id: $id, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ADDED = gql`\n  subscription {\n    taskAdded {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_UPDATED = gql`\n  subscription {\n    taskUpdated {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_REMOVED = gql`\n  subscription {\n    taskRemoved {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_ADDED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_ADDED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_REMOVED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_REMOVED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","// RFF demo project\n// Tasker.js\n// React component that renders task management -section of the webapp\n\nimport React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/tasker.css';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport Task from './widgets/Task';\n\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\n\nimport {GROUP_LISTS} from '../core/graphql/rff/queries/q_groupLists';\nimport {PRIVATE_LISTS} from '../core/graphql/rff/queries/q_privateLists';\nimport {TASKS} from '../core/graphql/rff/queries/q_tasks';\nimport {Redirect} from 'react-router-dom';\n\nimport {TASK_ACTIVATION} from '../core/graphql/rff/mutations/m_taskActivation';\nimport {TASK_DEACTIVATION} from '../core/graphql/rff/mutations/m_taskDeactivation';\nimport {TASK_PRIORITY} from '../core/graphql/rff/mutations/m_taskPriority';\nimport {TASK_ADDED} from '../core/graphql/rff/subscriptions/s_taskAdded';\nimport {TASK_UPDATED} from '../core/graphql/rff/subscriptions/s_taskUpdated';\nimport {TASK_REMOVED} from '../core/graphql/rff/subscriptions/s_taskRemoved';\n\nimport {LIST_ADDED_GROUP} from '../core/graphql/rff/subscriptions/s_listAddedGroup';\nimport {LIST_ADDED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listAddedPrivate';\nimport {LIST_REMOVED_GROUP} from '../core/graphql/rff/subscriptions/s_listRemovedGroup';\nimport {LIST_REMOVED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listRemovedPrivate';\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Tasker = (props) => {\n  let userToken;\n  const client = useApolloClient();\n  useSubscription(TASK_ADDED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('added', task);\n    }\n  });\n  useSubscription(TASK_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('updated', task);\n    }\n  });\n  useSubscription(TASK_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('removed', task);\n    }\n  });\n  useSubscription(LIST_ADDED_PRIVATE, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedPrivate;\n      // updateCacheWithList('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_PRIVATE, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedPrivate;\n      // updateCacheWithList('removed', list);\n    }\n  });\n  useSubscription(LIST_ADDED_GROUP, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedGroup;\n      // updateCacheWithList('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_GROUP, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedGroup;\n      // updateCacheWithList('removed', list);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithTask = async (eventType, listID, task) => {\n    const includedIn = (set, object) => set.map(t => t.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: TASKS, variables: {\n        token: userToken,\n        listID: listID\n      }});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          data: {tasks: dataInStore.tasks.concat(task)}\n        });\n        props.handleInfo(`Task added: ${task.task}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          data: {\n            tasks: dataInStore.tasks.map(t => {\n              return t.id === task.id ? task : t;\n            })}\n        });\n        props.handleInfo(`Task updated: ${task.task}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          data: {\n            tasks: dataInStore.tasks.forEach(t => {\n              if (t.id !== task.id) return t;\n            })}\n        });\n        props.handleInfo(`Task removed: ${task.task}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithList = async (eventType, listType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    if (listType === 'private') {\n      const dataInStore = await client.readQuery({\n        query: PRIVATE_LISTS, variables: {\n          token: userToken\n        }});\n\n      switch (eventType) {\n      case 'added':\n        if (!includedIn(dataInStore.privateLists, list)) {\n          await client.writeQuery({\n            query: PRIVATE_LISTS,\n            data: {privateLists: dataInStore.privateLists.concat(list)}\n          });\n          props.handleInfo(`List added: ${list.title}`);\n        }\n        break;\n      case 'updated':\n        if (includedIn(dataInStore.privateLists, list)) {\n          await client.writeQuery({\n            query: PRIVATE_LISTS,\n            data: {\n              privateLists: dataInStore.privateLists.map(l => {\n                return l.id === list.id ? list : l;\n              })}\n          });\n          props.handleInfo(`List updated: ${list.title}`);\n        }\n        break;\n      case 'removed':\n        if (includedIn(dataInStore.privateLists, list)) {\n          await client.writeQuery({\n            query: PRIVATE_LISTS,\n            data: {\n              privateLists: dataInStore.privateLists.forEach(l => {\n                if (l.id !== list.id) return l;\n              })}\n          });\n          props.handleInfo(`List removed: ${list.title}`);\n        }\n        break;\n      default:\n        break;\n      }\n    } else {\n      const dataInStore = await client.readQuery({\n        query: GROUP_LISTS, variables: {\n          token: userToken\n        }});\n\n      switch (eventType) {\n      case 'added':\n        if (!includedIn(dataInStore.groupLists, list)) {\n          await client.writeQuery({\n            query: GROUP_LISTS,\n            data: {groupLists: dataInStore.groupLists.concat(list)}\n          });\n          props.handleInfo(`List added: ${list.title}`);\n        }\n        break;\n      case 'updated':\n        if (includedIn(dataInStore.groupLists, list)) {\n          await client.writeQuery({\n            query: GROUP_LISTS,\n            data: {\n              groupLists: dataInStore.groupLists.map(l => {\n                return l.id === list.id ? list : l;\n              })}\n          });\n          props.handleInfo(`List updated: ${list.title}`);\n        }\n        break;\n      case 'removed':\n        if (includedIn(dataInStore.groupLists, list)) {\n          await client.writeQuery({\n            query: GROUP_LISTS,\n            data: {\n              groupLists: dataInStore.groupLists.forEach(l => {\n                if (l.id !== list.id) return l;\n              })}\n          });\n          props.handleInfo(`List removed: ${list.title}`);\n        }\n        break;\n      default:\n        break;\n      }\n    }\n  };\n\n  const Empty = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>no accessible {type} lists</p>\n      </div>\n    );\n  };\n  const Error = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>error occurred while loading {type} lists</p>\n      </div>\n    );\n  };\n  const Loading = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>loading {type} lists</p>\n      </div>\n    );\n  };\n\n  const Lists = () => {\n    if (props.user) {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return (\n        <div className='container'>\n          <ListsP/>\n          <ListsG/>\n        </div>\n      );\n    } else {\n      return (\n        <div className='container'>\n          <h4 className={classProvider(props.theme, 'listHeader')}>login needed</h4>\n        </div>\n      );\n    }\n  };\n\n  const ListsP = () => {\n    const {data, loading, error} = useQuery(PRIVATE_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'listHeader')}>Accessible private lists:</h4>\n        {data && data.privateLists.length > 0\n          ? <div>\n            {data.privateLists.map(l => <List key={`privateList:${l.id}`} list={l}/>)}\n          </div>\n          : <Empty type='private'/>\n        }\n        {error && <Error type='private'/>}\n        {loading && <Loading type='private'/>}\n      </div>\n    );\n  };\n\n  const ListsG = () => {\n    const {data, loading, error} = useQuery(GROUP_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'heading')}>Accessible group lists:</h4>\n        {data && data.groupLists.length > 0\n          ? <div>\n            {data.groupLists.map(l => <List key={`groupList:${l.id}`} list={l}/>)}\n          </div>\n          : <Empty type='group'/>}\n        {loading && <Loading type='group'/>}\n        {error && <Error type='group'/>}\n      </div>\n    );\n  };\n\n  const List = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(TASKS, {\n      variables: {\n        token: userToken,\n        listID: list.id\n      }\n    });\n\n    if (!loading) {\n      if (!error) {\n        return (\n          <div key={`${list.listType}:${list.id}`} className='listElements'>\n            <p className={classProvider(props.theme, 'listHeader')}\n              onClick={() => setExpanded(!expanded)}>\n              <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n            </p>\n            {expanded && <div className='listContainer'>\n              <Tasks tasks={data.tasks}/>\n            </div>}\n          </div>\n        );\n      } else {\n        return (\n          <div key={`${list.listType}:${list.id}`} className='listElements'>\n            <p className={classProvider(props.theme, 'listHeader')}\n              onClick={() => setExpanded(!expanded)}>\n              <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n            </p>\n            {expanded && <div className='listContainer'>\n              <Task status={false} task={{task: 'error occurred while loading tasks'}}/>\n            </div>}\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div key={`${list.listType}:${list.id}`} className='listElements'>\n          <p className={classProvider(props.theme, 'listHeader')}\n            onClick={() => setExpanded(!expanded)}>\n            <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n          </p>\n          {expanded && <div className='listContainer'>\n            <Task status={false} task={{task: 'loading tasks'}}/>\n          </div>}\n        </div>\n      );\n    }\n  };\n\n  const Tasks = ({tasks}) => {\n    if (tasks.length > 0) {\n      return (\n        <div className='listContainer'>\n          {tasks.map(t => {\n            return <Task key={`task:${t.id}`} status={true} task={t}/>;\n          })}\n        </div>\n      );\n    } else {\n      return (\n        <div className='listContainer'>\n          <Task status={false} task={{task: 'no tasks'}}/>\n        </div>\n      );\n    }\n  };\n\n  const AddTask = () => {};\n\n  const AddList = () => {};\n\n  return props.show\n    ? <div className='app'>\n      <Lists/>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(Tasker);","// RFF demo project\n// Transporter.js\n// React component that renders public transport information -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/transporter.css';\nimport HslHrtIcon from './icons/hsl/HslHrtIcon';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {};\n\nconst Transporter = (props) => {\n  const client = useApolloClient();\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>Tracked stops:</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transporter);","// RFF demo project\n// Connector.js\n// provides REST via Axios for application to use\n\nimport axios from 'axios';\n\nconst countriesUrl = 'https://restcountries.eu/rest/v2/all';\n\nconst getCountries = async () => {\n  return await axios.get(countriesUrl);\n};\n\nexport default {\n  getCountries\n};","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($token: String!, $newUsername: String, $newPassword: String, $password: String!) {\n    updateUser(newUsername: $newUsername, newPassword: $newPassword, token: $token, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// UserSettings.js\n// React component that renders user settings -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {\n  loginFailure, loginSuccess\n} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst UserPage = (props) => {\n  const client = useApolloClient();\n\n  const UserManager = () => {\n    return (\n      <div className='commonElements'>\n        <h5 className={classProvider(props.theme, 'heading')}>User information</h5>\n        <UserData/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change password</h5>\n        <ChangePassword/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change username</h5>\n        <ChangeUsername/>\n      </div>\n    );\n  };\n\n  const UserData = () => {\n    return (\n      <>\n        <p className={classProvider(props.theme, 'description')}>User: <strong>{props.user.getUsername()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Role: <strong>{props.user.getRole()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Active: <strong>{props.user.getActive() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Removable: <strong>{props.user.getRemovable() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>ID: <strong>{props.user.getId()}</strong></p>\n      </>\n    );\n  };\n\n  const ChangeUsername = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handleUsernameChange(event)}>\n        <input id='changeUsernamePW' type='password' required placeholder='password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changeUsernameNew' type='text' required placeholder='new username'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>change username</button>\n      </form>\n    );\n  };\n\n  const ChangePassword = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handlePasswordChange(event)}>\n        <input id='changePasswordOld' type='password' required placeholder='old password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordNew' type='password' required placeholder='new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordConfirm' type='password' required placeholder='retype new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>\n          change password\n        </button>\n      </form>\n    );\n  };\n\n  const handlePasswordChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changePasswordOld').value;\n    const newPassword = document.getElementById('changePasswordNew').value;\n    const confirm = document.getElementById('changePasswordConfirm').value;\n    newPassword === confirm\n      ? await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          token: localStorage.getItem('rffUserToken').toString().substring(7),\n          password: password,\n          newPassword: newPassword === confirm && newPassword\n        }\n      }).then((result, errors) => {\n        if (!errors) {\n          client.mutate({\n            mutation: LOGIN,\n            variables: {\n              username: props.user.username,\n              password: newPassword\n            }\n          }).then((result, errors) => {\n            if (!errors) {\n              const token = result.data.login.value;\n              client.query({\n                query: ME,\n                variables: {\n                  token: token.substring(7)\n                }\n              }).then((result, errors) => {\n                if (!errors) {\n                  localStorage.setItem('rffUserToken', token);\n                  props.loginSuccess(result.data.me);\n                  props.handleInfo('login renewed');\n                } else {\n                  props.loginFailure();\n                  props.handleError(errors[0]);\n                }\n              });\n            } else {\n              props.handleError(errors[0]);\n            }\n          });\n        } else {\n          props.handleError(errors[0]);\n        }\n      })\n      : props.handleError({message: 'New passwords do not match'});\n    document.getElementById('changePasswordOld').value = '';\n    document.getElementById('changePasswordNew').value = '';\n    document.getElementById('changePasswordConfirm').value = '';\n  };\n\n  const handleUsernameChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changeUsernamePW').value;\n    const newUsername = document.getElementById('changeUsernameNew').value;\n    await client.mutate({\n      mutation: UPDATE_USER,\n      variables: {\n        token: localStorage.getItem('rffUserToken').toString().substring(7),\n        password: password,\n        newUsername: newUsername\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        client.mutate({\n          mutation: LOGIN,\n          variables: {\n            username: newUsername,\n            password: password\n          }\n        }).then((result, errors) => {\n          if (!errors) {\n            const token = result.data.login.value;\n            client.query({\n              query: ME,\n              variables: {\n                token: token.substring(7)\n              }\n            }).then((result, errors) => {\n              if (!errors) {\n                localStorage.setItem('rffUserToken', token);\n                props.loginSuccess(result.data.me);\n                props.handleInfo('login renewed');\n              } else {\n                props.loginFailure();\n                props.handleError(errors[0]);\n              }\n            });\n          } else {\n            props.handleError(errors[0]);\n          }\n        });\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <UserManager/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n\n/*<form className='commonElements'>\n//           <input type='text' placeholder='username' onChange={({target}) => props.setUsername(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.username} autoComplete={true}/>\n//           <input type='password' placeholder='password' onChange={({target}) => props.setPassword(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.password} autoComplete={true}/>\n//           <button type='button' onClick={() => handleLogin()}\n//                   className={classProvider(props.theme, 'formElement')}>login</button>\n//           <Link to='/register' onClick={() => props.switchApp('Register')}\n//                 className={classProvider(props.theme, 'formElement')}>register</Link>\n//         </form>*/","// RFF demo project\n// App.js\n// webapp file - provides Redux store and Apollo clients for application components\n// creates client side routing for webapp with React Router\n// creates base structure for app layout\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\n\nimport {ApolloClient} from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {setContext} from 'apollo-link-context';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {split} from 'apollo-link';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {getMainDefinition} from 'apollo-utilities';\n\nimport './core/style/root.css';\n\nimport Navigation from './components/Navigation';\nimport AdminTools from './components/AdminTools';\nimport About from './components/About';\nimport Calculate from './components/Calculate';\nimport Dashboard from './components/Dashboard';\nimport Dishy from './components/Dishy';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport OpenCountry from './components/OpenCountry';\nimport RegistrationPage from './components/RegistrationPage';\nimport Tasker from './components/Tasker';\nimport Transporter from './components/Transporter';\nimport Connector from './core/services/Connector';\nimport UserPage from './components/UserSettings';\n\nimport {initCountries} from './core/store/reducers/CountryReducer';\nimport {switchApp} from './core/store/reducers/AppReducer';\n\nconst mapDispatchToProps = {\n  initCountries, switchApp\n};\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    app: state.appState.application,\n    dishyState: state.dishyState,\n    loginState: state.loginState\n  };\n};\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_WEBSOCKET,\n  options: {reconnect: true}\n});\nconst httpLink = createHttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_ENDPOINT\n});\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('rffUserToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null\n    }\n  };\n});\nconst rffLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst hslLink = createHttpLink({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\n});\n\nconst rffClient = new ApolloClient({\n  link: rffLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst hslClient = new ApolloClient({\n  link: hslLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst App = (props) => {\n  // const url = window.location.href;\n  useEffect(() => {\n    document.body.className = props.theme;\n  });\n  useEffect(() => {\n    async function init() {\n      await Connector.getCountries().then(response => {\n        props.initCountries(response.data);\n      });\n    }\n    init();\n  }, [props]);\n\n  const Rff = () => {\n    const {user} = props.loginState;\n    return (\n      <Switch>\n        <Route exact path='/' render={(props) => <LandingPage {...props} show={true}/>}/>\n        <Route path='/about' render={(props) => <About {...props} show={true}/>}/>\n        <Route path='/admin' render={(props) => <AdminTools {...props}\n          show={user !== null && (user.role === 'admin' || user.role === 'owner')}/>}/>\n        <Route path='/calculate' render={(props) => <Calculate {...props} show={true}/>}/>\n        <Route path='/countries' render={(props) => <OpenCountry {...props} show={true}/>}/>\n        <Route path='/dashboard' render={(props) => <Dashboard {...props} show={user !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/dishy' render={(props) => <Dishy {...props} show={user !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/login' render={(props) => <LoginPage {...props} show={user === null}/>}/>\n        <Route path='/register' render={(props) => <RegistrationPage {...props} show={user === null}/>}/>\n        <Route path='/tasker' render={(props) => <Tasker {...props} show={user !== null}/>}/>\n        <Route path='/user' render={(props) => <UserPage {...props} show={user !== null}/>}/>\n      </Switch>\n    );\n  };\n\n  const Hsl = () => {\n    return (\n      <Switch>\n        <Route path='/transit' render={(props) => <Transporter {...props}/>}/>\n      </Switch>\n    );\n  };\n\n  return(\n    <div className='appContainer'>\n      <Router basename='/'>\n        <ApolloProvider client={rffClient}>\n          <Navigation/>\n          <Rff/>\n        </ApolloProvider>\n        <ApolloProvider client={hslClient}>\n          <Hsl/>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// RFF demo project\n// RegReducer.js\n// creates reducer to Redux global state for application to use - registration\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setNewUserName':\n    return {...state, newUserName: action.name};\n  case 'setNewUserUsername':\n    return {...state, newUserUsername: action.username};\n  case 'setNewUserPassword':\n    return {...state, newUserPassword: action.password};\n  case 'setConfirmNewUserPassword':\n    return {...state, confirmNewUserPassword: action.password};\n  case 'successfulReg':\n    return {...initialState};\n  case 'unsuccessfulReg':\n    return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n  case 'resetReg':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport default RegReducer;","// RFF demo project\n// Store.js\n// creates Redux global state for application\n\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport AppReducer from './reducers/AppReducer';\nimport CountryReducer from './reducers/CountryReducer';\nimport LoginReducer from './reducers/LoginReducer';\nimport RegReducer from './reducers/RegReducer';\nimport DishyReducer from './reducers/DishyReducer';\n\nconst reducers = combineReducers({\n  appState: AppReducer,\n  countryState: CountryReducer,\n  loginState: LoginReducer,\n  regState: RegReducer,\n  dishyState: DishyReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","// RFF demo project\n// index.js\n// webapp root file - provides Redux store for application\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './core/store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}