{"version":3,"sources":["core/classes/User.js","core/store/reducers/LoginReducer.js","core/store/reducers/AppReducer.js","core/tools/classProvider.js","core/graphql/rff/fragments/f_userFragment.js","core/graphql/rff/queries/q_me.js","components/Navigation.js","components/widgets/CountryCount.js","core/graphql/rff/queries/q_groupCount.js","components/widgets/GroupCount.js","core/graphql/rff/queries/q_allListCount.js","core/graphql/rff/queries/q_listCount.js","components/widgets/ListCount.js","core/graphql/rff/queries/q_taskCount.js","core/graphql/rff/queries/q_allTaskCount.js","components/widgets/TaskCount.js","core/graphql/rff/queries/q_dishCount.js","components/widgets/DishCount.js","core/graphql/rff/queries/q_carbCount.js","core/graphql/rff/queries/q_proteinCount.js","core/graphql/rff/queries/q_spiceCount.js","components/widgets/IngredientCount.js","core/graphql/rff/queries/q_methodCount.js","components/widgets/MethodCount.js","components/widgets/TrackedStopsCount.js","core/graphql/rff/queries/q_userCount.js","components/widgets/UserCount.js","components/AdminTools.js","components/widgets/Colors.js","components/widgets/Technologies.js","components/widgets/OtherStyles.js","components/About.js","components/Calculate.js","components/Dashboard.js","core/graphql/rff/fragments/f_ingredientFragment.js","core/graphql/rff/queries/q_allCarbs.js","core/graphql/rff/queries/q_allProteins.js","core/graphql/rff/queries/q_allSpices.js","core/graphql/rff/fragments/f_methodFragment.js","core/graphql/rff/queries/q_allMethods.js","core/graphql/rff/fragments/f_dishIngredientFragment.js","core/graphql/rff/fragments/f_dishMethodFragment.js","core/graphql/rff/fragments/f_dishFragment.js","core/graphql/rff/queries/q_allDishes.js","core/graphql/rff/mutations/m_addMethod.js","core/graphql/rff/mutations/m_addIngredient.js","core/graphql/rff/mutations/m_addDish.js","core/graphql/rff/subscriptions/s_dishAdded.js","core/graphql/rff/subscriptions/s_dishUpdated.js","core/graphql/rff/subscriptions/s_dishRemoved.js","core/graphql/rff/subscriptions/s_dishVoted.js","core/graphql/rff/subscriptions/s_ingredientAdded.js","core/graphql/rff/subscriptions/s_ingredientUpdated.js","core/graphql/rff/subscriptions/s_ingredientRemoved.js","core/graphql/rff/subscriptions/s_methodAdded.js","core/graphql/rff/subscriptions/s_methodUpdated.js","core/graphql/rff/subscriptions/s_methodRemoved.js","core/store/reducers/DishyReducer.js","components/Dishy.js","core/graphql/rff/fragments/f_newsFragment.js","core/graphql/rff/queries/q_news.js","components/LandingPage.js","core/graphql/rff/mutations/m_login.js","components/LoginPage.js","core/store/reducers/CountryReducer.js","core/classes/Country.js","components/widgets/CountryDetails.js","components/OpenCountry.js","core/graphql/rff/mutations/m_addUser.js","components/RegistrationPage.js","core/graphql/rff/fragments/f_groupListFragment.js","core/graphql/rff/queries/q_groupLists.js","core/graphql/rff/fragments/f_privateListFragment.js","core/graphql/rff/queries/q_privateLists.js","core/graphql/rff/fragments/f_taskFragment.js","core/graphql/rff/queries/q_tasks.js","core/graphql/rff/subscriptions/s_taskAdded.js","core/graphql/rff/subscriptions/s_taskUpdated.js","core/graphql/rff/subscriptions/s_taskRemoved.js","core/graphql/rff/subscriptions/s_listAddedGroup.js","core/graphql/rff/subscriptions/s_listAddedPrivate.js","core/graphql/rff/subscriptions/s_listRemovedGroup.js","core/graphql/rff/subscriptions/s_listRemovedPrivate.js","core/graphql/rff/fragments/f_groupFragment.js","core/graphql/rff/queries/q_groups.js","core/graphql/rff/mutations/m_addTask.js","core/graphql/rff/mutations/m_addListGroup.js","core/graphql/rff/mutations/m_addListPrivate.js","core/graphql/rff/mutations/m_taskPriority.js","core/graphql/rff/mutations/m_taskActivation.js","core/graphql/rff/mutations/m_taskDeactivation.js","core/graphql/rff/mutations/m_removeTask.js","components/Tasker.js","components/Transporter.js","core/services/Connector.js","core/graphql/rff/mutations/m_updateUser.js","components/UserSettings.js","App.js","serviceWorker.js","core/store/reducers/RegReducer.js","core/store/Store.js","index.js"],"names":["User","props","this","state","username","role","id","active","removable","propTypes","PropTypes","string","bool","initialState","user","loginFailure","dispatch","a","type","loginSuccess","LoginReducer","action","repository","url","name","theme","application","notification","switchApp","app","handleError","error","message","setTimeout","handleInfo","info","AppReducer","classProvider","element","USER_DETAILS","gql","ME","mapDispatchToProps","switchTheme","localStorage","setItem","logout","connect","appState","loginState","useApolloClient","themes","setTheme","getItem","useEffect","ThemeSelector","className","map","t","key","onClick","to","getRole","getUsername","removeItem","countries","countryState","length","GROUP_COUNT","userToken","substring","mode","useQuery","variables","token","data","loading","groupCount","ALL_LIST_COUNT","LIST_COUNT","listCount","allListCount","TASK_COUNT","ALL_TASK_COUNT","countType","taskCount","allTaskCount","DISH_COUNT","dishCount","CARB_COUNT","PROTEIN_COUNT","SPICE_COUNT","carbResult","proteinResult","spiceResult","carbCount","proteinCount","spiceCount","METHOD_COUNT","methodCount","USER_COUNT","userCount","show","push","frontend","icon","reactIcon","ReduxIcon","graphqlIcon","apollostackIcon","backend","logoNodejs","expressIcon","mongodbIcon","testing","jestIcon","cypressIcon","tools","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","altairIcon","repo","href","f","b","d","dt","useState","value1","setValue1","value2","setValue2","Addition","result","Number","Subtraction","numbro","format","thousandSeparated","trimMantissa","mantissa","Division","Multiplication","Exponentiation","res1","res2","res3","Cube","RootSquare","Math","sqrt","RootCubic","cbrt","placeholder","onChange","target","value","common","link","advanced","INGREDIENT_DETAILS","ALL_CARBS","ALL_PROTEINS","ALL_SPICES","METHOD_DETAILS","ALL_METHODS","DISH_INGREDIENT_DETAILS","DISH_METHOD_DETAILS","DISH_DETAILS","ALL_DISHES","ADD_METHOD","ADD_INGREDIENT","ADD_DISH","DISH_ADDED","DISH_UPDATED","DISH_REMOVED","DISH_VOTED","INGREDIENT_ADDED","INGREDIENT_UPDATED","INGREDIENT_REMOVED","METHOD_ADDED","METHOD_UPDATED","METHOD_REMOVED","carbSearch","proteinSearch","spiceSearch","methodSearch","newDish","newDishCarbs","newDishProteins","newDishSpices","newDishMethods","DishyReducer","carb","protein","spice","method","initDish","resetDish","addDishCarb","addDishProtein","addDishSpice","addDishMethod","dishyState","client","carbResults","proteinResults","spiceResults","methodResults","dishResults","useSubscription","fetchPolicy","onSubscriptionData","dish","subscriptionData","dishAdded","updateCacheWithDish","dishUpdated","dishVoted","dishRemoved","ingredient","ingredientAdded","updateCacheWithCarb","updateCacheWithProtein","updateCacheWithSpice","ingredientUpdated","methodAdded","updateCacheWithMethod","methodUpdated","methodRemoved","eventType","includedIn","set","object","c","includes","readQuery","query","dataInStore","allCarbs","writeQuery","concat","forEach","p","allProteins","s","allSpices","m","allMethods","allDishes","Loading","Error","Empty","handleAddComponent","event","component","preventDefault","filter","handleNewComponent","document","getElementById","mutate","mutation","errorPolicy","then","addIngredient","addMethod","DishComponentForm","selection","NewCarb","NewMethod","NewProtein","NewSpice","minLength","required","handleNewDish","note","cookingMethods","proteins","carbs","spices","resetDishForm","Dish","view","methods","DishComponents","components","viewType","Component","uses","resultCount","random","floor","setSelection","defaultValue","JSON","parse","disabled","stringify","NEWS_DETAILS","NEWS","News","news","n","LOGIN","useMutation","login","password","loginToken","me","countrySearch","selected","setSearch","search","CountryReducer","Country","numericCode","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","timezones","borders","nativeName","currencies","languages","flag","array","subRegion","number","country","Alias","alts","getAltSpellings","Borders","getBorders","Calling","codes","getCallingCodes","Currency","getCurrencies","code","symbol","Domain","domains","getDomain","CountryFlag","Image","size","src","getFlag","Language","getLanguages","l","Timezones","zones","getTimezones","z","getNumericCode","getName","overrideSearch","multi","Flag","getAlpha2","toLowerCase","getNativeName","getCapital","getRegion","getSubregion","getPopulation","getAlpha3","resetSearch","matched","handleSearch","onReset","title","resetIcon","i","ADD_USER","register","confirm","onSubmit","autoComplete","GROUP_LIST_DETAILS","GROUP_LISTS","PRIVATE_LIST_DETAILS","PRIVATE_LISTS","TASK_DETAILS","TASKS","TASK_ADDED","TASK_UPDATED","TASK_REMOVED","LIST_ADDED_GROUP","LIST_ADDED_PRIVATE","LIST_REMOVED_GROUP","LIST_REMOVED_PRIVATE","GROUP_DETAILS","GROUPS","ADD_TASK","ADD_LIST_GROUP","ADD_LIST_PRIVATE","TASK_PRIORITY","TASK_ACTIVATION","TASK_DEACTIVATION","REMOVE_TASK","tasker","taskerState","task","taskAdded","updateCacheWithTask","taskUpdated","taskRemoved","list","listAddedPrivate","updateCacheWithPrivatelist","listRemovedPrivate","listAddedGroup","updateCacheWithGrouplist","listRemovedGroup","listID","tasks","privateLists","groupLists","Flagged","flagged","flagVariant","flagVariantOutline","TaskEmpty","Task","status","TaskError","TaskLoading","ListsP","AddList","listType","List","ListsG","expanded","setExpanded","userShield","usersIcon","AddTask","Tasks","handleSaveTask","priority","addTask","handleSaveList","groupID","group","addListGroup","addListPrivate","setPriority","groupSelection","setGroupSelection","groups","g","handlePriority","taskPriority","handleCompletion","taskDeactivation","taskActivation","handleRemoval","removeTask","getCountries","axios","get","UPDATE_USER","UserData","getActive","getRemovable","getId","ChangeUsername","handleUsernameChange","ChangePassword","handlePasswordChange","newPassword","toString","errors","newUsername","initCountries","wsLink","WebSocketLink","uri","process","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","rffLink","split","getMainDefinition","kind","operation","hslLink","rffClient","ApolloClient","cache","InMemoryCache","connectToDevTools","hslClient","body","Connector","response","init","basename","exact","path","render","Calculate","OpenCountry","Boolean","window","location","hostname","match","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","reducers","combineReducers","regState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d9704e5.chunk.js","sourcesContent":["// RFF demo project\n// Country.js\n// creates User-class for application to use - users\n\nimport PropTypes from 'prop-types';\n\nclass User {\n  constructor(props) {\n    this.state = {\n      username: props.username,\n      role: props.role,\n      id: props.id,\n      active: props.active,\n      removable: props.removable\n    };\n  }\n  getUsername() {\n    return this.state.username;\n  }\n  getRole() {\n    return this.state.role;\n  }\n  getId() {\n    return this.state.id;\n  }\n  getActive() {\n    return this.state.active;\n  }\n  getRemovable() {\n    return this.state.removable;\n  }\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  role: PropTypes.string,\n  id: PropTypes.string,\n  active: PropTypes.bool,\n  removable: PropTypes.bool\n};\n\nexport default User;","// RFF demo project\n// LoginReducer.js\n// creates reducer to Redux global state for application to use - login\n\nimport User from '../../classes/User';\n\nconst initialState = {\n  user: null\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'loginSuccess':\n    return {...state, user: new User(action.user)};\n  case 'loginFailure':\n    return {...state};\n  case 'logout':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport const loginFailure = () => {\n  return async dispatch => {\n    dispatch({type: 'loginFailure'});\n  };\n};\nexport const loginSuccess = (user) => {\n  return async dispatch => {\n    dispatch({type: 'loginSuccess', user: user});\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({type: 'logout'});\n  };\n};\n\nexport default LoginReducer;","// RFF demo project\n// AppReducer.js\n// creates reducer to Redux global state for application to use - app in general\n\nconst initialState = {\n  repository: {\n    url: 'https://github.com/RedFoxFinn/rff-project',\n    name: 'rff-demo-project'\n  },\n  theme: 'light',\n  application: 'Home',\n  notification: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'fu':\n    return {...state};\n  case 'switchApplication':\n    return {...state, application: action.application};\n  case 'switchTheme':\n    return {...state, theme: action.theme};\n  case 'setNotification':\n    return {...state, notification: action.notification};\n  case 'resetNotification':\n    return {...state, notification: null};\n  default:\n    return state;\n  }\n};\n\nexport const switchApp = (app) => {\n  return async dispatch => {\n    dispatch({\n      type: 'switchApplication', application: app\n    });\n  };\n};\n\nexport const switchTheme = (theme) => {\n  return async dispatch => {\n    localStorage.setItem('rffTheme', theme);\n    dispatch({\n      type: 'switchTheme', theme: theme\n    });\n  };\n};\n\nexport const handleError = (error) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'error', message: error}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\nexport const handleInfo = (info) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'info', message: info}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\n\nexport default AppReducer;","// RFF demo project\n// classProvider.js\n// provides predefined CSS-classes for application to use based on selected theme\n\nconst classProvider = (theme, element) => {\n  if (theme === 'dark') {\n    switch(element) {\n    case 'news': return 'newsDa';\n    case 'tableCell': return 'tableCellDa';\n    case 'table': return 'tableDa';\n    case 'tableRow': return 'tableRowDa';\n    case 'navMenu': return 'navMenuDa';\n    case 'navSubMenu': return 'navSubMenuDa';\n    case 'navButton': return 'navButtonDa';\n    case 'navSubButton': return 'navSubButtonDa';\n    case 'navContent': return 'navContentDa';\n    case 'navSubContent': return 'navSubContentDa';\n    case 'heading': return 'headingDa';\n    case 'formElement': return 'formElementDa';\n    case 'calculateElement': return 'formElementDa';\n    case 'calculateResult': return 'calculateResultDa';\n    case 'technologyElement': return 'technologyElementDa';\n    case 'text': return 'textDa';\n    case 'loginButton': return 'loginButtonDa';\n    case 'loginContent': return 'loginContentDa';\n    case 'loginMenu': return 'loginMenuDa';\n    case 'link': return 'linkDa';\n    case 'description': return 'descriptionDa';\n    case 'countrySearch': return 'searchElementDa';\n    case 'countrySearchCancel': return 'searchCancelDa';\n    case 'countryDetails': return 'countryDetailsDa';\n    case 'dishyElement': return 'dishyElementDa';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsDa';\n    case 'linkButton': return 'linkButtonDa';\n    case 'notificationInfo': return 'notificationInfoDa';\n    case 'notificationError': return 'notificationErrorDa';\n    case 'notificationNull': return 'notificationNullDa';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionDa';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'dashTile': return 'dashTile';\n    case 'listHeader': return 'listHeaderDa';\n    case 'listDescription': return 'listDescriptionDa';\n    case 'task': return 'taskDa';\n    case 'selector': return 'selectorDa';\n    case 'selected': return 'selectedDa';\n    case 'activator': return 'activatorDa';\n    case 'deactivator': return 'deactivatorDa';\n    case 'field': return 'fieldDa';\n    case 'noteArea': return 'noteAreaDa';\n    default: return '';\n    }\n  } else {\n    switch(element) {\n    case 'news': return 'newsLi';\n    case 'tableCell': return 'tableCellLi';\n    case 'table': return 'tableLi';\n    case 'tableRow': return 'tableRowLi';\n    case 'navMenu': return 'navMenuLi';\n    case 'navSubMenu': return 'navSubMenuLi';\n    case 'navButton': return 'navButtonLi';\n    case 'navSubButton': return 'navSubButtonLi';\n    case 'navContent': return 'navContentLi';\n    case 'navSubContent': return 'navSubContentLi';\n    case 'heading': return 'headingLi';\n    case 'formElement': return 'formElementLi';\n    case 'calculateElement': return 'formElementLi';\n    case 'calculateResult': return 'calculateResultLi';\n    case 'technologyElement': return 'technologyElementLi';\n    case 'text': return 'textLi';\n    case 'loginButton': return 'loginButtonLi';\n    case 'loginContent': return 'loginContentLi';\n    case 'loginMenu': return 'loginMenuLi';\n    case 'link': return 'linkLi';\n    case 'description': return 'descriptionLi';\n    case 'countrySearch': return 'searchElementLi';\n    case 'countrySearchCancel': return 'searchCancelLi';\n    case 'countryDetails': return 'countryDetailsLi';\n    case 'dishyElement': return 'dishyElementLi';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsLi';\n    case 'linkButton': return 'linkButtonLi';\n    case 'notificationInfo': return 'notificationInfoLi';\n    case 'notificationError': return 'notificationErrorLi';\n    case 'notificationNull': return 'notificationNullLi';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionLi';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'listHeader': return 'listHeaderLi';\n    case 'listDescription': return 'listDescriptionLi';\n    case 'task': return 'taskLi';\n    case 'selector': return 'selectorLi';\n    case 'selected': return 'selectedLi';\n    case 'activator': return 'activatorLi';\n    case 'deactivator': return 'deactivatorLi';\n    case 'field': return 'fieldLi';\n    case 'noteArea': return 'noteAreaLi';\n    default: return '';\n    }\n  }\n};\n\nexport default classProvider;","\nimport gql from 'graphql-tag';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    username\n    role\n    removable\n    active\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ME = gql`\n  query me($token: String!) {\n    me(token: $token) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// Navigation.js\n// React component that renders navigation-section of the webapp\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {handleError, handleInfo, switchApp, switchTheme} from '../core/store/reducers/AppReducer';\nimport {logout, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/navigation.css';\nimport '../core/style/global.css';\n\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  switchApp, switchTheme, logout, loginSuccess, handleError, handleInfo\n};\n\nconst Navigation = (props) => {\n\n  const client = useApolloClient();\n  const themes = ['light', 'dark'];\n  const theme = props.appState.theme;\n  const setTheme = localStorage.getItem('rffTheme');\n\n  // hook that handles theme setting if localstorage already has set theme for webapp\n  useEffect(() => {\n    setTheme !== null && props.switchTheme(setTheme);\n  }, []);\n\n  // module that renders main menu of the webapp\n  const MenuModule = () => {\n    return (\n      <div className={classProvider(theme, 'navMenu')}>\n        <button className={classProvider(theme, 'navButton')}>menu</button>\n        <div className={classProvider(theme, 'navContent')}>\n          <Link to='/' onClick={() => props.switchApp('Home')}>Home</Link>\n          <Link to='/dashboard' onClick={() => props.switchApp('Dashboard')}>Dashboard</Link>\n          <Link to='/calculate' onClick={() => props.switchApp( 'Calculate')}>Calculate</Link>\n          <Link to='/countries' onClick={() => props.switchApp( 'OpenCountry')}>OpenCountry</Link>\n          <Link to='/dishy' onClick={() => props.switchApp( 'Dishy')}>Dishy</Link>\n          {props.loginState.user && <Link to='/tasker' onClick={() => props.switchApp( 'Tasker')}>Tasker</Link>}\n          <Link to='/transit' onClick={() => props.switchApp( 'Transporter')}>Transporter</Link>\n          {props.loginState.user && (props.loginState.user.getRole() === 'admin' || props.loginState.user.getRole() === 'owner')\n            && <Link to='/admin' onClick={() => props.switchApp( 'Admin tools')}>Admin tools</Link>}\n          <Link to='/about' onClick={() => props.switchApp( 'About')}>About</Link>\n          <ThemeSelector/>\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles theme selection\n  const ThemeSelector = () => {\n    return (\n      <div className={classProvider(theme, 'navSubMenu')}>\n        <button className={classProvider(theme, 'navSubButton')}>\n          <strong>{props.appState.theme}</strong> theme selected\n        </button>\n        <div className={classProvider(theme, 'navSubContent')}>\n          {themes.map((t) =>\n            <a key={t} onClick={() => props.switchTheme(t)}>{t}</a>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles rendering login session menu & actions\n  const LoginModule = () => {\n    if (!localStorage.getItem('rffUserToken')) {\n      return (\n        <div className={classProvider(theme, 'loginMenu')}>\n          <Link to='/login' onClick={() => props.switchApp('Login')}>login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(theme, 'navMenu')}>\n          <button type='button' className={classProvider(theme, 'navButton')}>\n            {props.loginState.user !== null ? props.loginState.user.getUsername() : null}\n          </button>\n          <div className={classProvider(theme, 'navContent')}>\n            <Link to='/user' onClick={() => props.switchApp('UserSettings')}>settings</Link>\n            <Link to='/' onClick={() => logout()}>logout</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // login session helper function\n  function logout() {\n    props.logout();\n    localStorage.removeItem('rffUserToken');\n    props.handleInfo('logged out');\n    props.switchApp('Home');\n  }\n\n  // module that handles rendering notifications\n  const NotificationModule = () => {\n    const notification = props.appState.notification;\n\n    if (notification && notification.type === 'info') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationInfo')}>{notification.message}</h4>\n        </div>\n      );\n    } else if (notification && notification.type === 'error') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationError')}>{notification.message}</h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationNull')}>{' '}</h4>\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='navRow'>\n      <MenuModule/>\n      <NotificationModule/>\n      <LoginModule/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","// RFF demo project\n// CountryCount.js\n// React component that renders country counter based on available country information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries\n  };\n};\n\nconst CountryCount = (props) => {\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.theme, 'tileDescription')}>\n        <strong>{props.countries.length}</strong> countries information available</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(CountryCount);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_COUNT = gql`\n  query groupCount($token: String!, $mode: String) {\n    groupCount(token: $token, mode: $mode)\n  }\n`;","// RFF demo project\n// GroupCount.js\n// React component that renders group counter based on user groups in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {GROUP_COUNT} from '../../core/graphql/rff/queries/q_groupCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst GroupCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.groupCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> group accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> groups accessible</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken,\n        mode: 'admin'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>all {data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(GroupCount);","\nimport gql from 'graphql-tag';\n\nexport const ALL_LIST_COUNT = gql`\n  query allListCount($token: String!) {\n    allListCount(token: $token)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const LIST_COUNT = gql`\n  query listCount($token: String!) {\n    listCount(token: $token)\n  }\n`;","// RFF demo project\n// ListCount.js\n// React component that renders list counter based on available task list information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport {useQuery} from '@apollo/react-hooks';\nimport '../../core/style/global.css';\n\nimport {ALL_LIST_COUNT} from '../../core/graphql/rff/queries/q_allListCount';\nimport {LIST_COUNT} from '../../core/graphql/rff/queries/q_listCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst ListCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading task list count</p>;\n    } else {\n      if (error) {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading task list\n          count</p>;\n      } else if (data) {\n        return data.listCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task list accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task lists accessible</p>;\n      }\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task list count</p>;\n    } else {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allListCount}</strong> task lists in database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task list count</p>;\n      }\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCount);","\nimport gql from 'graphql-tag';\n\nexport const TASK_COUNT = gql`\n  query taskCount($token: String!, $countType: String!) {\n    taskCount(token: $token, countType: $countType)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const ALL_TASK_COUNT = gql`\n  query allTaskCount($token: String!) {\n    allTaskCount(token: $token)\n  }\n`;","// RFF demo project\n// CountryCount.js\n// React component that renders task counter based on available task information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nimport {TASK_COUNT} from '../../core/graphql/rff/queries/q_taskCount';\nimport {ALL_TASK_COUNT} from '../../core/graphql/rff/queries/q_allTaskCount';\nimport {useQuery} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TaskCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(TASK_COUNT, {\n      variables: {\n        token: userToken,\n        countType: 'total'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.taskCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> task listed in accessible lists</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> tasks listed in accessible lists</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_TASK_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allTaskCount}</strong> tasks listed in the database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TaskCount);","\nimport gql from 'graphql-tag';\n\nexport const DISH_COUNT = gql`\n  query {\n    dishCount\n  }\n`;","// RFF demo project\n// DishCount.js\n// React component that renders dish counter based on available dish information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {DISH_COUNT} from '../../core/graphql/rff/queries/q_dishCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst DishCount = (props) => {\n  const {data, error, loading} = useQuery(DISH_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.dishCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dish available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dishes available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading dish count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading dish count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DishCount);","\n\nimport gql from 'graphql-tag';\n\nexport const CARB_COUNT = gql`\n  query {\n    carbCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const PROTEIN_COUNT = gql`\n  query {\n    proteinCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const SPICE_COUNT = gql`\n  query {\n    spiceCount\n  }\n`;","// RFF demo project\n// IngredientCount.js\n// React component that renders ingredient counter based on available ingredient information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {CARB_COUNT} from '../../core/graphql/rff/queries/q_carbCount.js';\nimport {PROTEIN_COUNT} from '../../core/graphql/rff/queries/q_proteinCount.js';\nimport {SPICE_COUNT} from '../../core/graphql/rff/queries/q_spiceCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst IngredientCount = (props) => {\n  const carbResult = useQuery(CARB_COUNT);\n  const proteinResult = useQuery(PROTEIN_COUNT);\n  const spiceResult = useQuery(SPICE_COUNT);\n  let data = 0;\n\n  const Count = () => {\n    if (!carbResult.loading && !proteinResult.loading && !spiceResult.loading) {\n      if (carbResult.data && proteinResult.data && spiceResult.data) {\n        data = carbResult.data.carbCount + proteinResult.data.proteinCount + spiceResult.data.spiceCount;\n        return data === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredient available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredients available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading ingredient count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading ingredient count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(IngredientCount);","\nimport gql from 'graphql-tag';\n\nexport const METHOD_COUNT = gql`\n  query {\n    methodCount\n  }\n`;","// RFF demo project\n// MethodCount.js\n// React component that renders method counter based on available cooking method information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {METHOD_COUNT} from '../../core/graphql/rff/queries/q_methodCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst MethodCount = (props) => {\n  const {data, error, loading} = useQuery(METHOD_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.methodCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking method available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking methods available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading cooking method count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading cooking method count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(MethodCount);","// RFF demo project\n// TrackedStopsCount.js\n// React component that renders stop counter based on available stop tracking information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TrackedStopsCount = (props) => {\n  const data = 0;\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.appState.theme, 'tileDescription')}><strong>{data}</strong> stops timetables tracked</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TrackedStopsCount);","\nimport gql from 'graphql-tag';\n\nexport const USER_COUNT = gql`\n  query userCount($token: String!) {\n    userCount(token: $token)\n  }\n`;","// RFF demo project\n// UserCount.js\n// React component that renders user counter based on available information\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useApolloClient, useQuery} from '@apollo/react-hooks';\n\nimport {USER_COUNT} from '../../core/graphql/rff/queries/q_userCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst UserCount = (props) => {\n  const userCount = useQuery(USER_COUNT, {\n    variables: {\n      token: localStorage.getItem('rffUserToken').substring(7)\n    }\n  });\n\n  const Count = () => {\n    if (props.mode === 'admin') {\n      if (userCount.loading) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileLoading')}>loading user count</p>\n        );\n      } else if (userCount.error) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading data</p>\n        );\n      } else if (userCount.data) {\n        return userCount.data.userCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> user</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> users</p>;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserCount);","// RFF demo project\n// AdminTools.js\n// React component that renders webapp administrative tools\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport CountryCount from './widgets/CountryCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport TaskCount from './widgets/TaskCount';\nimport DishCount from './widgets/DishCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport MethodCount from './widgets/MethodCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport UserCount from './widgets/UserCount';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst AdminTools = (props) => {\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <ListCount mode='admin'/>\n        <TaskCount mode='admin'/>\n        <GroupCount mode='admin'/>\n        <UserCount mode='admin'/>\n        <TrackedStopsCount mode='admin'/>\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>App statistics:</h4>\n        <WidgetsCommon/>\n        <WidgetsAdvanced/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>User management:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Group management:</h4>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(AdminTools);","// RFF demo project\n// Colors.js\n// React component that renders color palette available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Colors = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used color palette:</h4>\n        <div className='appElements'>\n          <div className='peru'/>\n          <div className='gainsboro'/>\n          <div className='darkslategrey'/>\n          <div className='yellowgreen'/>\n          <div className='reactblue'/>\n          <div className='slateblue'/>\n          <div className='deeppink'/>\n        </div>\n        <div className='appElements'>\n          <div className='seagreen'/>\n          <div className='googleblue'/>\n          <div className='googlered'/>\n          <div className='googleyellow'/>\n          <div className='googlegreen'/>\n          <div className='amazonorange'/>\n          <div className='heroku'/>\n        </div>\n        <div className='appElements'>\n          <div className='bus'/>\n          <div className='citybike'/>\n          <div className='tram'/>\n          <div className='train'/>\n          <div className='metro'/>\n          <div className='jokerilightrail'/>\n          <div className='ferry'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslpink'/>\n          <div className='hslpinklight'/>\n          <div className='hslgreen'/>\n          <div className='hslgreenlight'/>\n          <div className='hslwarning'/>\n          <div className='hslhighlight'/>\n          <div className='ferrylight'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslblue'/>\n          <div className='digitransit'/>\n          <div className='dgray'/>\n          <div className='gray'/>\n          <div className='lgray'/>\n          <div className='vlgray'/>\n          <div className='jbamber'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbsiena'/>\n          <div className='jbcrimson'/>\n          <div className='jbcarmine'/>\n          <div className='jbfuchsia'/>\n          <div className='jbmauve'/>\n          <div className='jblilac'/>\n          <div className='jbpurple'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbskyblue'/>\n          <div className='jbgreen'/>\n          <div className='jblemon'/>\n          <div className='slackblue'/>\n          <div className='slackgreen'/>\n          <div className='slackyellow'/>\n          <div className='slackred'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Colors);","// RFF demo project\n// Technologies.js\n// React component that renders information of used technologies in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Icon, InlineIcon} from '@iconify/react';\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport altairIcon from '@iconify/icons-logos/altair';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>},\n    {name: 'Altair', url: 'https://altair.sirmuel.design/', icon: <InlineIcon icon={altairIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>;\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>;\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>;\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>;\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>;\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>;\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Repository:</h4>\n        <Repository/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        <Front/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        <Back/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        <Data/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        <Testing/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);","// RFF demo project\n// OtherStyles.js\n// React component that renders information of miscellaneous styling available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst OtherStyles = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Other styles:</h4>\n        <div className='appElements'>\n          <a className={classProvider(props.appState.theme, 'link')} href='https://fonts.google.com/specimen/Raleway'>Font: Raleway</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(OtherStyles);","// RFF demo project\n// About.js\n// React component that renders information related to webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../core/style/global.css';\n\nimport Colors from './widgets/Colors';\nimport Technologies from './widgets/Technologies';\nimport OtherStyles from './widgets/OtherStyles';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst About = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <Technologies/>\n        <Colors/>\n        <OtherStyles/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(About);","// RFF demo project\n// Calculate.js\n// React component that renders simple calculator app\n\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/calculate.css';\nimport '../core/style/forms.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Calculator = (props) => {\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n\n  const Results = () => {\n    return (\n      <>\n        <div className='appElements'>\n          <Addition/>\n          <Multiplication/>\n          <Exponentiation/>\n          <Cube/>\n        </div>\n        <div className='appElements'>\n          <Subtraction/>\n          <Division/>\n          <RootSquare/>\n          <RootCubic/>\n        </div>\n      </>\n    );\n  };\n\n  const Addition = () => {\n    const result = Number(value1) + Number(value2);\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Addition</p>\n        <p>{value1} + {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Subtraction = () => {\n    const result = numbro(Number(value1) - Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Subtraction</p>\n        <p>{value1} - {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Division = () => {\n    if (Number(value2) === 0) {\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <a href='https://en.wikipedia.org/wiki/Division_by_zero'> nope </a>\n        </div>\n      );\n    } else {\n      const result = numbro(Number(value1) / Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <p>{value1} / {value2} {'\\u2243'} <strong>{result}</strong></p>\n        </div>\n      );\n    }\n  };\n  const Multiplication = () => {\n    const result = numbro(Number(value1) * Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Multiplication</p>\n        <p>{value1} * {value2} {'\\u2243'} <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Exponentiation = () => {\n    const res1 = numbro(Number(value1) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res3 = numbro(Number(value1) ** Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Exponentiation</p>\n        <p>{value1} ^ 2 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 2 {'\\u2243'} <strong>{res2}</strong></p>\n        <p>{value1} ^ {value2} {'\\u2243'} <strong>{res3}</strong></p>\n      </div>\n    );\n  };\n  const Cube = () => {\n    const res1 = numbro(Number(value1) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube</p>\n        <p>{value1} ^ 3 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 3 {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootSquare = () => {\n    const res1 = numbro(Math.sqrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.sqrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Square root</p>\n        <p>{'\\u221a'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221a'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootCubic = () => {\n    const res1 = numbro(Math.cbrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.cbrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube root</p>\n        <p>{'\\u221B'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221B'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <form className='appElements'>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue1(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue2(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n        </form>\n        <Results/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Calculator);","// RFF demo project\n// Dashboard.js\n// React component that renders information summary dashboard\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport CountryCount from './widgets/CountryCount';\nimport DishCount from './widgets/DishCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport MethodCount from './widgets/MethodCount';\nimport TaskCount from './widgets/TaskCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport {Link} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Dashboard = (props) => {\n  const common = [\n    {app: 'Calculate', link: '/calculate'},\n    {app: 'Dishy', link: '/dishy'},\n    {app: 'OpenCountry', link: '/countries'},\n  ];\n  const advanced = [\n    {app: 'Tasker', link: '/tasker'},\n    {app: 'Transporter', link: '/transit'},\n  ];\n\n  const ApplicationsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        {common.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const ApplicationsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        {advanced.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <GroupCount/>\n        <ListCount/>\n        <TaskCount/>\n        <TrackedStopsCount/>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Available applications:</h4>\n        <ApplicationsCommon/>\n        {props.user ? <ApplicationsAdvanced/> : null}\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Statistics:</h4>\n        <WidgetsCommon/>\n        {props.user ? <WidgetsAdvanced/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport gql from 'graphql-tag';\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    type\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_CARBS = gql`\n  query {\n    allCarbs {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_PROTEINS = gql`\n  query {\n    allProteins {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_SPICES = gql`\n  query {\n    allSpices {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const METHOD_DETAILS = gql`\n  fragment MethodDetails on CookingMethod {\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ALL_METHODS = gql`\n  query {\n    allMethods {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_INGREDIENT_DETAILS = gql`\n    fragment DishIngredientDetails on Ingredient {\n        type\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_METHOD_DETAILS = gql`\n    fragment DishMethodDetails on CookingMethod {\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\nimport {DISH_INGREDIENT_DETAILS} from './f_dishIngredientFragment';\nimport {DISH_METHOD_DETAILS} from './f_dishMethodFragment';\n\nexport const DISH_DETAILS = gql`\n  fragment DishDetails on Dish {\n    name\n    cookingMethods {\n        ...DishMethodDetails\n    }\n    proteins {\n        ...DishIngredientDetails\n    }\n    carbs {\n        ...DishIngredientDetails\n    }\n    spices {\n        ...DishIngredientDetails\n    }\n    karma\n    note\n    addedBy {\n      ...UserDetails\n    }\n    id\n  }\n  ${USER_DETAILS}\n  ${DISH_INGREDIENT_DETAILS}\n  ${DISH_METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ALL_DISHES = gql`\n  query {\n    allDishes {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ADD_METHOD = gql`\n  mutation addMethod($token: String!, $name: String!) {\n    addMethod(token: $token, name: $name) {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient($token: String!, $name: String!, $type: String!) {\n    addIngredient(token: $token, name: $name, type: $type) {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ADD_DISH = gql`\n  mutation addDish($token: String!, $name: String!, $cookingMethods: [String!]!,\n    $carbs: [String!]!, $proteins: [String!]!, $spices: [String!]!, $note: String!) {\n    addDish(token: $token, name: $name, cookingMethods: $cookingMethods,\n      carbs: $carbs, proteins: $proteins, spices: $spices, note: $note) {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_ADDED = gql`\n  subscription {\n    dishAdded {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_UPDATED = gql`\n  subscription {\n    dishUpdated {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_REMOVED = gql`\n  subscription {\n    dishRemoved {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_VOTED = gql`\n  subscription {\n    dishVoted {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_UPDATED = gql`\n  subscription {\n    ingredientUpdated {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_REMOVED = gql`\n  subscription {\n    ingredientRemoved {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_ADDED = gql`\n  subscription {\n    methodAdded {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_UPDATED = gql`\n  subscription {\n    methodUpdated {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_REMOVED = gql`\n  subscription {\n    methodRemoved {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","// RFF demo project\n// DishyReducer.js\n// creates reducer to Redux global state for application to use - dishy\n\nconst initialState = {\n  carbSearch: '',\n  proteinSearch: '',\n  spiceSearch: '',\n  methodSearch: '',\n  newDish: false,\n  newDishCarbs: [],\n  newDishProteins: [],\n  newDishSpices: [],\n  newDishMethods: []\n};\n\nconst DishyReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setCarbSearch':\n    return {...state, carbSearch: action.carbSearch};\n  case 'setProteinSearch':\n    return {...state, proteinSearch: action.proteinSearch};\n  case 'setSpiceSearch':\n    return {...state, spiceSearch: action.spiceSearch};\n  case 'setMethodSearch':\n    return {...state, methodSearch: action.methodSearch};\n  case 'setNewDish':\n    return {...state, newDish: true};\n  case 'setNewDishCarbs':\n    return {...state, newDishCarbs: [...state.newDishCarbs, action.carb]};\n  case 'setNewDishProteins':\n    return {...state, newDishProteins: [...state.newDishProteins, action.protein]};\n  case 'setNewDishSpices':\n    return {...state, newDishSpices: [...state.newDishSpices, action.spice]};\n  case 'setNewDishMethods':\n    return {...state, newDishMethods: [...state.newDishMethods, action.method]};\n  case 'resetNewDish':\n    return {...state, newDish: false, newDishCarbs: [], newDishProteins: [], newDishSpices: [], newDishMethods: []};\n  default:\n    return state;\n  }\n};\n\nexport const initDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDish'\n    });\n  };\n};\n\nexport const resetDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetNewDish'\n    });\n  };\n};\n\nexport const addDishCarb = (carb) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishCarbs', carb: {name: carb.name, id: carb.id}\n    });\n  };\n};\n\nexport const addDishProtein = (protein) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishProteins', protein: {name: protein.name, id: protein.id}\n    });\n  };\n};\n\nexport const addDishSpice = (spice) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishSpices', spice: {name: spice.name, id: spice.id}\n    });\n  };\n};\n\nexport const addDishMethod = (method) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishMethods', method: {name: method.name, id: method.id}\n    });\n  };\n};\n\nexport const setSearchCarb = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: search\n    });\n  };\n};\n\nexport const setSearchProtein = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: search\n    });\n  };\n};\n\nexport const setSearchSpice = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: search\n    });\n  };\n};\n\nexport const setSearchMethod = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: search\n    });\n  };\n};\n\nexport const resetSearchCarb = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: ''\n    });\n  };\n};\n\nexport const resetSearchProtein = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: ''\n    });\n  };\n};\n\nexport const resetSearchSpice = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: ''\n    });\n  };\n};\n\nexport const resetSearchMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: ''\n    });\n  };\n};\n\nexport default DishyReducer;","// RFF demo project\n// Dishy.js\n// React component that renders dish suggestion-section of the webapp\n\n// IMPORTS\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\n\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\nimport {ALL_PROTEINS} from '../core/graphql/rff/queries/q_allProteins';\nimport {ALL_SPICES} from '../core/graphql/rff/queries/q_allSpices';\nimport {ALL_METHODS} from '../core/graphql/rff/queries/q_allMethods';\nimport {ALL_DISHES} from '../core/graphql/rff/queries/q_allDishes';\nimport {ADD_METHOD} from '../core/graphql/rff/mutations/m_addMethod';\nimport {ADD_INGREDIENT} from '../core/graphql/rff/mutations/m_addIngredient';\nimport {ADD_DISH} from '../core/graphql/rff/mutations/m_addDish';\nimport {DISH_ADDED} from '../core/graphql/rff/subscriptions/s_dishAdded';\nimport {DISH_UPDATED} from '../core/graphql/rff/subscriptions/s_dishUpdated';\nimport {DISH_REMOVED} from '../core/graphql/rff/subscriptions/s_dishRemoved';\nimport {DISH_VOTED} from '../core/graphql/rff/subscriptions/s_dishVoted';\nimport {INGREDIENT_ADDED} from '../core/graphql/rff/subscriptions/s_ingredientAdded';\nimport {INGREDIENT_UPDATED} from '../core/graphql/rff/subscriptions/s_ingredientUpdated';\nimport {INGREDIENT_REMOVED} from '../core/graphql/rff/subscriptions/s_ingredientRemoved';\nimport {METHOD_ADDED} from '../core/graphql/rff/subscriptions/s_methodAdded';\nimport {METHOD_UPDATED} from '../core/graphql/rff/subscriptions/s_methodUpdated';\nimport {METHOD_REMOVED} from '../core/graphql/rff/subscriptions/s_methodRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {initDish, resetDish, addDishCarb, addDishProtein, addDishSpice,\n  addDishMethod} from '../core/store/reducers/DishyReducer';\n\n// prop mapper. maps imported state from store to usable props.\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    dishyState: state.dishyState,\n    user: state.loginState.user\n  };\n};\n\n// prop mapper. maps imported functions from store to usable props.\nconst mapDispatchToProps = {\n  initDish, resetDish, addDishCarb, addDishProtein, addDishSpice, addDishMethod,\n  handleInfo, handleError\n};\n\n// Dishy. application for site.\nconst Dishy = (props) => {\n  const client = useApolloClient();\n  const carbResults = useQuery(ALL_CARBS);\n  const proteinResults = useQuery(ALL_PROTEINS);\n  const spiceResults = useQuery(ALL_SPICES);\n  const methodResults = useQuery(ALL_METHODS);\n  const dishResults = useQuery(ALL_DISHES);\n\n  useSubscription(DISH_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishAdded;\n      updateCacheWithDish('added', dish);\n    }\n  });\n  useSubscription(DISH_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishUpdated;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_VOTED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishVoted;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishRemoved;\n      updateCacheWithDish('removed', dish);\n    }\n  });\n  useSubscription(INGREDIENT_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('added', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('added', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('added', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientUpdated;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('updated', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('updated', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('updated', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('removed', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('removed', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('removed', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(METHOD_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodAdded;\n      updateCacheWithMethod('added', method);\n    }\n  });\n  useSubscription(METHOD_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodUpdated;\n      updateCacheWithMethod('updated', method);\n    }\n  });\n  useSubscription(METHOD_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodRemoved;\n      updateCacheWithMethod('removed', method);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithCarb = async (eventType, carb) => {\n    const includedIn = (set, object) => set.map(c => c.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_CARBS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {allCarbs: dataInStore.allCarbs.concat(carb)}\n        });\n        props.handleInfo(`Carb added: ${carb.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.map(c => {\n              return c.id === carb.id ? carb : c;\n            })}\n        });\n        props.handleInfo(`Carb updated: ${carb.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.forEach(c => {\n              if (c.id !== carb.id) return c;\n            })}\n        });\n        props.handleInfo(`Carb removed: ${carb.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithProtein = async (eventType, protein) => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_PROTEINS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {allProteins: dataInStore.allProteins.concat(protein)}\n        });\n        props.handleInfo(`Protein added: ${protein.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.map(p => {\n              return p.id === protein.id ? protein : p;\n            })}\n        });\n        props.handleInfo(`Protein updated: ${protein.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.forEach(p => {\n              if (p.id !== protein.id) return p;\n            })}\n        });\n        props.handleInfo(`Protein removed: ${protein.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithSpice = async (eventType, spice) => {\n    const includedIn = (set, object) => set.map(s => s.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_SPICES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {allSpices: dataInStore.allSpices.concat(spice)}\n        });\n        props.handleInfo(`Spice added: ${spice.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.map(s => {\n              return s.id === spice.id ? spice : s;\n            })}\n        });\n        props.handleInfo(`Spice updated: ${spice.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.forEach(s => {\n              if (s.id !== spice.id) return s;\n            })}\n        });\n        props.handleInfo(`Spice removed: ${spice.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithMethod = async (eventType, method) => {\n    const includedIn = (set, object) => set.map(m => m.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_METHODS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {allMethods: dataInStore.allMethods.concat(method)}\n        });\n        props.handleInfo(`Method added: ${method.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.map(m => {\n              return m.id === method.id ? method : m;\n            })}\n        });\n        props.handleInfo(`Method updated: ${method.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.forEach(m => {\n              if (m.id !== method.id) return m;\n            })}\n        });\n        props.handleInfo(`Method removed: ${method.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithDish = async (eventType, dish) => {\n    const includedIn = (set, object) => set.map(d => d.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_DISHES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {allDishes: dataInStore.allDishes.concat(dish)}\n        });\n        props.handleInfo(`Dish added: ${dish.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.map(d => {\n              return d.id === dish.id ? dish : d;\n            })}\n        });\n        props.handleInfo(`Dish updated: ${dish.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.forEach(d => {\n              if (d.id !== dish.id) return d;\n            })}\n        });\n        props.handleInfo(`Dish removed: ${dish.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Loading = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>loading . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Error = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>something went wrong . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'data' is set but has no information.\n  const Empty = ({type}) => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>no {type} available</p>\n        </div>\n      </div>\n    );\n  };\n\n  // helper function to add ingredients or methods to new dish.\n  // checks whether or not instance of component has been added already before adding to list.\n  function handleAddComponent(event, component, type) {\n    event.preventDefault();\n    const {newDishCarbs, newDishProteins, newDishSpices, newDishMethods} = props.dishyState;\n    if (!props.dishyState.newDish) {\n      props.initDish();\n    }\n    switch (type) {\n    case 'carb':\n      if (!newDishCarbs.filter(c => c.id === component.id).length > 0) props.addDishCarb(component);\n      break;\n    case 'protein':\n      if (!newDishProteins.filter(p => p.id === component.id).length > 0) props.addDishProtein(component);\n      break;\n    case 'spice':\n      if (!newDishSpices.filter(s => s.id === component.id).length > 0) props.addDishSpice(component);\n      break;\n    case 'method':\n      if (!newDishMethods.filter(m => m.id === component.id).length > 0) props.addDishMethod(component);\n      break;\n    default:\n      break;\n    }\n  }\n\n  // subcomponent. renders selector for found carbs & selected carb information.\n  const Carbs = () => {\n    const [selection, setSelection] = useState(null);\n    if (carbResults.loading) {\n      return <Loading/>;\n    } else if (carbResults.data && carbResults.data.allCarbs) {\n      const resultCount = carbResults.data.allCarbs.length;\n      if (resultCount > 0) {\n        return (\n          <div id='carbSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='carbSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>carbs</option>\n                {carbResults.data.allCarbs.map((c) => <option key={c.id} value={JSON.stringify(c)}>{c.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedCarb' type='carb' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'carb')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='carbs'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found proteins & selected protein information.\n  const Proteins = () => {\n    const [selection, setSelection] = useState(null);\n    if (proteinResults.loading) {\n      return <Loading/>;\n    } else if (proteinResults.data && proteinResults.data.allProteins) {\n      const resultCount = proteinResults.data.allProteins.length;\n      if (resultCount > 0) {\n        return (\n          <div id='proteinSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='proteinSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>proteins</option>\n                {proteinResults.data.allProteins.map((p) => <option key={p.id} value={JSON.stringify(p)}>{p.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedProtein' type='protein' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'protein')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='proteins'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found spices & selected spice information.\n  const Spices = () => {\n    const [selection, setSelection] = useState(null);\n    if (spiceResults.loading) {\n      return <Loading/>;\n    } else if (spiceResults.data && spiceResults.data.allSpices) {\n      const resultCount = spiceResults.data.allSpices.length;\n      if (resultCount > 0) {\n        return (\n          <div id='spiceSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='spiceSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>spices</option>\n                {spiceResults.data.allSpices.map((s) => <option key={s.id} value={JSON.stringify(s)}>{s.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedSpice' type='spice' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'spice')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='spices'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found cooking methods & selected method information.\n  const Methods = () => {\n    const [selection, setSelection] = useState(null);\n    if (methodResults.loading) {\n      return <Loading/>;\n    } else if (methodResults.data && methodResults.data.allMethods) {\n      const resultCount = methodResults.data.allMethods.length;\n      if (resultCount > 0) {\n        return (\n          <div id='methodSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='methodSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>cooking methods</option>\n                {methodResults.data.allMethods.map((m) => <option key={m.id} value={JSON.stringify(m)}>{m.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedMethod' type='method' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'method')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='cooking methods'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found dishes & selected dish information.\n  const Dishes = () => {\n    const [selection, setSelection] = useState(null);\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else {\n        return (\n          <div id='dishSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='dishSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>dishes</option>\n                {dishResults.data.allDishes.map((d) => <option key={d.id} value={JSON.stringify(d)}>{d.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Dish id='selectedDish' methods={selection.cookingMethods} carbs={selection.carbs} spices={selection.spices}\n                  proteins={selection.proteins} note={selection.note} name={selection.name}/>\n              </div>}\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders random dish information.\n  const Random = () => {\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else if (resultCount === 1) {\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[0];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      } else {\n        const random = Math.floor(Math.random() * Math.floor(dishResults.data.allDishes.length));\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[random];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n\n  // helper function. handles new dish component submission.\n  // checks the type of submission and sets variables accordingly.\n  const handleNewComponent = async (type) => {\n    const token = await localStorage.getItem('rffUserToken').substring(7);\n    let variables;\n    switch (type) {\n    case 'carb':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newCarbName').value\n      };\n      break;\n    case 'protein':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newProteinName').value\n      };\n      break;\n    case 'spice':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newSpiceName').value\n      };\n      break;\n    case 'method':\n      variables = {\n        token: token,\n        name: document.getElementById('newMethodName').value\n      };\n      break;\n    default:\n      variables = null;\n      break;\n    }\n    if (variables !== null && variables.token) {\n      await client.mutate({\n        mutation: type === 'method' ? ADD_METHOD : ADD_INGREDIENT,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          switch (type) {\n          case 'carb':\n            updateCacheWithCarb('added', data.addIngredient);\n            break;\n          case 'protein':\n            updateCacheWithProtein('added', data.addIngredient);\n            break;\n          case 'spice':\n            updateCacheWithSpice('added', data.addIngredient);\n            break;\n          case 'method':\n            updateCacheWithMethod('added', data.addMethod);\n            break;\n          default:\n            variables = null;\n            break;\n          }\n        } else {\n          props.handleError(`Error occurred with ${type}: cannot add ${variables.name}`);\n        }\n      }\n      );\n    }\n  };\n\n  // subcomponent. renders form for new dish component submission.\n  // selector defines which type of dish component will be submitted to handler function.\n  const NewComponent = () => {\n    const [selection, setSelection] = useState('carb');\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <p className={classProvider(props.theme, 'heading')}><strong>Add new...</strong></p>\n          <div id='addComponentSelector' className='selector'>\n            <button id='componentSelectCarb' type='button' onClick={() => setSelection('carb')}\n              className={selection === 'carb'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>carb</button>\n            <button id='componentSelectProtein' type='button' onClick={() => setSelection('protein')}\n              className={selection === 'protein'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>protein</button>\n            <button id='componentSelectSpice' type='button' onClick={() => setSelection('spice')}\n              className={selection === 'spice'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>spice</button>\n            <button id='componentSelectMethod' type='button' onClick={() => setSelection('method')}\n              className={selection === 'method'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>method</button>\n          </div>\n          <DishComponentForm selection={selection}/>\n        </div>\n      </div>\n    );\n  };\n\n  const DishComponentForm = ({selection}) => {\n    switch (selection) {\n    case 'carb': return <NewCarb/>;\n    case 'method': return <NewMethod/>;\n    case 'protein': return <NewProtein/>;\n    case 'spice': return <NewSpice/>;\n    default: return null;\n    }\n  };\n  // subcomponent. renders form for new spice submission.\n  const NewSpice = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newSpiceName' placeholder='spice name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('spice')} id='saveSpice' className={classProvider(props.theme, 'activator')}>Save spice</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new protein submission.\n  const NewProtein = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newProteinName' placeholder='protein name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('protein')} id='saveProtein' className={classProvider(props.theme, 'activator')}>Save protein</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new carb submission.\n  const NewCarb = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newCarbName' placeholder='carb name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('carb')} id='saveCarb' className={classProvider(props.theme, 'activator')}>Save carb</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new cooking method submission.\n  const NewMethod = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newMethodName' placeholder='method name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('method')} id='saveMethod' className={classProvider(props.theme, 'activator')}>Save method</button>\n      </div>\n    );\n  };\n\n  // helper function. handles new dish submission.\n  // maps added dish component values to id's (string formatted),\n  // creates variables for GraphQL and triggers mutation.\n  const handleNewDish = async () => {\n    const {newDishMethods, newDishProteins, newDishCarbs, newDishSpices, newDish} = props.dishyState;\n    if (newDish) {\n      const token = await localStorage.getItem('rffUserToken').substring(7);\n      const variables = {\n        token: token(),\n        name: document.getElementById('newDishName').value,\n        note: document.getElementById('newDishNote').value,\n        cookingMethods: newDishMethods.map(m => m.id),\n        proteins: newDishProteins.map(p => p.id),\n        carbs: newDishCarbs.map(c => c.id),\n        spices: newDishSpices.map(s => s.id)\n      };\n      if (variables.token) {\n        await client.mutate({\n          mutation: ADD_DISH,\n          variables: variables,\n          errorPolicy: 'ignore'\n        }).then((result) => {\n          const {data} = result;\n          if (data !== null) {\n            resetDishForm();\n            props.handleInfo(`New dish saved: ${variables.name}`);\n          } else {\n            props.handleError(`Error occurred with dish: cannot add ${variables.name}`);\n          }\n        });\n      }\n    }\n  };\n\n  const resetDishForm = () => {\n    document.getElementById('newDishName').value = '';\n    document.getElementById('newDishNote').value = '';\n    props.resetDish();\n  };\n\n  // subcomponent. renders form for new dish submission.\n  // selector activates/deactivates form.\n  // form activated also when dish component added to new dish if form is not active.\n  // deactivation resets added components from Redux-state.\n  const NewDish = () => {\n    const {\n      newDish, newDishCarbs, newDishProteins, newDishSpices, newDishMethods\n    } = props.dishyState;\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <h4 className={classProvider(props.theme, 'heading')}>Add new dish</h4>\n          {newDish\n            ? <button type='button' onClick={() => resetDishForm()} id='newDishDeactivate'\n              className={classProvider(props.theme, 'deactivator')}>reset dish</button>\n            : <button type='button' onClick={() => props.initDish()} id='newDishActivate'\n              className={classProvider(props.theme, 'activator')}>create dish</button>}\n          {newDish && <>\n            <Dish view='new' carbs={newDishCarbs} proteins={newDishProteins}\n              spices={newDishSpices} methods={newDishMethods}/>\n            <button id='saveDish' onClick={() => handleNewDish()}\n              type='button' className={classProvider(props.theme, 'activator')}>Save dish</button>\n          </>}\n        </div>\n      </div>\n    );\n  };\n\n  // subcomponent. renders dish with given information.\n  const Dish = ({view, carbs, proteins, spices, methods, note, name}) => {\n    if (view === 'random') {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else if (view === 'new') {\n      return (\n        <div className='dish'>\n          <input className={classProvider(props.theme, 'noteArea')}\n            placeholder='dish name' type='text' id='newDishName'/>\n          <input type='text' className={classProvider(props.theme, 'noteArea')}\n            placeholder='description, steps, etc.' id='newDishNote'/>\n          <div className='componentContainer'>\n            <DishComponents id='newDishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='newDishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='newDishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='newDishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish components with given information.\n  const DishComponents = ({type, components, viewType}) => {\n    if (components.length > 0) {\n      return (\n        <div className='components'>\n          {type === 'carb' && <h4 className={classProvider(props.theme, 'text')}>Carbs:</h4>}\n          {type === 'protein' && <h4 className={classProvider(props.theme, 'text')}>Proteins:</h4>}\n          {type === 'spice' && <h4 className={classProvider(props.theme, 'text')}>Spices:</h4>}\n          {type === 'method' && <h4 className={classProvider(props.theme, 'text')}>Cooking methods:</h4>}\n          {components.map((c) => <Component key={c.name} component={c} type={type} view='plain'/>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className='components'>\n          {type === 'carb' && <p className={classProvider(props.theme, 'text')}>no carbs</p>}\n          {type === 'protein' && <p className={classProvider(props.theme, 'text')}>no proteins</p>}\n          {type === 'spice' && <p className={classProvider(props.theme, 'text')}>no spices</p>}\n          {type === 'method' && <p className={classProvider(props.theme, 'text')}>no cooking methods</p>}\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish component information.\n  const Component = ({component, view}) => {\n    if (props.dishyState.newDish && view === 'new') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else if (view === 'random' || view === 'plain') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else {\n      const uses = component.uses.length;\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n          <p className={classProvider(props.theme, 'text')}>\n            {uses > 1 ? `used in ${uses} dishes` : uses === 1 ? 'used in 1 dish' : 'no usage'}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.theme, 'heading')}>Suggested:</h4>\n        <Random id='randomDish'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Dishes:</h4>\n        <Dishes id='dishes'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Carbs:</h4>\n        <Carbs id='carbs'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Proteins:</h4>\n        <Proteins id='proteins'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Spices:</h4>\n        <Spices id='spices'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Cooking methods:</h4>\n        <Methods id='methods'/>\n        {props.show === 'advanced' && <NewComponent id='newDishComponent'/>}\n        {props.show === 'advanced' && <NewDish id='newDish'/>}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishy);","\nimport gql from 'graphql-tag';\n\nexport const NEWS_DETAILS = gql`\n  fragment NewsDetails on News {\n    news\n    category\n    addedBy {\n      username\n    }\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS = gql`\n  query news {\n    news {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","// RFF demo project\n// LandingPage.js\n// React component that renders front page for the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {InlineIcon} from '@iconify/react';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {NEWS} from '../core/graphql/rff/queries/q_news';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst LandingPage = (props) => {\n  const {data, error, loading} = useQuery(NEWS);\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.appState.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.appState.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.appState.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.appState.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const News = () => {\n    const news = data.news;\n    return news.length > 0\n      ? <>\n        <h4 className={classProvider(props.appState.theme, 'description')}>News:</h4>\n        <ul>\n          {news.map((n) => {\n            return <li key={n.id} className={classProvider(props.appState.theme, 'news')}>{n.news}</li>;\n          })}</ul>\n      </> : <>\n        <h4 className={classProvider(props.appState.theme, 'description')}>News:</h4>\n        <p className={classProvider(props.appState.theme, 'news')}>no news</p>\n      </>;\n  };\n\n  const Locked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          If you want to use these advanced features, please log in.</p>\n      </div>\n    );\n  };\n\n  const Unlocked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          You have logged in and therefore eligible to use advanced features.</p>\n      </div>\n    );\n  };\n\n  const AdditionalInfo = () => {\n    return (\n      <div className='commonElements'>\n        {loading && <Loading/>}\n        {error && <Error/>}\n        {data && <News/>}\n      </div>\n    );\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        {props.loginState.user === null\n          ? <Locked/>\n          : <Unlocked/>\n        }\n        <AdditionalInfo/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(LandingPage);","\nimport gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","// RFF demo project\n// LoginPage.js\n// React component that renders login page for the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {loginFailure, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient, useMutation} from '@apollo/react-hooks';\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst LoginPage = (props) => {\n  const client = useApolloClient();\n  const [login] = useMutation(LOGIN);\n\n  const handleLogin = () => {\n    login({\n      errorPolicy: 'ignore',\n      variables: {\n        username: document.getElementById('loginUsername').value,\n        password: document.getElementById('loginPassword').value\n      }\n    }).then((result) => {\n      const {data} = result;\n      let loginToken;\n      if (data !== null) {\n        loginToken = data.login.value;\n        client.query({\n          query: ME,\n          variables: {\n            token: loginToken.substring(7)\n          }\n        }).then(async (result) => {\n          document.getElementById('loginUsername').value = '';\n          document.getElementById('loginPassword').value = '';\n          localStorage.setItem('rffUserToken', loginToken);\n          await props.loginSuccess(result.data.me);\n          await props.handleInfo('logged in successfully');\n        });\n      } else {\n        document.getElementById('loginPassword').value = '';\n        props.handleError('invalid username or password');\n        props.loginFailure();\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      {localStorage.getItem('rffUserToken') && <Redirect push to='/'/>}\n      <div className='container'>\n        <form className='commonElements'>\n          <input id='loginUsername' type='text' placeholder='username'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='loginPassword' type='password' placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='loginButton' type='button' onClick={() => handleLogin()}\n            className={classProvider(props.theme, 'formElement')}>{'login >'}</button>\n          <Link id='gotoRegisterButton' to='/register' onClick={() => props.switchApp('Register')}\n            className={classProvider(props.theme, 'formElement')}>{'register >'}</Link>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","// RFF demo project\n// CountryReducer.js\n// creates reducer to Redux global state for application to use - OpenCountry\n\nconst initialState = {\n  countries: [],\n  countrySearch: '',\n  selected: ''\n};\n\nconst CountryReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'search':\n    return {...state, countrySearch: action.search};\n  case 'resetSearch':\n    return {...state, countrySearch: ''};\n  case 'setCountries':\n    return {...state, countries: action.countries};\n  case 'setSelected':\n    return {...state, selected: action.selected};\n  case 'resetSelected':\n    return {...state, selected: ''};\n  default:\n    return state;\n  }\n};\n\nexport const initCountries = (countries) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCountries',\n      countries: countries\n    });\n  };\n};\n\nexport const resetSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetSearch'\n    });\n  };\n};\n\nexport const setSearch = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'search',\n      search: search\n    });\n  };\n};\n\nexport const setSelection = (id) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected',\n      selected: id\n    });\n  };\n};\n\nexport const resetSelection = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected'\n    });\n  };\n};\n\nexport default CountryReducer;","// RFF demo project\n// Country.js\n// creates Country-class for application to use - OpenCountry\n\nimport PropTypes from 'prop-types';\n\nclass Country {\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      numericCode: props.numericCode,\n      topLevelDomain: props.topLevelDomain,\n      alpha2Code: props.alpha2Code,\n      alpha3Code: props.alpha3Code,\n      callingCodes: props.callingCodes,\n      capital: props.capital,\n      altSpellings: props.altSpellings,\n      region: props.region,\n      subregion: props.subregion,\n      population: props.population,\n      timezones: props.timezones,\n      borders: props.borders,\n      nativeName: props.nativeName,\n      currencies: props.currencies,\n      languages: props.languages,\n      flag: props.flag\n    };\n  }\n  getName() {\n    return this.state.name;\n  }\n  getNumericCode() {\n    return this.state.numericCode;\n  }\n  getDomain() {\n    return this.state.topLevelDomain;\n  }\n  getAlpha2() {\n    return this.state.alpha2Code;\n  }\n  getAlpha3() {\n    return this.state.alpha3Code;\n  }\n  getCallingCodes() {\n    return this.state.callingCodes;\n  }\n  getCapital() {\n    return this.state.capital;\n  }\n  getAltSpellings() {\n    return this.state.altSpellings;\n  }\n  getRegion() {\n    return this.state.region;\n  }\n  getSubregion() {\n    return this.state.subregion;\n  }\n  getPopulation() {\n    return this.state.population;\n  }\n  getTimezones() {\n    return this.state.timezones;\n  }\n  getBorders() {\n    return this.state.borders;\n  }\n  getNativeName() {\n    return this.state.nativeName;\n  }\n  getCurrencies() {\n    return this.state.currencies;\n  }\n  getLanguages() {\n    return this.state.languages;\n  }\n  getFlag() {\n    return this.state.flag;\n  }\n}\n\nCountry.propTypes = {\n  name: PropTypes.string,\n  numericCode: PropTypes.string,\n  topLevelDomain: PropTypes.array,\n  alpha2Code: PropTypes.string,\n  alpha3Code: PropTypes.string,\n  callingCodes: PropTypes.array,\n  capital: PropTypes.string,\n  altSpellings: PropTypes.array,\n  region: PropTypes.string,\n  subRegion: PropTypes.string,\n  population: PropTypes.number,\n  timezones: PropTypes.array,\n  borders: PropTypes.array,\n  nativeName: PropTypes.string,\n  currencies: PropTypes.array,\n  languages: PropTypes.array,\n  flag: PropTypes.string\n};\n\nexport default Country;","// RFF demo project\n// CountryDetails.js\n// React component that renders available information of the countries\n\nimport React from 'react';\nimport {Flag, Image} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Country from '../../core/classes/Country';\nimport '../../core/style/global.css';\nimport '../../core/style/elements.css';\nimport classProvider from '../../core/tools/classProvider';\nimport {setSearch} from '../../core/store/reducers/CountryReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n  };\n};\nconst mapDispatchToProps = {\n  setSearch\n};\n\nconst CountryDetails = (props) => {\n  const country = new Country(props.country);\n\n  const overrideSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(country.getName());\n  };\n\n  const Alias = () => {\n    const alts = country.getAltSpellings();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Also known as:</label>\n        <ul>\n          {alts.map((a) => {\n            return <li className={classProvider(props.theme, 'heading')} key={a}>{a}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Borders = () => {\n    const borders = country.getBorders();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Borders with:</label>\n        <ul>\n          {borders.map((b) => {\n            return <li className={classProvider(props.theme, 'heading')} key={b}>{b}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Calling = () => {\n    const codes = country.getCallingCodes();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Calling codes:</label>\n        <ul>\n          {codes.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c}>{c}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Currency = () => {\n    const currencies = country.getCurrencies();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Currency:</label>\n        <ul>\n          {currencies.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c.name}>{c.name}, {c.code}, {c.symbol}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Domain = () => {\n    const domains = country.getDomain();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Domain extensions:</label>\n        <ul>\n          {domains.map((d) => {\n            return <li className={classProvider(props.theme, 'heading')} key={d}>{d}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const CountryFlag = () => {\n    return <Image size='medium' src={country.getFlag()}/>;\n  };\n\n  const Language = () => {\n    const languages = country.getLanguages();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Official languages:</label>\n        <ul>\n          {languages.map((l) => {\n            return <li className={classProvider(props.theme, 'heading')} key={l.name}>{l.name}, {l.nativeName}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Timezones = () => {\n    const zones = country.getTimezones();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Timezones:</label>\n        <ul>\n          {zones.map((z) => {\n            return <li className={classProvider(props.theme, 'heading')} key={z}>{z}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Header = () => {\n    if (props.multi) {\n      return (\n        <div className='countryHeader'>\n          <h4 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='countryHeader'>\n          <h3 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h3>\n        </div>\n      );\n    }\n  };\n\n  const Body = () => {\n    if (props.multi) {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <Alias/>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n          <Language/>\n          <Timezones/>\n          <Borders/>\n          <Currency/>\n          <Calling/>\n          <Domain/>\n          <CountryFlag/>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div key={country.getNumericCode()} className='countryContainer' onClick={(event) => overrideSearch(event)}>\n      <Header/>\n      <Body/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetails);","// RFF demo project\n// OpenCountry.js\n// React component that renders country data -section of the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport resetIcon from '@iconify/icons-iwwa/reset';\n\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\nimport {setSearch, resetSearch} from '../core/store/reducers/CountryReducer';\nimport CountryDetails from './widgets/CountryDetails';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries,\n    countrySearch: state.countryState.countrySearch\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearch,\n  resetSearch\n};\n\nconst Countries = (props) => {\n\n  let matched = [];\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(event.target.value);\n  };\n\n  const ListCountries = () => {\n    if (props.countrySearch.length > 0) {\n      for (let i = 0; i < props.countries.length; i++) {\n        if (props.countries[i].name.toLowerCase().includes(props.countrySearch.toLowerCase())) {\n          matched = [...matched, props.countries[i]];\n        }\n      }\n      if (matched.length >= 4) {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={true} country={c}/>\n            </div>\n          );\n        });\n      } else if (matched.length < 1) {\n        return (\n          <div className='countryAppElements'>\n            <h5>{'Couldn\\'t find any entries'}</h5>\n          </div>\n        );\n      } else {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={false} country={c}/>\n            </div>\n          );\n        });\n      }\n    } else {\n      matched = [];\n      return props.countries.map((c) => {\n        return (\n          <div key={c.numericCode} className='countryAppElements'>\n            <CountryDetails key={c.numericCode} multi={true} country={c}/>\n          </div>\n        );\n      });\n    }\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>\n          Data for {props.countrySearch.length > 0 ? props.countries.length : props.countries.length} countries found.\n        </h5>\n        <div className='appElements'>\n          <input type='search' placeholder='search country by name'\n            onChange={event => handleSearch(event)}\n            onReset={() => props.resetSearch()} value={props.countrySearch}\n            className={classProvider(props.theme, 'formElement')}/>\n          <button onClick={() => props.resetSearch()} title='reset search'\n            className={classProvider(props.theme, 'formElement')}><Icon icon={resetIcon} /></button>\n        </div>\n        <ListCountries/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// RegistrationPage.js\n// React component that renders registration page of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {ADD_USER} from '../core/graphql/rff/mutations/m_addUser';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst RegistrationPage = (props) => {\n  const client = useApolloClient();\n\n  const register = async (event) => {\n    event.preventDefault();\n    const username = document.getElementById('regUsername').value;\n    const password = document.getElementById('regPassword').value;\n    const confirm = document.getElementById('regConfirm').value;\n    password === confirm\n      ? await client.mutate({\n        mutation: ADD_USER,\n        variables: {\n          username: username,\n          password: password\n        },\n        errorPolicy: 'ignore'\n      }).then(result => {\n        const {data} = result;\n        if (data !== null) {\n          props.handleInfo(`${username} registered`);\n        } else {\n          props.handleError(`username ${username} is already in use`);\n        }\n      })\n      : props.handleError('passwords do not match');\n    document.getElementById('regUsername').value = '';\n    document.getElementById('regPassword').value = '';\n    document.getElementById('regConfirm').value = '';\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <form className='commonElements' onSubmit={(event) => register(event)}>\n          <input id='regUsername' type='text' required minLength={4} placeholder='username'\n            className={classProvider(props.theme, 'formElement')} autoComplete/>\n          <input id='regPassword' type='password' required minLength={8} placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='regConfirm' type='password' required minLength={8} placeholder='re-type password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='regButton' type='submit' className={classProvider(props.theme, 'formElement')}>{'register >'}</button>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationPage);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_LIST_DETAILS = gql`\n    fragment GroupListDetails on GroupList {\n        title\n        listType\n        removable\n        id\n        group {\n            title\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const GROUP_LISTS = gql`\n  query groupLists($token: String!) {\n    groupLists(token: $token) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const PRIVATE_LIST_DETAILS = gql`\n    fragment PrivateListDetails on PrivateList {\n        title\n        listType\n        removable\n        id\n        owner {\n            username\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const PRIVATE_LISTS = gql`\n  query privateLists($token: String!) {\n    privateLists(token: $token) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\n\nexport const TASK_DETAILS = gql`\n  fragment TaskDetails on Task {\n    task\n    active\n    priority\n    creator {\n      ...UserDetails\n    }\n    listID\n    id\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASKS = gql`\n  query tasks($token: String!, $listID: String!) {\n    tasks(token: $token, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ADDED = gql`\n  subscription {\n    taskAdded {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_UPDATED = gql`\n  subscription {\n    taskUpdated {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_REMOVED = gql`\n  subscription {\n    taskRemoved {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_ADDED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_ADDED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_REMOVED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_REMOVED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const GROUP_DETAILS = gql`\n  fragment GroupDetails on Group {\n    title\n    active\n    removable\n    creator {\n      username\n    }\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUPS = gql`\n  query groups($token: String!) {\n    groups(token: $token) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const ADD_TASK = gql`\n  mutation addTask($token: String!, $task: String!, $listID: String!, $priority: Boolean!) {\n    addTask(token: $token, task: $task, listID: $listID, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const ADD_LIST_GROUP = gql`\n  mutation addListGroup($token: String!, $title: String!, $group: String!) {\n    addListGroup(token: $token, title: $title, group: $group) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const ADD_LIST_PRIVATE = gql`\n  mutation addListPrivate($token: String!, $title: String!) {\n    addListPrivate(token: $token, title: $title) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_PRIORITY = gql`\n  mutation taskPriority($token: String!, $id: String!, $priority: Boolean!) {\n    taskPriority(token: $token, id: $id, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ACTIVATION = gql`\n  mutation taskActivation($token: String!, $id: String!) {\n    taskActivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_DEACTIVATION = gql`\n  mutation taskDeactivation($token: String!, $id: String!) {\n    taskDeactivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const REMOVE_TASK = gql`\n  mutation removeTask($token: String!, $id: String!, $listID: String!) {\n    removeTask(token: $token, id: $id, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","// RFF demo project\n// TaskerReducer.js\n// React component that renders task management -section of the webapp\n\n// imports\nimport React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/tasker.css';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\nimport flagVariantOutline from '@iconify/icons-mdi/flag-variant-outline';\nimport flagVariant from '@iconify/icons-mdi/flag-variant';\n\nimport {GROUP_LISTS} from '../core/graphql/rff/queries/q_groupLists';\nimport {PRIVATE_LISTS} from '../core/graphql/rff/queries/q_privateLists';\nimport {TASKS} from '../core/graphql/rff/queries/q_tasks';\nimport {Redirect} from 'react-router-dom';\n\nimport {TASK_ADDED} from '../core/graphql/rff/subscriptions/s_taskAdded';\nimport {TASK_UPDATED} from '../core/graphql/rff/subscriptions/s_taskUpdated';\nimport {TASK_REMOVED} from '../core/graphql/rff/subscriptions/s_taskRemoved';\n\nimport {LIST_ADDED_GROUP} from '../core/graphql/rff/subscriptions/s_listAddedGroup';\nimport {LIST_ADDED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listAddedPrivate';\nimport {LIST_REMOVED_GROUP} from '../core/graphql/rff/subscriptions/s_listRemovedGroup';\nimport {LIST_REMOVED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listRemovedPrivate';\nimport {GROUPS} from '../core/graphql/rff/queries/q_groups';\nimport {ADD_TASK} from '../core/graphql/rff/mutations/m_addTask';\nimport {ADD_LIST_GROUP} from '../core/graphql/rff/mutations/m_addListGroup';\nimport {ADD_LIST_PRIVATE} from '../core/graphql/rff/mutations/m_addListPrivate';\nimport {TASK_PRIORITY} from '../core/graphql/rff/mutations/m_taskPriority';\nimport {TASK_ACTIVATION} from '../core/graphql/rff/mutations/m_taskActivation';\nimport {TASK_DEACTIVATION} from '../core/graphql/rff/mutations/m_taskDeactivation';\nimport {REMOVE_TASK} from '../core/graphql/rff/mutations/m_removeTask';\n\n// prop mappers\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user,\n    tasker: state.taskerState\n  };\n};\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst Tasker = (props) => {\n  let userToken;\n  const client = useApolloClient();\n\n  // Apollo GraphQL subscriptions\n  useSubscription(TASK_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('added', task);\n    }\n  });\n  useSubscription(TASK_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskUpdated;\n      updateCacheWithTask('updated', task);\n    }\n  });\n  useSubscription(TASK_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskRemoved;\n      updateCacheWithTask('removed', task);\n    }\n  });\n  useSubscription(LIST_ADDED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedPrivate;\n      updateCacheWithPrivatelist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedPrivate;\n      updateCacheWithPrivatelist('removed', list);\n    }\n  });\n  useSubscription(LIST_ADDED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedGroup;\n      updateCacheWithGrouplist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedGroup;\n      updateCacheWithGrouplist('removed', list);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithTask = async (eventType, task) => {\n    const includedIn = (set, object) => set.map(t => t.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: TASKS, variables: {\n        listID: task.listID,\n        token: userToken\n      }});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {tasks: dataInStore.tasks.concat(task)}\n        });\n        props.handleInfo(`Task added: ${task.task}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {\n            tasks: dataInStore.tasks.map(t => {\n              return t.id === task.id ? task : t;\n            })}\n        });\n        props.handleInfo(`Task updated: ${task.task}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {\n            tasks: dataInStore.tasks.forEach(t => {\n              if (t.id !== task.id) return t;\n            })}\n        });\n        props.handleInfo(`Task removed: ${task.task}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithPrivatelist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: PRIVATE_LISTS, variables: {\n        token: userToken\n      }\n    });\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {privateLists: dataInStore.privateLists.concat(list)}\n        });\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            privateLists: dataInStore.privateLists.map(l => {\n              return l.id === list.id ? list : l;\n            })}\n        });\n        props.handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            privateLists: dataInStore.privateLists.forEach(l => {\n              if (l.id !== list.id) return l;\n            })}\n        });\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithGrouplist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      variables: {\n        token: userToken,\n      },\n      query: GROUP_LISTS\n    });\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {groupLists: dataInStore.groupLists.concat(list)}\n        });\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            groupLists: dataInStore.groupLists.map(l => {\n              return l.id === list.id ? list : l;\n            })}\n        });\n        props.handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            groupLists: dataInStore.groupLists.forEach(l => {\n              if (l.id !== list.id) return l;\n            })}\n        });\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // generic minor components, ie. task priority, query error & loading\n  const Flagged = ({flagged}) => {\n    return flagged\n      ? <p className='flagged'>priority {<InlineIcon icon={flagVariant}/>}</p>\n      : <p className='flagged'>non priority {<InlineIcon icon={flagVariantOutline}/>}</p>;\n  };\n  const Empty = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileDescription')}>no accessible {type} lists</p>\n      </div>\n    );\n  };\n  const Error = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileError')}>error occurred while loading {type} lists</p>\n      </div>\n    );\n  };\n  const Loading = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileLoading')}>loading {type} lists</p>\n      </div>\n    );\n  };\n  const TaskEmpty = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='empty' task={{task: 'no tasks'}}/>\n      </div>\n    );\n  };\n  const TaskError = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='error' task={{task: 'error occurred'}}/>\n      </div>\n    );\n  };\n  const TaskLoading = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='loading' task={{task: 'loading tasks'}}/>\n      </div>\n    );\n  };\n\n  // component that gives layout base for task list rendering\n  const Lists = () => {\n    if (props.user) {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return (\n        <div className='container'>\n          <ListsP/>\n          <ListsG/>\n        </div>\n      );\n    } else {\n      return (\n        <div className='container'>\n          <p className={classProvider(props.theme, 'tileError')}>login needed</p>\n        </div>\n      );\n    }\n  };\n\n  // task lists rendering components\n  const ListsP = () => {\n    const {data, loading, error} = useQuery(PRIVATE_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'listHeader')}>Accessible private lists:</h4>\n        <div className='taskList'>\n          <AddList listType='private'/>\n          {data && data.privateLists.length > 0\n            ? <>{data.privateLists.map(l => <List key={`privateList:${l.id}`} list={l}/>)}</>\n            : <Empty type='private'/>}\n        </div>\n        {error && <Error type='private'/>}\n        {loading && <Loading type='private'/>}\n      </div>\n    );\n  };\n  const ListsG = () => {\n    const {data, loading, error} = useQuery(GROUP_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'heading')}>Accessible group lists:</h4>\n        <div className='taskList'>\n          <AddList listType='group'/>\n          {data && data.groupLists.length > 0\n            ? <>{data.groupLists.map(l => <List key={`groupList:${l.id}`} list={l}/>)}</>\n            : <Empty type='group'/>}\n        </div>\n        {loading && <Loading type='group'/>}\n        {error && <Error type='group'/>}\n      </div>\n    );\n  };\n  const List = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(TASKS, {\n      variables: {\n        token: userToken,\n        listID: list.id\n      }\n    });\n\n    return (\n      <div className='listContainer'>\n        <div key={`${list.listType}:${list.id}`} className='componentContainer'>\n          <div className='component'>\n            <strong><p className={classProvider(props.theme, 'text')}>\n              <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> {list.title}\n            </p></strong>\n          </div>\n          <button onClick={() => setExpanded(!expanded)}\n            className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>{expanded ? 'hide ' : 'show '}list\n          </button>\n        </div>\n        {data && expanded && <div className='componentContainer'>\n          <div className='taskList'>\n            <AddTask list={list}/>\n            <Tasks tasks={data.tasks}/>\n          </div>\n        </div>}\n        {error && <div className='componentContainer'>\n          <div className='taskList'>\n            <TaskError/>\n          </div>\n        </div>}\n        {loading && <div className='componentContainer'>\n          <div className='taskList'>\n            <TaskLoading/>\n          </div>\n        </div>}\n      </div>\n    );\n  };\n\n  // task rendering component\n  const Tasks = ({tasks}) => {\n    if (tasks.length > 0) {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>mark done</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map(t => {\n              return <Task key={t.id} status={true} task={t}/>;\n            })}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <TaskEmpty/>;\n    }\n  };\n\n  // helper functions: task & list saving handlers\n  const handleSaveTask = async (listID, priority) => {\n    const variables = {\n      token: userToken,\n      listID: listID,\n      task: document.getElementById('newTask').value,\n      priority: priority\n    };\n    if (userToken) {\n      await client.mutate({\n        mutation: ADD_TASK,\n        errorPolicy: 'ignore',\n        variables: variables\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithTask('added', data.addTask);\n        } else {\n          props.handleError(`Error occurred with task: cannot add ${variables.task}`);\n        }\n      });\n    }\n  };\n  const handleSaveList = async (groupID, listType) => {\n    let variables;\n    if (listType === 'GroupList') {\n      variables = {\n        token: userToken,\n        group: groupID,\n        title: document.getElementById('newGrouplistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_GROUP,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithGrouplist('added', data.addListGroup);\n          document.getElementById('newGrouplistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    } else {\n      variables = {\n        token: userToken,\n        title: document.getElementById('newPrivatelistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_PRIVATE,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithPrivatelist('added', data.addListPrivate);\n          document.getElementById('newPrivatelistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    }\n  };\n\n  // rendering components for new task & list forms\n  const AddTask = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const [priority, setPriority] = useState(false);\n    return (\n      <div id='newTaskForm'>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new task</p>\n          </div>\n          <button id='taskFormActivator' onClick={() => setExpanded(!expanded)}\n            className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>{expanded ? 'close ' : 'open '}form</button>\n        </div>\n        {expanded && <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>list</th>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{list.title}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <input required minLength={2} id='newTask'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new task'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button id='newTaskPriority' type='button' className={classProvider(props.theme, 'formElement')}\n                  onClick={() => setPriority(!priority)}>{<Flagged flagged={priority}/>}</button>\n              </td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button type='button' className={classProvider(props.theme, 'activator')}\n                  onClick={() => handleSaveTask(list.id, priority)}>save list</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>}\n      </div>\n    );\n  };\n  const AddList = ({listType}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(GROUPS, {\n      variables: {\n        token: userToken\n      }\n    });\n    const Wait = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n        </div>\n      );\n    };\n    const Fail = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileError')}>error occurred</p>\n        </div>\n      );\n    };\n    const Group = () => {\n      const [groupSelection, setGroupSelection] = useState(null);\n      return (\n        <div className='taskList'>\n          {listType === 'group' && <select id='groupSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n            onChange={({target}) => setGroupSelection(JSON.parse(target.value))}>\n            <option key='default' value='default' disabled>groups</option>\n            {data.groups.map((g) => <option key={g.id} value={JSON.stringify(g)}>{g.title}</option>)}\n          </select>}\n          {groupSelection !== null && <table className={classProvider(props.theme, 'table')}>\n            <thead>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <th className={classProvider(props.theme, 'tableCell')}>group</th>\n                <th className={classProvider(props.theme, 'tableCell')}>title</th>\n                <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <td className={classProvider(props.theme, 'tableCell')}><strong>{groupSelection.title}</strong></td>\n                <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                  id='newGrouplistTitle'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new list title'/></td>\n                <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                  className={classProvider(props.theme, 'activator')}\n                  onClick={() => handleSaveList(groupSelection.id, 'GroupList')}>save list</button></td>\n              </tr>\n            </tbody>\n          </table>}\n        </div>\n      );\n    };\n    const Private = () => {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>user</th>\n              <th className={classProvider(props.theme, 'tableCell')}>title</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{props.user.getUsername()}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                className={classProvider(props.theme, 'formElement')}\n                placeholder='new list title' id='newPrivatelistTitle'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                className={classProvider(props.theme, 'activator')}\n                onClick={() => handleSaveList(null, 'PrivateList')}>save list</button></td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    };\n    return (\n      <div id={`newListForm_${listType}`}>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new {listType} list</p>\n          </div>\n          <button id={`listFormActivator_${listType}`} onClick={() => setExpanded(!expanded)}\n            className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>{expanded ? 'close ' : 'open '}form</button>\n        </div>\n        {error && <Fail/>}\n        {loading && <Wait/>}\n        {expanded && data && <div className='componentContainer'>\n          <div className='taskList'>\n            {listType === 'group' && <Group/>}\n            {listType !== 'group' && <Private/>}\n          </div>\n        </div>}\n      </div>\n    );\n  };\n\n  const handlePriority = async ({id, priority, task}) => {\n    const variables = {\n      token: userToken,\n      id: id,\n      priority: !priority\n    };\n    await client.mutate({\n      mutation: TASK_PRIORITY,\n      variables: variables,\n      errorPolicy: 'ignore'\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', data.taskPriority);\n      } else {\n        props.handleError(`Error occurred with task: cannot update ${task}`);\n      }\n    });\n  };\n  const handleCompletion = async ({id, task, active}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: active ? TASK_DEACTIVATION : TASK_ACTIVATION,\n      variables: variables,\n      errorPolicy: 'ignore'\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', active ? data.taskDeactivation : data.taskActivation);\n      } else {\n        props.handleError(`Error occurred with task: cannot update ${task}`);\n      }\n    });\n  };\n  const handleRemoval = async ({id, task}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_TASK,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('removed', data.removeTask);\n      } else {\n        props.handleError(`Error occurred with task: cannot remove ${task}`);\n      }\n    });\n  };\n\n  const Task = ({task}) => {\n    const Flagged = ({flagged}) => {\n      return flagged\n        ? <InlineIcon icon={flagVariant}/>\n        : <InlineIcon icon={flagVariantOutline}/>;\n    };\n\n    if (props.status === 'error') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else if (props.status === 'loading') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else if (props.status === 'empty') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else {\n      return (\n        <tr className={classProvider(props.theme, 'tableRow')}>\n          <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>\n          <td className={classProvider(props.theme, 'tableCell')}><Flagged flagged={task.priority}/></td>\n          <td className={classProvider(props.theme, 'tableCell')}><button className={task.priority\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}\n          onClick={() => handlePriority(task)}>\n            {task.priority\n              ? 'priority off'\n              : 'priority on'}\n          </button></td>\n          <td className={classProvider(props.theme, 'tableCell')}><button className={task.active\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}\n          onClick={() => handleCompletion(task)}>\n            {task.active\n              ? 'done'\n              : 'undone'}\n          </button></td>\n          <td className={classProvider(props.theme, 'tableCell')}>\n            <button className={classProvider(props.theme, 'deactivator')}\n              onClick={() => handleRemoval(task)}>remove</button></td>\n        </tr>\n      );\n    }\n  };\n\n  return props.show\n    ? <div className='app'>\n      <Lists/>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasker);","// RFF demo project\n// Transporter.js\n// React component that renders public transport information -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/transporter.css';\nimport HslHrtIcon from './icons/hsl/HslHrtIcon';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {};\n\nconst Transporter = (props) => {\n  const client = useApolloClient();\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>Tracked stops:</h5>\n        <p className={classProvider(props.theme, 'text')}>This feature will be added later</p>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transporter);","// RFF demo project\n// Connector.js\n// provides REST via Axios for application to use\n\nimport axios from 'axios';\n\nconst countriesUrl = 'https://restcountries.eu/rest/v2/all';\n\nconst getCountries = async () => {\n  return await axios.get(countriesUrl);\n};\n\nexport default {\n  getCountries\n};","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($token: String!, $newUsername: String, $newPassword: String, $password: String!) {\n    updateUser(newUsername: $newUsername, newPassword: $newPassword, token: $token, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// UserSettings.js\n// React component that renders user settings -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {\n  loginFailure, loginSuccess\n} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst UserPage = (props) => {\n  const client = useApolloClient();\n\n  const UserManager = () => {\n    return (\n      <div className='commonElements'>\n        <h5 className={classProvider(props.theme, 'heading')}>User information</h5>\n        <UserData/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change password</h5>\n        <ChangePassword/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change username</h5>\n        <ChangeUsername/>\n      </div>\n    );\n  };\n\n  const UserData = () => {\n    return (\n      <>\n        <p className={classProvider(props.theme, 'description')}>User: <strong>{props.user.getUsername()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Role: <strong>{props.user.getRole()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Active: <strong>{props.user.getActive() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Removable: <strong>{props.user.getRemovable() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>ID: <strong>{props.user.getId()}</strong></p>\n      </>\n    );\n  };\n\n  const ChangeUsername = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handleUsernameChange(event)}>\n        <input id='changeUsernamePW' type='password' required placeholder='password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changeUsernameNew' type='text' required placeholder='new username'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>change username</button>\n      </form>\n    );\n  };\n\n  const ChangePassword = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handlePasswordChange(event)}>\n        <input id='changePasswordOld' type='password' required placeholder='old password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordNew' type='password' required placeholder='new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordConfirm' type='password' required placeholder='retype new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>\n          change password\n        </button>\n      </form>\n    );\n  };\n\n  const handlePasswordChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changePasswordOld').value;\n    const newPassword = document.getElementById('changePasswordNew').value;\n    const confirm = document.getElementById('changePasswordConfirm').value;\n    newPassword === confirm\n      ? await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          token: localStorage.getItem('rffUserToken').toString().substring(7),\n          password: password,\n          newPassword: newPassword === confirm && newPassword\n        }\n      }).then((result, errors) => {\n        if (!errors) {\n          client.mutate({\n            mutation: LOGIN,\n            variables: {\n              username: props.user.username,\n              password: newPassword\n            }\n          }).then((result, errors) => {\n            if (!errors) {\n              const token = result.data.login.value;\n              client.query({\n                query: ME,\n                variables: {\n                  token: token.substring(7)\n                }\n              }).then((result, errors) => {\n                if (!errors) {\n                  localStorage.setItem('rffUserToken', token);\n                  props.loginSuccess(result.data.me);\n                  props.handleInfo('login renewed');\n                } else {\n                  props.loginFailure();\n                  props.handleError(errors[0]);\n                }\n              });\n            } else {\n              props.handleError(errors[0]);\n            }\n          });\n        } else {\n          props.handleError(errors[0]);\n        }\n      })\n      : props.handleError({message: 'New passwords do not match'});\n    document.getElementById('changePasswordOld').value = '';\n    document.getElementById('changePasswordNew').value = '';\n    document.getElementById('changePasswordConfirm').value = '';\n  };\n\n  const handleUsernameChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changeUsernamePW').value;\n    const newUsername = document.getElementById('changeUsernameNew').value;\n    await client.mutate({\n      mutation: UPDATE_USER,\n      variables: {\n        token: localStorage.getItem('rffUserToken').toString().substring(7),\n        password: password,\n        newUsername: newUsername\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        client.mutate({\n          mutation: LOGIN,\n          variables: {\n            username: newUsername,\n            password: password\n          }\n        }).then((result, errors) => {\n          if (!errors) {\n            const token = result.data.login.value;\n            client.query({\n              query: ME,\n              variables: {\n                token: token.substring(7)\n              }\n            }).then((result, errors) => {\n              if (!errors) {\n                localStorage.setItem('rffUserToken', token);\n                props.loginSuccess(result.data.me);\n                props.handleInfo('login renewed');\n              } else {\n                props.loginFailure();\n                props.handleError(errors[0]);\n              }\n            });\n          } else {\n            props.handleError(errors[0]);\n          }\n        });\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <UserManager/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n\n/*<form className='commonElements'>\n//           <input type='text' placeholder='username' onChange={({target}) => props.setUsername(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.username} autoComplete={true}/>\n//           <input type='password' placeholder='password' onChange={({target}) => props.setPassword(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.password} autoComplete={true}/>\n//           <button type='button' onClick={() => handleLogin()}\n//                   className={classProvider(props.theme, 'formElement')}>login</button>\n//           <Link to='/register' onClick={() => props.switchApp('Register')}\n//                 className={classProvider(props.theme, 'formElement')}>register</Link>\n//         </form>*/","// RFF demo project\n// App.js\n// webapp file - provides Redux store and Apollo clients for application components\n// creates client side routing for webapp with React Router\n// creates base structure for app layout\n\n\n// imports\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport {ApolloClient} from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {setContext} from 'apollo-link-context';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {split} from 'apollo-link';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {getMainDefinition} from 'apollo-utilities';\nimport {loginSuccess} from './core/store/reducers/LoginReducer';\nimport './core/style/root.css';\nimport Navigation from './components/Navigation';\nimport AdminTools from './components/AdminTools';\nimport About from './components/About';\nimport Calculate from './components/Calculate';\nimport Dashboard from './components/Dashboard';\nimport Dishy from './components/Dishy';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport OpenCountry from './components/OpenCountry';\nimport RegistrationPage from './components/RegistrationPage';\nimport Tasker from './components/Tasker';\nimport Transporter from './components/Transporter';\nimport Connector from './core/services/Connector';\nimport UserPage from './components/UserSettings';\nimport {initCountries} from './core/store/reducers/CountryReducer';\nimport {handleError, handleInfo, switchApp} from './core/store/reducers/AppReducer';\nimport {ME} from './core/graphql/rff/queries/q_me';\n\n// prop mappings for Redux global state & thunk helper functions\nconst mapDispatchToProps = {\n  initCountries, switchApp, loginSuccess, handleError, handleInfo\n};\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    app: state.appState.application,\n    dishyState: state.dishyState,\n    loginState: state.loginState\n  };\n};\n\n// ApolloClient definitions: links & clients for different sections of the webapp\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_WEBSOCKET,\n  options: {reconnect: true}\n});\nconst httpLink = createHttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_ENDPOINT\n});\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('rffUserToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null\n    }\n  };\n});\nconst rffLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\nconst hslLink = createHttpLink({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\n});\nconst rffClient = new ApolloClient({\n  link: rffLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\nconst hslClient = new ApolloClient({\n  link: hslLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst App = (props) => {\n  const loginToken = localStorage.getItem('rffUserToken');\n\n  // hook that handles webapp background styling\n  useEffect(() => {\n    document.body.className = props.theme;\n  });\n  // hook that handles querying data from country API for webapp\n  useEffect(() => {\n    async function init() {\n      await Connector.getCountries().then(response => {\n        props.initCountries(response.data);\n      });\n    }\n    init();\n  }, [props]);\n  // hook that handles restoring login if localstorage already has token stored\n  useEffect(() => {\n    loginToken !== null && rffClient.query({\n      query: ME,\n      variables: {\n        token: loginToken.substring(7)\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        props.loginSuccess(result.data.me);\n        props.handleInfo('Login restored');\n      } else {\n        props.handleError(errors[0]);\n      }\n    });\n  }, [loginToken, rffClient]);\n\n  // webapp definitions: provides routing for most webapp sections\n  const Rff = () => {\n    const {user} = props.loginState;\n    return (\n      <Switch>\n        <Route exact path='/' render={(props) => <LandingPage {...props} show={true}/>}/>\n        <Route path='/about' render={(props) => <About {...props} show={true}/>}/>\n        <Route path='/admin' render={(props) => <AdminTools {...props}\n          show={loginToken !== null && (user.getRole() === 'admin' || user.getRole() === 'owner')}/>}/>\n        <Route path='/calculate' render={(props) => <Calculate {...props} show={true}/>}/>\n        <Route path='/countries' render={(props) => <OpenCountry {...props} show={true}/>}/>\n        <Route path='/dashboard' render={(props) => <Dashboard {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/dishy' render={(props) => <Dishy {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/login' render={(props) => <LoginPage {...props} show={loginToken === null}/>}/>\n        <Route path='/register' render={(props) => <RegistrationPage {...props} show={loginToken === null}/>}/>\n        <Route path='/tasker' render={(props) => <Tasker {...props} show={loginToken !== null}/>}/>\n        <Route path='/user' render={(props) => <UserPage {...props} show={loginToken !== null}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides routing for public transport information section\n  const Hsl = () => {\n    return (\n      <Switch>\n        <Route path='/transit' render={(props) => <Transporter {...props}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides navigation & correct ApolloClients for the different sections of the webapp\n  return (\n    <div className='appContainer'>\n      <Router basename='/'>\n        <ApolloProvider client={rffClient}>\n          <Navigation/>\n          <Rff/>\n        </ApolloProvider>\n        <ApolloProvider client={hslClient}>\n          <Hsl/>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// RFF demo project\n// RegReducer.js\n// creates reducer to Redux global state for application to use - registration\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setNewUserName':\n    return {...state, newUserName: action.name};\n  case 'setNewUserUsername':\n    return {...state, newUserUsername: action.username};\n  case 'setNewUserPassword':\n    return {...state, newUserPassword: action.password};\n  case 'setConfirmNewUserPassword':\n    return {...state, confirmNewUserPassword: action.password};\n  case 'successfulReg':\n    return {...initialState};\n  case 'unsuccessfulReg':\n    return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n  case 'resetReg':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport default RegReducer;","// RFF demo project\n// Store.js\n// creates Redux global state for application\n\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport AppReducer from './reducers/AppReducer';\nimport CountryReducer from './reducers/CountryReducer';\nimport LoginReducer from './reducers/LoginReducer';\nimport RegReducer from './reducers/RegReducer';\nimport DishyReducer from './reducers/DishyReducer';\n\nconst reducers = combineReducers({\n  appState: AppReducer,\n  countryState: CountryReducer,\n  loginState: LoginReducer,\n  regState: RegReducer,\n  dishyState: DishyReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","// RFF demo project\n// index.js\n// webapp root file - provides Redux store for application\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './core/store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}