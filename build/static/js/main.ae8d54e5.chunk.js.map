{"version":3,"sources":["core/store/reducers/AppReducer.js","core/store/reducers/LoginReducer.js","core/tools/classProvider.js","core/graphql/rff/fragments/f_userFragment.js","core/graphql/rff/queries/q_me.js","components/Navigation.js","components/widgets/CountryCount.js","core/graphql/rff/queries/q_groupCount.js","components/widgets/GroupCount.js","core/graphql/rff/queries/q_allListCount.js","core/graphql/rff/queries/q_listCount.js","components/widgets/ListCount.js","core/graphql/rff/queries/q_taskCount.js","core/graphql/rff/queries/q_allTaskCount.js","components/widgets/TaskCount.js","core/graphql/rff/queries/q_dishCount.js","components/widgets/DishCount.js","core/graphql/rff/queries/q_carbCount.js","core/graphql/rff/queries/q_proteinCount.js","core/graphql/rff/queries/q_spiceCount.js","components/widgets/IngredientCount.js","core/graphql/rff/queries/q_methodCount.js","components/widgets/MethodCount.js","components/widgets/TrackedStopsCount.js","core/graphql/rff/queries/q_userCount.js","components/widgets/UserCount.js","components/AdminTools.js","components/widgets/Colors.js","components/widgets/Technologies.js","components/widgets/OtherStyles.js","components/About.js","components/Calculate.js","components/Dashboard.js","core/graphql/rff/fragments/f_ingredientFragment.js","core/graphql/rff/queries/q_allCarbs.js","core/graphql/rff/queries/q_allProteins.js","core/graphql/rff/queries/q_allSpices.js","core/graphql/rff/fragments/f_methodFragment.js","core/graphql/rff/queries/q_allMethods.js","core/graphql/rff/fragments/f_dishIngredientFragment.js","core/graphql/rff/fragments/f_dishMethodFragment.js","core/graphql/rff/fragments/f_dishFragment.js","core/graphql/rff/queries/q_allDishes.js","core/graphql/rff/mutations/m_addMethod.js","core/graphql/rff/mutations/m_addIngredient.js","core/graphql/rff/mutations/m_addDish.js","core/graphql/rff/subscriptions/s_dishAdded.js","core/graphql/rff/subscriptions/s_dishUpdated.js","core/graphql/rff/subscriptions/s_dishRemoved.js","core/graphql/rff/subscriptions/s_dishVoted.js","core/graphql/rff/subscriptions/s_ingredientAdded.js","core/graphql/rff/subscriptions/s_ingredientUpdated.js","core/graphql/rff/subscriptions/s_ingredientRemoved.js","core/graphql/rff/subscriptions/s_methodAdded.js","core/graphql/rff/subscriptions/s_methodUpdated.js","core/graphql/rff/subscriptions/s_methodRemoved.js","core/store/reducers/DishyReducer.js","components/Dishy.js","components/LandingPage.js","core/graphql/rff/mutations/m_login.js","components/LoginPage.js","core/store/reducers/CountryReducer.js","core/classes/Country.js","components/widgets/CountryDetails.js","components/OpenCountry.js","core/graphql/rff/mutations/m_addUser.js","components/RegistrationPage.js","components/widgets/Task.js","core/graphql/rff/fragments/f_groupListFragment.js","core/graphql/rff/queries/q_groupLists.js","core/graphql/rff/fragments/f_privateListFragment.js","core/graphql/rff/queries/q_privateLists.js","core/graphql/rff/fragments/f_taskFragment.js","core/graphql/rff/queries/q_tasks.js","components/Tasker.js","components/Transporter.js","core/services/Connector.js","core/graphql/rff/mutations/m_updateUser.js","components/UserSettings.js","App.js","serviceWorker.js","core/store/reducers/RegReducer.js","core/store/Store.js","index.js"],"names":["initialState","repository","url","name","theme","application","notification","switchApp","app","dispatch","a","type","handleError","error","message","setTimeout","handleInfo","info","AppReducer","state","action","user","loginFailure","loginSuccess","LoginReducer","classProvider","element","USER_DETAILS","gql","ME","mapDispatchToProps","switchTheme","localStorage","setItem","logout","connect","appState","loginState","props","client","useApolloClient","themes","loginToken","getItem","setTheme","useEffect","query","variables","token","substring","then","result","errors","data","me","ThemeSelector","className","map","t","key","onClick","to","role","id","username","removeItem","countries","countryState","length","GROUP_COUNT","userToken","mode","useQuery","loading","groupCount","ALL_LIST_COUNT","LIST_COUNT","listCount","allListCount","TASK_COUNT","ALL_TASK_COUNT","countType","taskCount","allTaskCount","DISH_COUNT","dishCount","CARB_COUNT","PROTEIN_COUNT","SPICE_COUNT","carbResult","proteinResult","spiceResult","carbCount","proteinCount","spiceCount","METHOD_COUNT","methodCount","USER_COUNT","userCount","show","push","frontend","icon","reactIcon","ReduxIcon","graphqlIcon","apollostackIcon","backend","logoNodejs","expressIcon","mongodbIcon","testing","jestIcon","cypressIcon","tools","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","altairIcon","repo","href","f","b","d","dt","useState","value1","setValue1","value2","setValue2","Addition","Number","Subtraction","numbro","format","thousandSeparated","trimMantissa","mantissa","Division","Multiplication","Exponentiation","res1","res2","res3","Cube","RootSquare","Math","sqrt","RootCubic","cbrt","placeholder","onChange","target","value","common","link","advanced","INGREDIENT_DETAILS","ALL_CARBS","ALL_PROTEINS","ALL_SPICES","METHOD_DETAILS","ALL_METHODS","DISH_INGREDIENT_DETAILS","DISH_METHOD_DETAILS","DISH_DETAILS","ALL_DISHES","ADD_METHOD","ADD_INGREDIENT","ADD_DISH","DISH_ADDED","DISH_UPDATED","DISH_REMOVED","DISH_VOTED","INGREDIENT_ADDED","INGREDIENT_UPDATED","INGREDIENT_REMOVED","METHOD_ADDED","METHOD_UPDATED","METHOD_REMOVED","carbSearch","proteinSearch","spiceSearch","methodSearch","newDish","newDishCarbs","newDishProteins","newDishSpices","newDishMethods","DishyReducer","carb","protein","spice","method","initDish","resetDish","addDishCarb","addDishProtein","addDishSpice","addDishMethod","dishyState","carbResults","proteinResults","spiceResults","methodResults","dishResults","useSubscription","fetchPolicy","onSubscriptionData","dish","subscriptionData","dishAdded","updateCacheWithDish","dishUpdated","dishVoted","dishRemoved","ingredient","ingredientAdded","updateCacheWithCarb","updateCacheWithProtein","updateCacheWithSpice","ingredientUpdated","methodAdded","updateCacheWithMethod","methodUpdated","methodRemoved","eventType","includedIn","set","object","c","includes","dataInStore","readQuery","allCarbs","writeQuery","concat","forEach","p","allProteins","s","allSpices","m","allMethods","allDishes","Loading","Error","Empty","handleAddComponent","event","component","preventDefault","filter","handleNewComponent","document","getElementById","mutate","mutation","errorPolicy","addIngredient","addMethod","DishComponentForm","selection","NewCarb","NewMethod","NewProtein","NewSpice","minLength","required","handleNewDish","note","cookingMethods","proteins","carbs","spices","resetDishForm","Dish","view","methods","DishComponents","components","viewType","Component","uses","resultCount","random","floor","setSelection","defaultValue","JSON","parse","disabled","stringify","LOGIN","useMutation","login","password","countrySearch","selected","setSearch","search","CountryReducer","Country","this","numericCode","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","timezones","borders","nativeName","currencies","languages","flag","propTypes","PropTypes","string","array","subRegion","number","country","Alias","alts","getAltSpellings","Borders","getBorders","Calling","codes","getCallingCodes","Currency","getCurrencies","code","symbol","Domain","domains","getDomain","CountryFlag","Image","size","src","getFlag","Language","getLanguages","l","Timezones","zones","getTimezones","z","getNumericCode","getName","overrideSearch","multi","Flag","getAlpha2","toLowerCase","getNativeName","getCapital","getRegion","getSubregion","getPopulation","getAlpha3","resetSearch","matched","handleSearch","onReset","title","resetIcon","i","ADD_USER","register","confirm","onSubmit","autoComplete","status","task","priority","active","creator","GROUP_LIST_DETAILS","GROUP_LISTS","PRIVATE_LIST_DETAILS","PRIVATE_LISTS","TASK_DETAILS","TASKS","ListsP","privateLists","List","list","ListsG","groupLists","expanded","setExpanded","listID","listType","userShield","usersIcon","Tasks","tasks","getCountries","axios","get","UPDATE_USER","UserData","removable","ChangeUsername","handleUsernameChange","ChangePassword","handlePasswordChange","newPassword","toString","newUsername","initCountries","wsLink","WebSocketLink","uri","process","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","rffLink","split","getMainDefinition","kind","operation","hslLink","rffClient","ApolloClient","cache","InMemoryCache","connectToDevTools","hslClient","body","Connector","response","init","basename","exact","path","render","Calculate","OpenCountry","Boolean","window","location","hostname","match","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","reducers","combineReducers","regState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ugBAEMA,G,OAAe,CACnBC,WAAY,CACVC,IAAK,4CACLC,KAAM,oBAERC,MAAO,QACPC,YAAa,OACbC,aAAc,OAoBHC,EAAY,SAACC,GACxB,8CAAO,WAAMC,GAAN,SAAAC,EAAA,sDACLD,EAAS,CACPE,KAAM,oBAAqBN,YAAaG,IAFrC,2CAAP,mDAAM,IAgBKI,EAAc,SAACC,GAC1B,8CAAO,WAAMJ,GAAN,SAAAC,EAAA,sDACLD,EAAS,CACPE,KAAM,kBAAmBL,aAAc,CAACK,KAAM,QAASG,QAASD,KAElEE,YAAW,WACTN,EAAS,CACPE,KAAM,wBAEP,KARE,2CAAP,mDAAM,IAWKK,EAAa,SAACC,GACzB,8CAAO,WAAMR,GAAN,SAAAC,EAAA,sDACLD,EAAS,CACPE,KAAM,kBAAmBL,aAAc,CAACK,KAAM,OAAQG,QAASG,KAEjEF,YAAW,WACTN,EAAS,CACPE,KAAM,wBAEP,KARE,2CAAP,mDAAM,IAYOO,EA3DI,WAAmC,IAAlCC,EAAiC,uDAAzBnB,EAAcoB,EAAW,uCACnD,OAAQA,EAAOT,MACf,IAAK,KACH,OAAO,eAAIQ,GACb,IAAK,oBACH,OAAO,eAAIA,EAAX,CAAkBd,YAAae,EAAOf,cACxC,IAAK,cACH,OAAO,eAAIc,EAAX,CAAkBf,MAAOgB,EAAOhB,QAClC,IAAK,kBACH,OAAO,eAAIe,EAAX,CAAkBb,aAAcc,EAAOd,eACzC,IAAK,oBACH,OAAO,eAAIa,EAAX,CAAkBb,aAAc,OAClC,QACE,OAAOa,ICvBLnB,EAAe,CACnBqB,KAAM,MAgBKC,EAAe,WAC1B,8CAAO,WAAMb,GAAN,SAAAC,EAAA,sDACLD,EAAS,CAACE,KAAM,iBADX,2CAAP,mDAAM,IAIKY,EAAe,SAACF,GAC3B,8CAAO,WAAMZ,GAAN,SAAAC,EAAA,sDACLD,EAAS,CAACE,KAAM,eAAgBU,KAAMA,IADjC,2CAAP,mDAAM,IAUOG,EA7BM,WAAmC,IAAlCL,EAAiC,uDAAzBnB,EAAcoB,EAAW,uCACrD,OAAQA,EAAOT,MACf,IAAK,eACH,OAAO,eAAIQ,EAAX,CAAkBE,KAAMD,EAAOC,OACjC,IAAK,eACH,OAAO,eAAIF,GACb,IAAK,SACH,OAAO,eAAInB,GACb,QACE,OAAOmB,ICiKIM,EAhLO,SAACrB,EAAOsB,GAC5B,GAAc,SAAVtB,EACF,OAAOsB,GACP,IAAK,UACH,MAAO,YACT,IAAK,aACH,MAAO,eACT,IAAK,YACH,MAAO,cACT,IAAK,eACH,MAAO,iBACT,IAAK,aACH,MAAO,eACT,IAAK,gBACH,MAAO,kBACT,IAAK,UACH,MAAO,YACT,IAAK,cAEL,IAAK,mBACH,MAAO,gBACT,IAAK,kBACH,MAAO,oBACT,IAAK,oBACH,MAAO,sBACT,IAAK,OACH,MAAO,SACT,IAAK,cACH,MAAO,gBACT,IAAK,eACH,MAAO,iBACT,IAAK,YACH,MAAO,cACT,IAAK,OACH,MAAO,SACT,IAAK,cACH,MAAO,gBACT,IAAK,gBACH,MAAO,kBACT,IAAK,sBACH,MAAO,iBACT,IAAK,iBACH,MAAO,mBACT,IAAK,eACH,MAAO,iBACT,IAAK,gBACH,MAAO,gBACT,IAAK,cACH,MAAO,gBACT,IAAK,aACH,MAAO,eACT,IAAK,mBACH,MAAO,qBACT,IAAK,oBACH,MAAO,sBACT,IAAK,mBACH,MAAO,qBACT,IAAK,OACH,MAAO,OACT,IAAK,kBACH,MAAO,oBACT,IAAK,cACH,MAAO,cACT,IAAK,YACH,MAAO,YACT,IAAK,WACH,MAAO,WACT,IAAK,aACH,MAAO,eACT,IAAK,kBACH,MAAO,oBACT,IAAK,OACH,MAAO,SACT,IAAK,WACH,MAAO,aACT,IAAK,WACH,MAAO,aACT,IAAK,YACH,MAAO,cACT,IAAK,cACH,MAAO,gBACT,IAAK,QACH,MAAO,UACT,IAAK,WACH,MAAO,aACT,QACE,MAAO,QAGT,OAAOA,GACP,IAAK,UACH,MAAO,YACT,IAAK,aACH,MAAO,eACT,IAAK,YACH,MAAO,cACT,IAAK,eACH,MAAO,iBACT,IAAK,aACH,MAAO,eACT,IAAK,gBACH,MAAO,kBACT,IAAK,UACH,MAAO,YACT,IAAK,cAEL,IAAK,mBACH,MAAO,gBACT,IAAK,kBACH,MAAO,oBACT,IAAK,oBACH,MAAO,sBACT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","file":"static/js/main.ae8d54e5.chunk.js","sourcesContent":["\n\nconst initialState = {\n  repository: {\n    url: 'https://github.com/RedFoxFinn/rff-project',\n    name: 'rff-demo-project'\n  },\n  theme: 'light',\n  application: 'Home',\n  notification: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'fu':\n    return {...state};\n  case 'switchApplication':\n    return {...state, application: action.application};\n  case 'switchTheme':\n    return {...state, theme: action.theme};\n  case 'setNotification':\n    return {...state, notification: action.notification};\n  case 'resetNotification':\n    return {...state, notification: null};\n  default:\n    return state;\n  }\n};\n\nexport const switchApp = (app) => {\n  return async dispatch => {\n    dispatch({\n      type: 'switchApplication', application: app\n    });\n  };\n};\n\nexport const switchTheme = (theme) => {\n  return async dispatch => {\n    localStorage.setItem('rffTheme', theme);\n    dispatch({\n      type: 'switchTheme', theme: theme\n    });\n  };\n};\n\nexport const handleError = (error) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'error', message: error}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\nexport const handleInfo = (info) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'info', message: info}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\n\nexport default AppReducer;","\n\nconst initialState = {\n  user: null\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'loginSuccess':\n    return {...state, user: action.user};\n  case 'loginFailure':\n    return {...state};\n  case 'logout':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport const loginFailure = () => {\n  return async dispatch => {\n    dispatch({type: 'loginFailure'});\n  };\n};\nexport const loginSuccess = (user) => {\n  return async dispatch => {\n    dispatch({type: 'loginSuccess', user: user});\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({type: 'logout'});\n  };\n};\n\nexport default LoginReducer;","const classProvider = (theme, element) => {\n  if (theme === 'dark') {\n    switch(element) {\n    case 'navMenu':\n      return 'navMenuDa';\n    case 'navSubMenu':\n      return 'navSubMenuDa';\n    case 'navButton':\n      return 'navButtonDa';\n    case 'navSubButton':\n      return 'navSubButtonDa';\n    case 'navContent':\n      return 'navContentDa';\n    case 'navSubContent':\n      return 'navSubContentDa';\n    case 'heading':\n      return 'headingDa';\n    case 'formElement':\n      return 'formElementDa';\n    case 'calculateElement':\n      return 'formElementDa';\n    case 'calculateResult':\n      return 'calculateResultDa';\n    case 'technologyElement':\n      return 'technologyElementDa';\n    case 'text':\n      return 'textDa';\n    case 'loginButton':\n      return 'loginButtonDa';\n    case 'loginContent':\n      return 'loginContentDa';\n    case 'loginMenu':\n      return 'loginMenuDa';\n    case 'link':\n      return 'linkDa';\n    case 'description':\n      return 'descriptionDa';\n    case 'countrySearch':\n      return 'searchElementDa';\n    case 'countrySearchCancel':\n      return 'searchCancelDa';\n    case 'countryDetails':\n      return 'countryDetailsDa';\n    case 'dishyElement':\n      return 'dishyElementDa';\n    case 'stopContainer':\n      return 'stopContainer';\n    case 'stopDetails':\n      return 'stopDetailsDa';\n    case 'linkButton':\n      return 'linkButtonDa';\n    case 'notificationInfo':\n      return 'notificationInfoDa';\n    case 'notificationError':\n      return 'notificationErrorDa';\n    case 'notificationNull':\n      return 'notificationNullDa';\n    case 'tile':\n      return 'tile';\n    case 'tileDescription':\n      return 'tileDescriptionDa';\n    case 'tileLoading':\n      return 'tileLoading';\n    case 'tileError':\n      return 'tileError';\n    case 'dashTile':\n      return 'dashTile';\n    case 'listHeader':\n      return 'listHeaderDa';\n    case 'listDescription':\n      return 'listDescriptionDa';\n    case 'task':\n      return 'taskDa';\n    case 'selector':\n      return 'selectorDa';\n    case 'selected':\n      return 'selectedDa';\n    case 'activator':\n      return 'activatorDa';\n    case 'deactivator':\n      return 'deactivatorDa';\n    case 'field':\n      return 'fieldDa';\n    case 'noteArea':\n      return 'noteAreaDa';\n    default:\n      return '';\n    }\n  } else {\n    switch(element) {\n    case 'navMenu':\n      return 'navMenuLi';\n    case 'navSubMenu':\n      return 'navSubMenuLi';\n    case 'navButton':\n      return 'navButtonLi';\n    case 'navSubButton':\n      return 'navSubButtonLi';\n    case 'navContent':\n      return 'navContentLi';\n    case 'navSubContent':\n      return 'navSubContentLi';\n    case 'heading':\n      return 'headingLi';\n    case 'formElement':\n      return 'formElementLi';\n    case 'calculateElement':\n      return 'formElementLi';\n    case 'calculateResult':\n      return 'calculateResultLi';\n    case 'technologyElement':\n      return 'technologyElementLi';\n    case 'text':\n      return 'textLi';\n    case 'loginButton':\n      return 'loginButtonLi';\n    case 'loginContent':\n      return 'loginContentLi';\n    case 'loginMenu':\n      return 'loginMenuLi';\n    case 'link':\n      return 'linkLi';\n    case 'description':\n      return 'descriptionLi';\n    case 'countrySearch':\n      return 'searchElementLi';\n    case 'countrySearchCancel':\n      return 'searchCancelLi';\n    case 'countryDetails':\n      return 'countryDetailsLi';\n    case 'dishyElement':\n      return 'dishyElementLi';\n    case 'stopContainer':\n      return 'stopContainer';\n    case 'stopDetails':\n      return 'stopDetailsLi';\n    case 'linkButton':\n      return 'linkButtonLi';\n    case 'notificationInfo':\n      return 'notificationInfoLi';\n    case 'notificationError':\n      return 'notificationErrorLi';\n    case 'notificationNull':\n      return 'notificationNullLi';\n    case 'tile':\n      return 'tile';\n    case 'tileDescription':\n      return 'tileDescriptionLi';\n    case 'tileLoading':\n      return 'tileLoading';\n    case 'tileError':\n      return 'tileError';\n    case 'listHeader':\n      return 'listHeaderLi';\n    case 'listDescription':\n      return 'listDescriptionLi';\n    case 'task':\n      return 'taskLi';\n    case 'selector':\n      return 'selectorLi';\n    case 'selected':\n      return 'selectedLi';\n    case 'activator':\n      return 'activatorLi';\n    case 'deactivator':\n      return 'deactivatorLi';\n    case 'field':\n      return 'fieldLi';\n    case 'noteArea':\n      return 'noteAreaLi';\n    default:\n      return '';\n    }\n  }\n};\n\nexport default classProvider;","\nimport gql from 'graphql-tag';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    username\n    role\n    removable\n    active\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ME = gql`\n  query me($token: String!) {\n    me(token: $token) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {handleError, handleInfo, switchApp, switchTheme} from '../core/store/reducers/AppReducer';\nimport {logout, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/navigation.css';\nimport '../core/style/global.css';\n\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  switchApp, switchTheme, logout, loginSuccess, handleError, handleInfo\n};\n\nconst Navigation = (props) => {\n\n  const client = useApolloClient();\n  const themes = ['light', 'dark'];\n  const theme = props.appState.theme;\n  const loginToken = localStorage.getItem('rffUserToken');\n  const setTheme = localStorage.getItem('rffTheme');\n\n  useEffect(() => {\n    loginToken !== null && client.query({\n      query: ME,\n      variables: {\n        token: loginToken.substring(7)\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        props.loginSuccess(result.data.me);\n      } else {\n        props.handleError(errors[0]);\n      }\n    });\n  }, [loginToken, client]);\n  useEffect(() => {\n    setTheme !== null && props.switchTheme(setTheme);\n  }, []);\n\n  const MenuModule = () => {\n    return (\n      <div className={classProvider(theme, 'navMenu')}>\n        <button className={classProvider(theme, 'navButton')}>menu</button>\n        <div className={classProvider(theme, 'navContent')}>\n          <Link to='/' onClick={() => props.switchApp('Home')}>Home</Link>\n          <Link to='/dashboard' onClick={() => props.switchApp('Dashboard')}>Dashboard</Link>\n          <Link to='/calculate' onClick={() => props.switchApp( 'Calculate')}>Calculate</Link>\n          <Link to='/countries' onClick={() => props.switchApp( 'OpenCountry')}>OpenCountry</Link>\n          <Link to='/dishy' onClick={() => props.switchApp( 'Dishy')}>Dishy</Link>\n          {props.loginState.user && <Link to='/tasker' onClick={() => props.switchApp( 'Tasker')}>Tasker</Link>}\n          <Link to='/transit' onClick={() => props.switchApp( 'Transporter')}>Transporter</Link>\n          {props.loginState.user && (props.loginState.user.role === 'admin' || props.loginState.user.role === 'owner')\n            && <Link to='/admin' onClick={() => props.switchApp( 'Admin tools')}>Admin tools</Link>}\n          <Link to='/about' onClick={() => props.switchApp( 'About')}>About</Link>\n          <ThemeSelector/>\n        </div>\n      </div>\n    );\n  };\n\n  const ThemeSelector = () => {\n    return (\n      <div className={classProvider(theme, 'navSubMenu')}>\n        <button className={classProvider(theme, 'navSubButton')}>\n          <strong>{props.appState.theme}</strong> theme selected\n        </button>\n        <div className={classProvider(theme, 'navSubContent')}>\n          {themes.map((t) =>\n            <a key={t} onClick={() => props.switchTheme(t)}>{t}</a>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const LoginModule = () => {\n    if (!localStorage.getItem('rffUserToken')) {\n      return (\n        <div className={classProvider(theme, 'loginMenu')}>\n          <Link to='/login' onClick={() => props.switchApp('Login')}>login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(theme, 'navMenu')}>\n          <button type='button' className={classProvider(theme, 'navButton')}>\n            {props.loginState.user !== null ? props.loginState.user.username : null}\n          </button>\n          <div className={classProvider(theme, 'navContent')}>\n            <Link to='/user' onClick={() => props.switchApp('UserSettings')}>settings</Link>\n            <Link to='/' onClick={() => logout()}>logout</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  function logout() {\n    props.logout();\n    localStorage.removeItem('rffUserToken');\n    props.handleInfo('logged out');\n    props.switchApp('Home');\n  }\n\n  const NotificationModule = () => {\n    const notification = props.appState.notification;\n\n    if (notification && notification.type === 'info') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationInfo')}>{notification.message}</h4>\n        </div>\n      );\n    } else if (notification && notification.type === 'error') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationError')}>{notification.message}</h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationNull')}>{' '}</h4>\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='navRow'>\n      <MenuModule/>\n      <NotificationModule/>\n      <LoginModule/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries\n  };\n};\n\nconst CountryCount = (props) => {\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.theme, 'tileDescription')}>\n        <strong>{props.countries.length}</strong> countries information available\n      </p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(CountryCount);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_COUNT = gql`\n  query groupCount($token: String!, $mode: String) {\n    groupCount(token: $token, mode: $mode)\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {GROUP_COUNT} from '../../core/graphql/rff/queries/q_groupCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst GroupCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken,\n        mode: 'admin'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>all {data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(GroupCount);","\nimport gql from 'graphql-tag';\n\nexport const ALL_LIST_COUNT = gql`\n  query allListCount($token: String!) {\n    allListCount(token: $token)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const LIST_COUNT = gql`\n  query listCount($token: String!) {\n    listCount(token: $token)\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport {useQuery} from '@apollo/react-hooks';\nimport '../../core/style/global.css';\n\nimport {ALL_LIST_COUNT} from '../../core/graphql/rff/queries/q_allListCount';\nimport {LIST_COUNT} from '../../core/graphql/rff/queries/q_listCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst ListCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading task list count</p>;\n    } else {\n      if (error) {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading task list\n          count</p>;\n      } else if (data) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.listCount}</strong> task lists accessible</p>;\n      }\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task list count\n      </p>;\n    } else {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allListCount}</strong> task lists in database\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task list count\n        </p>;\n      }\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCount);","\nimport gql from 'graphql-tag';\n\nexport const TASK_COUNT = gql`\n  query taskCount($token: String!, $countType: String!) {\n    taskCount(token: $token, countType: $countType)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const ALL_TASK_COUNT = gql`\n  query allTaskCount($token: String!) {\n    allTaskCount(token: $token)\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nimport {TASK_COUNT} from '../../core/graphql/rff/queries/q_taskCount';\nimport {ALL_TASK_COUNT} from '../../core/graphql/rff/queries/q_allTaskCount';\nimport {useQuery} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TaskCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(TASK_COUNT, {\n      variables: {\n        token: userToken,\n        countType: 'total'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.taskCount}</strong> tasks listed in accessible lists\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count\n      </p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_TASK_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allTaskCount}</strong> tasks listed in the database\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TaskCount);","\nimport gql from 'graphql-tag';\n\nexport const DISH_COUNT = gql`\n  query {\n    dishCount\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {DISH_COUNT} from '../../core/graphql/rff/queries/q_dishCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst DishCount = (props) => {\n  const {data, error, loading} = useQuery(DISH_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.dishCount}</strong> dishes available\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading dish count\n        </p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading dish count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DishCount);","\n\nimport gql from 'graphql-tag';\n\nexport const CARB_COUNT = gql`\n  query {\n    carbCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const PROTEIN_COUNT = gql`\n  query {\n    proteinCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const SPICE_COUNT = gql`\n  query {\n    spiceCount\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {CARB_COUNT} from '../../core/graphql/rff/queries/q_carbCount.js';\nimport {PROTEIN_COUNT} from '../../core/graphql/rff/queries/q_proteinCount.js';\nimport {SPICE_COUNT} from '../../core/graphql/rff/queries/q_spiceCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst IngredientCount = (props) => {\n  const carbResult = useQuery(CARB_COUNT);\n  const proteinResult = useQuery(PROTEIN_COUNT);\n  const spiceResult = useQuery(SPICE_COUNT);\n  let data = 0;\n\n  const Count = () => {\n    if (!carbResult.loading && !proteinResult.loading && !spiceResult.loading) {\n      if (carbResult.data && proteinResult.data && spiceResult.data) {\n        data = carbResult.data.carbCount + proteinResult.data.proteinCount + spiceResult.data.spiceCount;\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data}</strong> ingredients available\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading ingredient count\n        </p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading ingredient count\n    </p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(IngredientCount);","\nimport gql from 'graphql-tag';\n\nexport const METHOD_COUNT = gql`\n  query {\n    methodCount\n  }\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {METHOD_COUNT} from '../../core/graphql/rff/queries/q_methodCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst MethodCount = (props) => {\n  const {data, error, loading} = useQuery(METHOD_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.methodCount}</strong> cooking methods available\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading cooking method count\n        </p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading cooking method count\n    </p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(MethodCount);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TrackedStopsCount = (props) => {\n  const data = 0;\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.appState.theme, 'tileDescription')}><strong>{data}</strong> stops timetables tracked</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TrackedStopsCount);","\nimport gql from 'graphql-tag';\n\nexport const USER_COUNT = gql`\n  query userCount($token: String!) {\n    userCount(token: $token)\n  }\n`;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useApolloClient, useQuery} from '@apollo/react-hooks';\n\nimport {USER_COUNT} from '../../core/graphql/rff/queries/q_userCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst UserCount = (props) => {\n  const userCount = useQuery(USER_COUNT, {\n    variables: {\n      token: localStorage.getItem('rffUserToken').substring(7)\n    }\n  });\n\n  const Count = () => {\n    if (props.mode === 'admin') {\n      if (userCount.loading) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileLoading')}>loading user count</p>\n        );\n      } else if (userCount.error) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading data</p>\n        );\n      } else if (userCount.data) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> users</p>\n        );\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserCount);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport CountryCount from './widgets/CountryCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport TaskCount from './widgets/TaskCount';\nimport DishCount from './widgets/DishCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport MethodCount from './widgets/MethodCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport UserCount from './widgets/UserCount';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst AdminTools = (props) => {\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <ListCount mode='admin'/>\n        <TaskCount mode='admin'/>\n        <GroupCount mode='admin'/>\n        <UserCount mode='admin'/>\n        <TrackedStopsCount mode='admin'/>\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>App statistics:</h4>\n        <WidgetsCommon/>\n        <WidgetsAdvanced/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>User management:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Group management:</h4>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(AdminTools);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Colors = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used color palette:</h4>\n        <div className='appElements'>\n          <div className='peru'/>\n          <div className='gainsboro'/>\n          <div className='darkslategrey'/>\n          <div className='yellowgreen'/>\n          <div className='reactblue'/>\n          <div className='slateblue'/>\n          <div className='deeppink'/>\n        </div>\n        <div className='appElements'>\n          <div className='seagreen'/>\n          <div className='googleblue'/>\n          <div className='googlered'/>\n          <div className='googleyellow'/>\n          <div className='googlegreen'/>\n          <div className='amazonorange'/>\n          <div className='heroku'/>\n        </div>\n        <div className='appElements'>\n          <div className='bus'/>\n          <div className='citybike'/>\n          <div className='tram'/>\n          <div className='train'/>\n          <div className='metro'/>\n          <div className='jokerilightrail'/>\n          <div className='ferry'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslpink'/>\n          <div className='hslpinklight'/>\n          <div className='hslgreen'/>\n          <div className='hslgreenlight'/>\n          <div className='hslwarning'/>\n          <div className='hslhighlight'/>\n          <div className='ferrylight'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslblue'/>\n          <div className='digitransit'/>\n          <div className='dgray'/>\n          <div className='gray'/>\n          <div className='lgray'/>\n          <div className='vlgray'/>\n          <div className='jbamber'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbsiena'/>\n          <div className='jbcrimson'/>\n          <div className='jbcarmine'/>\n          <div className='jbfuchsia'/>\n          <div className='jbmauve'/>\n          <div className='jblilac'/>\n          <div className='jbpurple'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbskyblue'/>\n          <div className='jbgreen'/>\n          <div className='jblemon'/>\n          <div className='slackblue'/>\n          <div className='slackgreen'/>\n          <div className='slackyellow'/>\n          <div className='slackred'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Colors);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Icon, InlineIcon} from '@iconify/react';\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport altairIcon from '@iconify/icons-logos/altair';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>},\n    {name: 'Altair', url: 'https://altair.sirmuel.design/', icon: <InlineIcon icon={altairIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>;\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>;\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>;\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>;\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>;\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>;\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Repository:</h4>\n        <Repository/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        <Front/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        <Back/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        <Data/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        <Testing/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst OtherStyles = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Other styles:</h4>\n        <div className='appElements'>\n          <a className={classProvider(props.appState.theme, 'link')} href='https://fonts.google.com/specimen/Raleway'>Font: Raleway</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(OtherStyles);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../core/style/global.css';\n\nimport Colors from './widgets/Colors';\nimport Technologies from './widgets/Technologies';\nimport OtherStyles from './widgets/OtherStyles';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst About = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <Technologies/>\n        <Colors/>\n        <OtherStyles/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(About);","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/calculate.css';\nimport '../core/style/forms.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Calculator = (props) => {\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n\n  const Results = () => {\n    return (\n      <>\n        <div className='appElements'>\n          <Addition/>\n          <Multiplication/>\n          <Exponentiation/>\n          <Cube/>\n        </div>\n        <div className='appElements'>\n          <Subtraction/>\n          <Division/>\n          <RootSquare/>\n          <RootCubic/>\n        </div>\n      </>\n    );\n  };\n\n  const Addition = () => {\n    const result = Number(value1) + Number(value2);\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Addition</p>\n        <p>{value1} + {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Subtraction = () => {\n    const result = numbro(Number(value1) - Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Subtraction</p>\n        <p>{value1} - {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Division = () => {\n    if (Number(value2) === 0) {\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <a href='https://en.wikipedia.org/wiki/Division_by_zero'> nope </a>\n        </div>\n      );\n    } else {\n      const result = numbro(Number(value1) / Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <p>{value1} / {value2} {'\\u2243'} <strong>{result}</strong></p>\n        </div>\n      );\n    }\n  };\n  const Multiplication = () => {\n    const result = numbro(Number(value1) * Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Multiplication</p>\n        <p>{value1} * {value2} {'\\u2243'} <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Exponentiation = () => {\n    const res1 = numbro(Number(value1) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res3 = numbro(Number(value1) ** Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Exponentiation</p>\n        <p>{value1} ^ 2 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 2 {'\\u2243'} <strong>{res2}</strong></p>\n        <p>{value1} ^ {value2} {'\\u2243'} <strong>{res3}</strong></p>\n      </div>\n    );\n  };\n  const Cube = () => {\n    const res1 = numbro(Number(value1) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube</p>\n        <p>{value1} ^ 3 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 3 {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootSquare = () => {\n    const res1 = numbro(Math.sqrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.sqrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Square root</p>\n        <p>{'\\u221a'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221a'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootCubic = () => {\n    const res1 = numbro(Math.cbrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.cbrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube root</p>\n        <p>{'\\u221B'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221B'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <form className='appElements'>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue1(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue2(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n        </form>\n        <Results/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Calculator);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport CountryCount from './widgets/CountryCount';\nimport DishCount from './widgets/DishCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport MethodCount from './widgets/MethodCount';\nimport TaskCount from './widgets/TaskCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport {Link} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Dashboard = (props) => {\n  const common = [\n    {app: 'Calculate', link: '/calculate'},\n    {app: 'Dishy', link: '/dishy'},\n    {app: 'OpenCountry', link: '/countries'},\n  ];\n  const advanced = [\n    {app: 'Tasker', link: '/tasker'},\n    {app: 'Transporter', link: '/transit'},\n  ];\n\n  const ApplicationsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        {common.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const ApplicationsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        {advanced.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <GroupCount/>\n        <ListCount/>\n        <TaskCount/>\n        <TrackedStopsCount/>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Available applications:</h4>\n        <ApplicationsCommon/>\n        {props.user ? <ApplicationsAdvanced/> : null}\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Statistics:</h4>\n        <WidgetsCommon/>\n        {props.user ? <WidgetsAdvanced/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport gql from 'graphql-tag';\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    type\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_CARBS = gql`\n  query {\n    allCarbs {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_PROTEINS = gql`\n  query {\n    allProteins {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_SPICES = gql`\n  query {\n    allSpices {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const METHOD_DETAILS = gql`\n  fragment MethodDetails on CookingMethod {\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ALL_METHODS = gql`\n  query {\n    allMethods {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_INGREDIENT_DETAILS = gql`\n    fragment DishIngredientDetails on Ingredient {\n        type\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_METHOD_DETAILS = gql`\n    fragment DishMethodDetails on CookingMethod {\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\nimport {DISH_INGREDIENT_DETAILS} from './f_dishIngredientFragment';\nimport {DISH_METHOD_DETAILS} from './f_dishMethodFragment';\n\nexport const DISH_DETAILS = gql`\n  fragment DishDetails on Dish {\n    name\n    cookingMethods {\n        ...DishMethodDetails\n    }\n    proteins {\n        ...DishIngredientDetails\n    }\n    carbs {\n        ...DishIngredientDetails\n    }\n    spices {\n        ...DishIngredientDetails\n    }\n    karma\n    note\n    addedBy {\n      ...UserDetails\n    }\n    id\n  }\n  ${USER_DETAILS}\n  ${DISH_INGREDIENT_DETAILS}\n  ${DISH_METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ALL_DISHES = gql`\n  query {\n    allDishes {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ADD_METHOD = gql`\n  mutation addMethod($token: String!, $name: String!) {\n    addMethod(token: $token, name: $name) {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient($token: String!, $name: String!, $type: String!) {\n    addIngredient(token: $token, name: $name, type: $type) {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ADD_DISH = gql`\n  mutation addDish($token: String!, $name: String!, $cookingMethods: [String!]!,\n    $carbs: [String!]!, $proteins: [String!]!, $spices: [String!]!, $note: String!) {\n    addDish(token: $token, name: $name, cookingMethods: $cookingMethods,\n      carbs: $carbs, proteins: $proteins, spices: $spices, note: $note) {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_ADDED = gql`\n  subscription {\n    dishAdded {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_UPDATED = gql`\n  subscription {\n    dishUpdated {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_REMOVED = gql`\n  subscription {\n    dishRemoved {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_VOTED = gql`\n  subscription {\n    dishVoted {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_UPDATED = gql`\n  subscription {\n    ingredientUpdated {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_REMOVED = gql`\n  subscription {\n    ingredientRemoved {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_ADDED = gql`\n  subscription {\n    methodAdded {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_UPDATED = gql`\n  subscription {\n    methodUpdated {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_REMOVED = gql`\n  subscription {\n    methodRemoved {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nconst initialState = {\n  carbSearch: '',\n  proteinSearch: '',\n  spiceSearch: '',\n  methodSearch: '',\n  newDish: false,\n  newDishCarbs: [],\n  newDishProteins: [],\n  newDishSpices: [],\n  newDishMethods: []\n};\n\nconst DishyReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setCarbSearch':\n    return {...state, carbSearch: action.carbSearch};\n  case 'setProteinSearch':\n    return {...state, proteinSearch: action.proteinSearch};\n  case 'setSpiceSearch':\n    return {...state, spiceSearch: action.spiceSearch};\n  case 'setMethodSearch':\n    return {...state, methodSearch: action.methodSearch};\n  case 'setNewDish':\n    return {...state, newDish: true};\n  case 'setNewDishCarbs':\n    return {...state, newDishCarbs: [...state.newDishCarbs, action.carb]};\n  case 'setNewDishProteins':\n    return {...state, newDishProteins: [...state.newDishProteins, action.protein]};\n  case 'setNewDishSpices':\n    return {...state, newDishSpices: [...state.newDishSpices, action.spice]};\n  case 'setNewDishMethods':\n    return {...state, newDishMethods: [...state.newDishMethods, action.method]};\n  case 'resetNewDish':\n    return {...state, newDish: false, newDishCarbs: [], newDishProteins: [], newDishSpices: [], newDishMethods: []};\n  default:\n    return state;\n  }\n};\n\nexport const initDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDish'\n    });\n  };\n};\n\nexport const resetDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetNewDish'\n    });\n  };\n};\n\nexport const addDishCarb = (carb) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishCarbs', carb: {name: carb.name, id: carb.id}\n    });\n  };\n};\n\nexport const addDishProtein = (protein) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishProteins', protein: {name: protein.name, id: protein.id}\n    });\n  };\n};\n\nexport const addDishSpice = (spice) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishSpices', spice: {name: spice.name, id: spice.id}\n    });\n  };\n};\n\nexport const addDishMethod = (method) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishMethods', method: {name: method.name, id: method.id}\n    });\n  };\n};\n\nexport const setSearchCarb = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: search\n    });\n  };\n};\n\nexport const setSearchProtein = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: search\n    });\n  };\n};\n\nexport const setSearchSpice = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: search\n    });\n  };\n};\n\nexport const setSearchMethod = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: search\n    });\n  };\n};\n\nexport const resetSearchCarb = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: ''\n    });\n  };\n};\n\nexport const resetSearchProtein = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: ''\n    });\n  };\n};\n\nexport const resetSearchSpice = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: ''\n    });\n  };\n};\n\nexport const resetSearchMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: ''\n    });\n  };\n};\n\nexport default DishyReducer;","// Dishy.js | application on demosite.\n\n// IMPORTS\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\n\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\nimport {ALL_PROTEINS} from '../core/graphql/rff/queries/q_allProteins';\nimport {ALL_SPICES} from '../core/graphql/rff/queries/q_allSpices';\nimport {ALL_METHODS} from '../core/graphql/rff/queries/q_allMethods';\nimport {ALL_DISHES} from '../core/graphql/rff/queries/q_allDishes';\nimport {ADD_METHOD} from '../core/graphql/rff/mutations/m_addMethod';\nimport {ADD_INGREDIENT} from '../core/graphql/rff/mutations/m_addIngredient';\nimport {ADD_DISH} from '../core/graphql/rff/mutations/m_addDish';\nimport {DISH_ADDED} from '../core/graphql/rff/subscriptions/s_dishAdded';\nimport {DISH_UPDATED} from '../core/graphql/rff/subscriptions/s_dishUpdated';\nimport {DISH_REMOVED} from '../core/graphql/rff/subscriptions/s_dishRemoved';\nimport {DISH_VOTED} from '../core/graphql/rff/subscriptions/s_dishVoted';\nimport {INGREDIENT_ADDED} from '../core/graphql/rff/subscriptions/s_ingredientAdded';\nimport {INGREDIENT_UPDATED} from '../core/graphql/rff/subscriptions/s_ingredientUpdated';\nimport {INGREDIENT_REMOVED} from '../core/graphql/rff/subscriptions/s_ingredientRemoved';\nimport {METHOD_ADDED} from '../core/graphql/rff/subscriptions/s_methodAdded';\nimport {METHOD_UPDATED} from '../core/graphql/rff/subscriptions/s_methodUpdated';\nimport {METHOD_REMOVED} from '../core/graphql/rff/subscriptions/s_methodRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {initDish, resetDish, addDishCarb, addDishProtein, addDishSpice,\n  addDishMethod} from '../core/store/reducers/DishyReducer';\n\n// prop mapper. maps imported state from store to usable props.\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    dishyState: state.dishyState,\n    user: state.loginState.user\n  };\n};\n\n// prop mapper. maps imported functions from store to usable props.\nconst mapDispatchToProps = {\n  initDish, resetDish, addDishCarb, addDishProtein, addDishSpice, addDishMethod,\n  handleInfo, handleError\n};\n\n// Dishy. application for site.\nconst Dishy = (props) => {\n  const client = useApolloClient();\n  const carbResults = useQuery(ALL_CARBS);\n  const proteinResults = useQuery(ALL_PROTEINS);\n  const spiceResults = useQuery(ALL_SPICES);\n  const methodResults = useQuery(ALL_METHODS);\n  const dishResults = useQuery(ALL_DISHES);\n\n  useSubscription(DISH_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishAdded;\n      updateCacheWithDish('added', dish);\n    }\n  });\n  useSubscription(DISH_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishUpdated;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_VOTED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishVoted;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishRemoved;\n      updateCacheWithDish('removed', dish);\n    }\n  });\n  useSubscription(INGREDIENT_ADDED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('added', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('added', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('added', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientUpdated;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('updated', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('updated', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('updated', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('removed', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('removed', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('removed', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(METHOD_ADDED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodAdded;\n      updateCacheWithMethod('added', method);\n    }\n  });\n  useSubscription(METHOD_UPDATED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodUpdated;\n      updateCacheWithMethod('updated', method);\n    }\n  });\n  useSubscription(METHOD_REMOVED, {\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodRemoved;\n      updateCacheWithMethod('removed', method);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithCarb = (eventType, carb) => {\n    const includedIn = (set, object) => set.map(c => c.id).includes(object.id);\n    const dataInStore = client.readQuery({query: ALL_CARBS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allCarbs, carb)) {\n        client.writeQuery({\n          query: ALL_CARBS,\n          data: {allCarbs: dataInStore.allCarbs.concat(carb)}\n        });\n        props.handleInfo(`Carb added: ${carb.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.map(c => {\n              return c.id === carb.id ? carb : c;\n            })}\n        });\n        props.handleInfo(`Carb updated: ${carb.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.forEach(c => {\n              if (c.id !== carb.id) return c;\n            })}\n        });\n        props.handleInfo(`Carb removed: ${carb.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithProtein = (eventType, protein) => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n    const dataInStore = client.readQuery({query: ALL_PROTEINS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allProteins, protein)) {\n        client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {allProteins: dataInStore.allProteins.concat(protein)}\n        });\n        props.handleInfo(`Protein added: ${protein.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.map(p => {\n              return p.id === protein.id ? protein : p;\n            })}\n        });\n        props.handleInfo(`Protein updated: ${protein.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.forEach(p => {\n              if (p.id !== protein.id) return p;\n            })}\n        });\n        props.handleInfo(`Protein removed: ${protein.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithSpice = (eventType, spice) => {\n    const includedIn = (set, object) => set.map(s => s.id).includes(object.id);\n    const dataInStore = client.readQuery({query: ALL_SPICES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allSpices, spice)) {\n        client.writeQuery({\n          query: ALL_SPICES,\n          data: {allSpices: dataInStore.allSpices.concat(spice)}\n        });\n        props.handleInfo(`Spice added: ${spice.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.map(s => {\n              return s.id === spice.id ? spice : s;\n            })}\n        });\n        props.handleInfo(`Spice updated: ${spice.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.forEach(s => {\n              if (s.id !== spice.id) return s;\n            })}\n        });\n        props.handleInfo(`Spice removed: ${spice.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithMethod = (eventType, method) => {\n    const includedIn = (set, object) => set.map(m => m.id).includes(object.id);\n    const dataInStore = client.readQuery({query: ALL_METHODS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allMethods, method)) {\n        client.writeQuery({\n          query: ALL_METHODS,\n          data: {allMethods: dataInStore.allMethods.concat(method)}\n        });\n        props.handleInfo(`Method added: ${method.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allMethods, method)) {\n        client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.map(m => {\n              return m.id === method.id ? method : m;\n            })}\n        });\n        props.handleInfo(`Method updated: ${method.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allMethods, method)) {\n        client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.forEach(m => {\n              if (m.id !== method.id) return m;\n            })}\n        });\n        props.handleInfo(`Method removed: ${method.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithDish = (eventType, dish) => {\n    const includedIn = (set, object) => set.map(d => d.id).includes(object.id);\n    const dataInStore = client.readQuery({query: ALL_DISHES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allDishes, dish)) {\n        client.writeQuery({\n          query: ALL_DISHES,\n          data: {allDishes: dataInStore.allDishes.concat(dish)}\n        });\n        props.handleInfo(`Dish added: ${dish.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.map(d => {\n              return d.id === dish.id ? dish : d;\n            })}\n        });\n        props.handleInfo(`Dish updated: ${dish.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.forEach(d => {\n              if (d.id !== dish.id) return d;\n            })}\n        });\n        props.handleInfo(`Dish removed: ${dish.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Loading = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>loading . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Error = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>something went wrong . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'data' is set but has no information.\n  const Empty = ({type}) => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>no {type} available</p>\n        </div>\n      </div>\n    );\n  };\n\n  // helper function to add ingredients or methods to new dish.\n  // checks whether or not instance of component has been added already before adding to list.\n  function handleAddComponent(event, component, type) {\n    event.preventDefault();\n    const {newDishCarbs, newDishProteins, newDishSpices, newDishMethods} = props.dishyState;\n    if (!props.dishyState.newDish) {\n      props.initDish();\n    }\n    switch (type) {\n    case 'carb':\n      if (!newDishCarbs.filter(c => c.id === component.id).length > 0) props.addDishCarb(component);\n      break;\n    case 'protein':\n      if (!newDishProteins.filter(p => p.id === component.id).length > 0) props.addDishProtein(component);\n      break;\n    case 'spice':\n      if (!newDishSpices.filter(s => s.id === component.id).length > 0) props.addDishSpice(component);\n      break;\n    case 'method':\n      if (!newDishMethods.filter(m => m.id === component.id).length > 0) props.addDishMethod(component);\n      break;\n    default:\n      break;\n    }\n  }\n\n  // subcomponent. renders selector for found carbs & selected carb information.\n  const Carbs = () => {\n    const [selection, setSelection] = useState(null);\n    if (carbResults.loading) {\n      return <Loading/>;\n    } else if (carbResults.data && carbResults.data.allCarbs) {\n      const resultCount = carbResults.data.allCarbs.length;\n      if (resultCount > 0) {\n        return (\n          <div id='carbSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='carbSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>carbs</option>\n                {carbResults.data.allCarbs.map((c) => <option key={c.id} value={JSON.stringify(c)}>{c.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedCarb' type='carb' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'carb')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='carbs'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found proteins & selected protein information.\n  const Proteins = () => {\n    const [selection, setSelection] = useState(null);\n    if (proteinResults.loading) {\n      return <Loading/>;\n    } else if (proteinResults.data && proteinResults.data.allProteins) {\n      const resultCount = proteinResults.data.allProteins.length;\n      if (resultCount > 0) {\n        return (\n          <div id='proteinSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='proteinSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>proteins</option>\n                {proteinResults.data.allProteins.map((p) => <option key={p.id} value={JSON.stringify(p)}>{p.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedProtein' type='protein' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'protein')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='proteins'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found spices & selected spice information.\n  const Spices = () => {\n    const [selection, setSelection] = useState(null);\n    if (spiceResults.loading) {\n      return <Loading/>;\n    } else if (spiceResults.data && spiceResults.data.allSpices) {\n      const resultCount = spiceResults.data.allSpices.length;\n      if (resultCount > 0) {\n        return (\n          <div id='spiceSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='spiceSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>spices</option>\n                {spiceResults.data.allSpices.map((s) => <option key={s.id} value={JSON.stringify(s)}>{s.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedSpice' type='spice' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'spice')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='spices'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found cooking methods & selected method information.\n  const Methods = () => {\n    const [selection, setSelection] = useState(null);\n    if (methodResults.loading) {\n      return <Loading/>;\n    } else if (methodResults.data && methodResults.data.allMethods) {\n      const resultCount = methodResults.data.allMethods.length;\n      if (resultCount > 0) {\n        return (\n          <div id='methodSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='methodSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>cooking methods</option>\n                {methodResults.data.allMethods.map((m) => <option key={m.id} value={JSON.stringify(m)}>{m.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedMethod' type='method' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'method')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='cooking methods'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found dishes & selected dish information.\n  const Dishes = () => {\n    const [selection, setSelection] = useState(null);\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else {\n        return (\n          <div id='dishSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='dishSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>dishes</option>\n                {dishResults.data.allDishes.map((d) => <option key={d.id} value={JSON.stringify(d)}>{d.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Dish id='selectedDish' methods={selection.cookingMethods} carbs={selection.carbs} spices={selection.spices}\n                  proteins={selection.proteins} note={selection.note} name={selection.name}/>\n              </div>}\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders random dish information.\n  const Random = () => {\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else if (resultCount === 1) {\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[0];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      } else {\n        const random = Math.floor(Math.random() * Math.floor(dishResults.data.allDishes.length));\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[random];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n\n  // helper function. handles new dish component submission.\n  // checks the type of submission and sets variables accordingly.\n  const handleNewComponent = async (type) => {\n    const token = await localStorage.getItem('rffUserToken').substring(7);\n    let variables;\n    switch (type) {\n    case 'carb':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newCarbName').value\n      };\n      break;\n    case 'protein':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newProteinName').value\n      };\n      break;\n    case 'spice':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newSpiceName').value\n      };\n      break;\n    case 'method':\n      variables = {\n        token: token,\n        name: document.getElementById('newMethodName').value\n      };\n      break;\n    default:\n      variables = null;\n      break;\n    }\n    if (variables !== null && variables.token) {\n      await client.mutate({\n        mutation: type === 'method' ? ADD_METHOD : ADD_INGREDIENT,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then(async (result) => {\n        const {data} = result;\n        if (data !== null) {\n          switch (type) {\n          case 'carb':\n            await updateCacheWithCarb('added', data.addIngredient);\n            props.handleInfo(`New ${type} saved: ${data.addIngredient.name}`);\n            break;\n          case 'protein':\n            await updateCacheWithProtein('added', data.addIngredient);\n            props.handleInfo(`New ${type} saved: ${data.addIngredient.name}`);\n            break;\n          case 'spice':\n            await updateCacheWithSpice('added', data.addIngredient);\n            props.handleInfo(`New ${type} saved: ${data.addIngredient.name}`);\n            break;\n          case 'method':\n            await updateCacheWithMethod('added', data.addMethod);\n            props.handleInfo(`New ${type} saved: ${data.addMethod.name}`);\n            break;\n          default:\n            variables = null;\n            break;\n          }\n        } else {\n          props.handleError(`Error occurred with ${type}: cannot add ${variables.name}`);\n        }\n      }\n      );\n    }\n  };\n\n  // subcomponent. renders form for new dish component submission.\n  // selector defines which type of dish component will be submitted to handler function.\n  const NewComponent = () => {\n    const [selection, setSelection] = useState('carb');\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <p className={classProvider(props.theme, 'heading')}><strong>Add new...</strong></p>\n          <div id='addComponentSelector' className='selector'>\n            <button id='componentSelectCarb' type='button' onClick={() => setSelection('carb')}\n              className={selection === 'carb'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>carb</button>\n            <button id='componentSelectProtein' type='button' onClick={() => setSelection('protein')}\n              className={selection === 'protein'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>protein</button>\n            <button id='componentSelectSpice' type='button' onClick={() => setSelection('spice')}\n              className={selection === 'spice'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>spice</button>\n            <button id='componentSelectMethod' type='button' onClick={() => setSelection('method')}\n              className={selection === 'method'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>method</button>\n          </div>\n          <DishComponentForm selection={selection}/>\n        </div>\n      </div>\n    );\n  };\n\n  const DishComponentForm = ({selection}) => {\n    switch (selection) {\n    case 'carb': return <NewCarb/>;\n    case 'method': return <NewMethod/>;\n    case 'protein': return <NewProtein/>;\n    case 'spice': return <NewSpice/>;\n    default: return null;\n    }\n  };\n  // subcomponent. renders form for new spice submission.\n  const NewSpice = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newSpiceName' placeholder='spice name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('spice')} id='saveSpice' className={classProvider(props.theme, 'activator')}>Save spice</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new protein submission.\n  const NewProtein = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newProteinName' placeholder='protein name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('protein')} id='saveProtein' className={classProvider(props.theme, 'activator')}>Save protein</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new carb submission.\n  const NewCarb = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newCarbName' placeholder='carb name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('carb')} id='saveCarb' className={classProvider(props.theme, 'activator')}>Save carb</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new cooking method submission.\n  const NewMethod = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newMethodName' placeholder='method name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('method')} id='saveMethod' className={classProvider(props.theme, 'activator')}>Save method</button>\n      </div>\n    );\n  };\n\n  // helper function. handles new dish submission.\n  // maps added dish component values to id's (string formatted),\n  // creates variables for GraphQL and triggers mutation.\n  const handleNewDish = async () => {\n    const {newDishMethods, newDishProteins, newDishCarbs, newDishSpices, newDish} = props.dishyState;\n    if (newDish) {\n      const token = await localStorage.getItem('rffUserToken').substring(7);\n      const variables = {\n        token: token(),\n        name: document.getElementById('newDishName').value,\n        note: document.getElementById('newDishNote').value,\n        cookingMethods: newDishMethods.map(m => m.id),\n        proteins: newDishProteins.map(p => p.id),\n        carbs: newDishCarbs.map(c => c.id),\n        spices: newDishSpices.map(s => s.id)\n      };\n      if (variables.token) {\n        await client.mutate({\n          mutation: ADD_DISH,\n          variables: variables,\n          errorPolicy: 'ignore'\n        }).then(async (result) => {\n          const {data} = result;\n          if (data !== null) {\n            await resetDishForm();\n            props.handleInfo(`New dish saved: ${variables.name}`);\n          } else {\n            props.handleError(`Error occurred with dish: cannot add ${variables.name}`);\n          }\n        });\n      }\n    }\n  };\n\n  const resetDishForm = () => {\n    document.getElementById('newDishName').value = '';\n    document.getElementById('newDishNote').value = '';\n    props.resetDish();\n  };\n\n  // subcomponent. renders form for new dish submission.\n  // selector activates/deactivates form.\n  // form activated also when dish component added to new dish if form is not active.\n  // deactivation resets added components from Redux-state.\n  const NewDish = () => {\n    const {\n      newDish, newDishCarbs, newDishProteins, newDishSpices, newDishMethods\n    } = props.dishyState;\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <h4 className={classProvider(props.theme, 'heading')}>Add new dish</h4>\n          {newDish\n            ? <button type='button' onClick={() => resetDishForm()} id='newDishDeactivate'\n              className={classProvider(props.theme, 'deactivator')}>reset dish</button>\n            : <button type='button' onClick={() => props.initDish()} id='newDishActivate'\n              className={classProvider(props.theme, 'activator')}>create dish</button>}\n          {newDish && <>\n            <Dish view='new' carbs={newDishCarbs} proteins={newDishProteins}\n              spices={newDishSpices} methods={newDishMethods}/>\n            <button id='saveDish' onClick={() => handleNewDish()}\n              type='button' className={classProvider(props.theme, 'activator')}>Save dish</button>\n          </>}\n        </div>\n      </div>\n    );\n  };\n\n  // subcomponent. renders dish with given information.\n  const Dish = ({view, carbs, proteins, spices, methods, note, name}) => {\n    if (view === 'random') {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else if (view === 'new') {\n      return (\n        <div className='dish'>\n          <input className={classProvider(props.theme, 'noteArea')}\n            placeholder='dish name' type='text' id='newDishName'/>\n          <input type='text' className={classProvider(props.theme, 'noteArea')}\n            placeholder='description, steps, etc.' id='newDishNote'/>\n          <div className='componentContainer'>\n            <DishComponents id='newDishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='newDishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='newDishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='newDishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish components with given information.\n  const DishComponents = ({type, components, viewType}) => {\n    if (components.length > 0) {\n      return (\n        <div className='components'>\n          {type === 'carb' && <h4 className={classProvider(props.theme, 'text')}>Carbs:</h4>}\n          {type === 'protein' && <h4 className={classProvider(props.theme, 'text')}>Proteins:</h4>}\n          {type === 'spice' && <h4 className={classProvider(props.theme, 'text')}>Spices:</h4>}\n          {type === 'method' && <h4 className={classProvider(props.theme, 'text')}>Cooking methods:</h4>}\n          {components.map((c) => <Component key={c.name} component={c} type={type} view='plain'/>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className='components'>\n          {type === 'carb' && <p className={classProvider(props.theme, 'text')}>no carbs</p>}\n          {type === 'protein' && <p className={classProvider(props.theme, 'text')}>no proteins</p>}\n          {type === 'spice' && <p className={classProvider(props.theme, 'text')}>no spices</p>}\n          {type === 'method' && <p className={classProvider(props.theme, 'text')}>no cooking methods</p>}\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish component information.\n  const Component = ({component, view}) => {\n    if (props.dishyState.newDish && view === 'new') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else if (view === 'random' || view === 'plain') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else {\n      const uses = component.uses.length;\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n          <p className={classProvider(props.theme, 'text')}>\n            {uses > 1 ? `used in ${uses} dishes` : uses === 1 ? 'used in 1 dish' : 'no usage'}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.theme, 'heading')}>Suggested:</h4>\n        <Random id='randomDish'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Dishes:</h4>\n        <Dishes id='dishes'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Carbs:</h4>\n        <Carbs id='carbs'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Proteins:</h4>\n        <Proteins id='proteins'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Spices:</h4>\n        <Spices id='spices'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Cooking methods:</h4>\n        <Methods id='methods'/>\n        {props.show === 'advanced' && <NewComponent id='newDishComponent'/>}\n        {props.show === 'advanced' && <NewDish id='newDish'/>}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishy);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst LandingPage = (props) => {\n\n  const Locked = () => {\n    return(\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>If you want to use these advanced features, please log in.</p>\n      </div>\n    );\n  };\n\n  const Unlocked = () => {\n    return(\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>You have logged in and therefore eligible to use advanced features.</p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        {props.loginState.user === null\n          ? <Locked/>\n          : <Unlocked/>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(LandingPage);","\nimport gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","import React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {loginFailure, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient, useMutation} from '@apollo/react-hooks';\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst LoginPage = (props) => {\n  const client = useApolloClient();\n  const [login] = useMutation(LOGIN);\n\n  const handleLogin = () => {\n    login({\n      errorPolicy: 'ignore',\n      variables: {\n        username: document.getElementById('loginUsername').value,\n        password: document.getElementById('loginPassword').value\n      }\n    }).then((result) => {\n      const {data} = result;\n      let loginToken;\n      if (data !== null) {\n        loginToken = data.login.value;\n        client.query({\n          query: ME,\n          variables: {\n            token: loginToken.substring(7)\n          }\n        }).then((result) => {\n          document.getElementById('loginUsername').value = '';\n          document.getElementById('loginPassword').value = '';\n          localStorage.setItem('rffUserToken', loginToken);\n          props.loginSuccess(result.data.me);\n          props.handleInfo('logged in successfully');\n        });\n      } else {\n        document.getElementById('loginPassword').value = '';\n        props.handleError('invalid username or password');\n        props.loginFailure();\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      {localStorage.getItem('rffUserToken') && <Redirect push to='/'/>}\n      <div className='container'>\n        <form className='commonElements'>\n          <input id='loginUsername' type='text' placeholder='username'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='loginPassword' type='password' placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='loginButton' type='button' onClick={() => handleLogin()}\n            className={classProvider(props.theme, 'formElement')}>{'login >'}</button>\n          <Link id='gotoRegisterButton' to='/register' onClick={() => props.switchApp('Register')}\n            className={classProvider(props.theme, 'formElement')}>{'register >'}</Link>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","\n\nconst initialState = {\n  countries: [],\n  countrySearch: '',\n  selected: ''\n};\n\nconst CountryReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'search':\n    return {...state, countrySearch: action.search};\n  case 'resetSearch':\n    return {...state, countrySearch: ''};\n  case 'setCountries':\n    return {...state, countries: action.countries};\n  case 'setSelected':\n    return {...state, selected: action.selected};\n  case 'resetSelected':\n    return {...state, selected: ''};\n  default:\n    return state;\n  }\n};\n\nexport const initCountries = (countries) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCountries',\n      countries: countries\n    });\n  };\n};\n\nexport const resetSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetSearch'\n    });\n  };\n};\n\nexport const setSearch = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'search',\n      search: search\n    });\n  };\n};\n\nexport const setSelection = (id) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected',\n      selected: id\n    });\n  };\n};\n\nexport const resetSelection = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected'\n    });\n  };\n};\n\nexport default CountryReducer;","\n\nimport PropTypes from 'prop-types';\n\nclass Country {\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      numericCode: props.numericCode,\n      topLevelDomain: props.topLevelDomain,\n      alpha2Code: props.alpha2Code,\n      alpha3Code: props.alpha3Code,\n      callingCodes: props.callingCodes,\n      capital: props.capital,\n      altSpellings: props.altSpellings,\n      region: props.region,\n      subregion: props.subregion,\n      population: props.population,\n      timezones: props.timezones,\n      borders: props.borders,\n      nativeName: props.nativeName,\n      currencies: props.currencies,\n      languages: props.languages,\n      flag: props.flag\n    };\n  }\n  getName() {\n    return this.state.name;\n  }\n  getNumericCode() {\n    return this.state.numericCode;\n  }\n  getDomain() {\n    return this.state.topLevelDomain;\n  }\n  getAlpha2() {\n    return this.state.alpha2Code;\n  }\n  getAlpha3() {\n    return this.state.alpha3Code;\n  }\n  getCallingCodes() {\n    return this.state.callingCodes;\n  }\n  getCapital() {\n    return this.state.capital;\n  }\n  getAltSpellings() {\n    return this.state.altSpellings;\n  }\n  getRegion() {\n    return this.state.region;\n  }\n  getSubregion() {\n    return this.state.subregion;\n  }\n  getPopulation() {\n    return this.state.population;\n  }\n  getTimezones() {\n    return this.state.timezones;\n  }\n  getBorders() {\n    return this.state.borders;\n  }\n  getNativeName() {\n    return this.state.nativeName;\n  }\n  getCurrencies() {\n    return this.state.currencies;\n  }\n  getLanguages() {\n    return this.state.languages;\n  }\n  getFlag() {\n    return this.state.flag;\n  }\n}\n\nCountry.propTypes = {\n  name: PropTypes.string,\n  numericCode: PropTypes.string,\n  topLevelDomain: PropTypes.array,\n  alpha2Code: PropTypes.string,\n  alpha3Code: PropTypes.string,\n  callingCodes: PropTypes.array,\n  capital: PropTypes.string,\n  altSpellings: PropTypes.array,\n  region: PropTypes.string,\n  subRegion: PropTypes.string,\n  population: PropTypes.number,\n  timezones: PropTypes.array,\n  borders: PropTypes.array,\n  nativeName: PropTypes.string,\n  currencies: PropTypes.array,\n  languages: PropTypes.array,\n  flag: PropTypes.string\n};\n\nexport default Country;","\n\nimport React from 'react';\nimport {Flag, Image} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Country from '../../core/classes/Country';\nimport '../../core/style/global.css';\nimport '../../core/style/elements.css';\nimport classProvider from '../../core/tools/classProvider';\nimport {setSearch} from '../../core/store/reducers/CountryReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n  };\n};\nconst mapDispatchToProps = {\n  setSearch\n};\n\nconst CountryDetails = (props) => {\n  const country = new Country(props.country);\n\n  const overrideSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(country.getName());\n  };\n\n  const Alias = () => {\n    const alts = country.getAltSpellings();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Also known as:</label>\n        <ul>\n          {alts.map((a) => {\n            return <li className={classProvider(props.theme, 'heading')} key={a}>{a}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Borders = () => {\n    const borders = country.getBorders();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Borders with:</label>\n        <ul>\n          {borders.map((b) => {\n            return <li className={classProvider(props.theme, 'heading')} key={b}>{b}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Calling = () => {\n    const codes = country.getCallingCodes();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Calling codes:</label>\n        <ul>\n          {codes.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c}>{c}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Currency = () => {\n    const currencies = country.getCurrencies();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Currency:</label>\n        <ul>\n          {currencies.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c.name}>{c.name}, {c.code}, {c.symbol}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Domain = () => {\n    const domains = country.getDomain();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Domain extensions:</label>\n        <ul>\n          {domains.map((d) => {\n            return <li className={classProvider(props.theme, 'heading')} key={d}>{d}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const CountryFlag = () => {\n    return <Image size='medium' src={country.getFlag()}/>;\n  };\n\n  const Language = () => {\n    const languages = country.getLanguages();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Official languages:</label>\n        <ul>\n          {languages.map((l) => {\n            return <li className={classProvider(props.theme, 'heading')} key={l.name}>{l.name}, {l.nativeName}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Timezones = () => {\n    const zones = country.getTimezones();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Timezones:</label>\n        <ul>\n          {zones.map((z) => {\n            return <li className={classProvider(props.theme, 'heading')} key={z}>{z}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Header = () => {\n    if (props.multi) {\n      return (\n        <div className='countryHeader'>\n          <h4 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='countryHeader'>\n          <h3 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h3>\n        </div>\n      );\n    }\n  };\n\n  const Body = () => {\n    if (props.multi) {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <Alias/>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n          <Language/>\n          <Timezones/>\n          <Borders/>\n          <Currency/>\n          <Calling/>\n          <Domain/>\n          <CountryFlag/>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div key={country.getNumericCode()} className='countryContainer' onClick={(event) => overrideSearch(event)}>\n      <Header/>\n      <Body/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetails);","import React, {} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport resetIcon from '@iconify/icons-iwwa/reset';\n\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\nimport {setSearch, resetSearch} from '../core/store/reducers/CountryReducer';\nimport CountryDetails from './widgets/CountryDetails';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries,\n    countrySearch: state.countryState.countrySearch\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearch,\n  resetSearch\n};\n\nconst Countries = (props) => {\n\n  let matched = [];\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(event.target.value);\n  };\n\n  const ListCountries = () => {\n    if (props.countrySearch.length > 0) {\n      for (let i = 0; i < props.countries.length; i++) {\n        if (props.countries[i].name.toLowerCase().includes(props.countrySearch.toLowerCase())) {\n          matched = [...matched, props.countries[i]];\n        }\n      }\n      if (matched.length >= 4) {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={true} country={c}/>\n            </div>\n          );\n        });\n      } else if (matched.length < 1) {\n        return (\n          <div className='countryAppElements'>\n            <h5>{'Couldn\\'t find any entries'}</h5>\n          </div>\n        );\n      } else {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={false} country={c}/>\n            </div>\n          );\n        });\n      }\n    } else {\n      matched = [];\n      return props.countries.map((c) => {\n        return (\n          <div key={c.numericCode} className='countryAppElements'>\n            <CountryDetails key={c.numericCode} multi={true} country={c}/>\n          </div>\n        );\n      });\n    }\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>\n          Data for {props.countrySearch.length > 0 ? props.countries.length : props.countries.length} countries found.\n        </h5>\n        <div className='appElements'>\n          <input type='search' placeholder='search country by name'\n            onChange={event => handleSearch(event)}\n            onReset={() => props.resetSearch()} value={props.countrySearch}\n            className={classProvider(props.theme, 'formElement')}/>\n          <button onClick={() => props.resetSearch()} title='reset search'\n            className={classProvider(props.theme, 'formElement')}><Icon icon={resetIcon} /></button>\n        </div>\n        <ListCountries/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {ADD_USER} from '../core/graphql/rff/mutations/m_addUser';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst RegistrationPage = (props) => {\n  const client = useApolloClient();\n\n  const register = async (event) => {\n    event.preventDefault();\n    const username = document.getElementById('regUsername').value;\n    const password = document.getElementById('regPassword').value;\n    const confirm = document.getElementById('regConfirm').value;\n    password === confirm\n      ? await client.mutate({\n        mutation: ADD_USER,\n        variables: {\n          username: username,\n          password: password\n        },\n        errorPolicy: 'ignore'\n      }).then(result => {\n        const {data} = result;\n        if (data !== null) {\n          props.handleInfo(`${username} registered`);\n        } else {\n          props.handleError(`username ${username} is already in use`);\n        }\n      })\n      : props.handleError('passwords do not match');\n    document.getElementById('regUsername').value = '';\n    document.getElementById('regPassword').value = '';\n    document.getElementById('regConfirm').value = '';\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <form className='commonElements' onSubmit={(event) => register(event)}>\n          <input id='regUsername' type='text' required minLength={4} placeholder='username'\n            className={classProvider(props.theme, 'formElement')} autoComplete/>\n          <input id='regPassword' type='password' required minLength={8} placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='regConfirm' type='password' required minLength={8} placeholder='re-type password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='regButton' type='submit' className={classProvider(props.theme, 'formElement')}>{'register >'}</button>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationPage);","\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/tasker.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme\n  };\n};\n\nconst Task = (props) => {\n  if (!props.status) {\n    return (\n      <div className='taskContainer'>\n        <p className={classProvider(props.theme, 'task')}>{props.task.task}</p>\n      </div>\n    );\n  } else {\n    const task = props.task;\n    return (\n      <div className='taskContainer'>\n        <p className={classProvider(props.theme, 'task')}>{task.task}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.priority}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.active}</p>\n        <p className={classProvider(props.theme, 'task')}>{task.creator.username}</p>\n      </div>\n    );\n  }\n};\n\nexport default connect(mapStateToProps)(Task);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_LIST_DETAILS = gql`\n    fragment GroupListDetails on GroupList {\n        title\n        listType\n        removable\n        id\n        group {\n            title\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const GROUP_LISTS = gql`\n  query groupLists($token: String!) {\n    groupLists(token: $token) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const PRIVATE_LIST_DETAILS = gql`\n    fragment PrivateListDetails on PrivateList {\n        title\n        listType\n        removable\n        id\n        owner {\n            username\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const PRIVATE_LISTS = gql`\n  query privateLists($token: String!) {\n    privateLists(token: $token) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\n\nexport const TASK_DETAILS = gql`\n  fragment TaskDetails on Task {\n    task\n    active\n    priority\n    creator {\n      ...UserDetails\n    }\n    listID\n    id\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASKS = gql`\n  query tasks($token: String!, $listID: String!) {\n    tasks(token: $token, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\n\nimport React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/tasker.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport Task from './widgets/Task';\n\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\n\nimport {GROUP_LISTS} from '../core/graphql/rff/queries/q_groupLists';\nimport {PRIVATE_LISTS} from '../core/graphql/rff/queries/q_privateLists';\nimport {TASKS} from '../core/graphql/rff/queries/q_tasks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Tasker = (props) => {\n  let userToken;\n\n  const Empty = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>no accessible {type} lists</p>\n      </div>\n    );\n  };\n  const Error = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>error occurred while loading {type} lists</p>\n      </div>\n    );\n  };\n  const Loading = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'listHeader')}>loading {type} lists</p>\n      </div>\n    );\n  };\n\n  const Lists = () => {\n    if (props.user) {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return (\n        <div className='container'>\n          <ListsP/>\n          <ListsG/>\n        </div>\n      );\n    } else {\n      return (\n        <div className='container'>\n          <h4 className={classProvider(props.theme, 'listHeader')}>login needed</h4>\n        </div>\n      );\n    }\n  };\n\n  const ListsP = () => {\n    const {data, loading, error} = useQuery(PRIVATE_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'listHeader')}>Accessible private lists:</h4>\n        {data && data.privateLists.length > 0\n          ? <div>\n            {data.privateLists.map(l => <List key={`privateList:${l.id}`} list={l}/>)}\n          </div>\n          : <Empty type='private'/>\n        }\n        {error && <Error type='private'/>}\n        {loading && <Loading type='private'/>}\n      </div>\n    );\n  };\n\n  const ListsG = () => {\n    const {data, loading, error} = useQuery(GROUP_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'heading')}>Accessible group lists:</h4>\n        {data && data.groupLists.length > 0\n          ? <div>\n            {data.groupLists.map(l => <List key={`groupList:${l.id}`} list={l}/>)}\n          </div>\n          : <Empty type='group'/>}\n        {loading && <Loading type='group'/>}\n        {error && <Error type='group'/>}\n      </div>\n    );\n  };\n\n  const List = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(TASKS, {\n      variables: {\n        token: userToken,\n        listID: list.id\n      }\n    });\n\n    if (!loading) {\n      if (!error) {\n        return (\n          <div key={`${list.listType}:${list.id}`} className='listElements'>\n            <p className={classProvider(props.theme, 'listHeader')}\n              onClick={() => setExpanded(!expanded)}>\n              <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n            </p>\n            {expanded && <div className='listContainer'>\n              <Tasks tasks={data.tasks}/>\n            </div>}\n          </div>\n        );\n      } else {\n        return (\n          <div key={`${list.listType}:${list.id}`} className='listElements'>\n            <p className={classProvider(props.theme, 'listHeader')}\n              onClick={() => setExpanded(!expanded)}>\n              <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n            </p>\n            {expanded && <div className='listContainer'>\n              <Task status={false} task={{task: 'error occurred while loading tasks'}}/>\n            </div>}\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div key={`${list.listType}:${list.id}`} className='listElements'>\n          <p className={classProvider(props.theme, 'listHeader')}\n            onClick={() => setExpanded(!expanded)}>\n            <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> <strong>{`${list.title}:${expanded}`}</strong>\n          </p>\n          {expanded && <div className='listContainer'>\n            <Task status={false} task={{task: 'loading tasks'}}/>\n          </div>}\n        </div>\n      );\n    }\n  };\n\n  const Tasks = ({tasks}) => {\n    if (tasks.length > 0) {\n      return (\n        <div className='listContainer'>\n          {tasks.map(t => {\n            return <Task key={`task:${t.id}`} status={true} task={t}/>;\n          })}\n        </div>\n      );\n    } else {\n      return (\n        <div className='listContainer'>\n          <Task status={false} task={{task: 'no tasks'}}/>\n          <Task status={false} task={{task: 'no tasks'}}/>\n          <Task status={false} task={{task: 'no tasks'}}/>\n        </div>\n      );\n    }\n  };\n\n  return props.show\n    ? <div className='app'>\n      <Lists/>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(Tasker);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/transporter.css';\nimport HslHrtIcon from './icons/hsl/HslHrtIcon';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {};\n\nconst Transporter = (props) => {\n  const client = useApolloClient();\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>Tracked stops:</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transporter);","\n\nimport axios from 'axios';\n\nconst countriesUrl = 'https://restcountries.eu/rest/v2/all';\n\nconst getCountries = async () => {\n  return await axios.get(countriesUrl);\n};\n\nexport default {\n  getCountries\n};","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($token: String!, $newUsername: String, $newPassword: String, $password: String!) {\n    updateUser(newUsername: $newUsername, newPassword: $newPassword, token: $token, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {\n  loginFailure, loginSuccess\n} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst UserPage = (props) => {\n  const client = useApolloClient();\n\n  const UserManager = () => {\n    return (\n      <div className='commonElements'>\n        <h5 className={classProvider(props.theme, 'heading')}>User information</h5>\n        <UserData/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change password</h5>\n        <ChangePassword/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change username</h5>\n        <ChangeUsername/>\n      </div>\n    );\n  };\n\n  const UserData = () => {\n    return (\n      <>\n        <p className={classProvider(props.theme, 'description')}>User: <strong>{props.user.username}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Role: <strong>{props.user.role}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Active: <strong>{props.user.active ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Removable: <strong>{props.user.removable ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>ID: <strong>{props.user.id}</strong></p>\n      </>\n    );\n  };\n\n  const ChangeUsername = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handleUsernameChange(event)}>\n        <input id='changeUsernamePW' type='password' required placeholder='password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changeUsernameNew' type='text' required placeholder='new username'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>change username</button>\n      </form>\n    );\n  };\n\n  const ChangePassword = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handlePasswordChange(event)}>\n        <input id='changePasswordOld' type='password' required placeholder='old password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordNew' type='password' required placeholder='new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordConfirm' type='password' required placeholder='retype new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>\n          change password\n        </button>\n      </form>\n    );\n  };\n\n  const handlePasswordChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changePasswordOld').value;\n    const newPassword = document.getElementById('changePasswordNew').value;\n    const confirm = document.getElementById('changePasswordConfirm').value;\n    newPassword === confirm\n      ? await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          token: localStorage.getItem('rffUserToken').toString().substring(7),\n          password: password,\n          newPassword: newPassword === confirm && newPassword\n        }\n      }).then((result, errors) => {\n        if (!errors) {\n          client.mutate({\n            mutation: LOGIN,\n            variables: {\n              username: props.user.username,\n              password: newPassword\n            }\n          }).then((result, errors) => {\n            if (!errors) {\n              const token = result.data.login.value;\n              client.query({\n                query: ME,\n                variables: {\n                  token: token.substring(7)\n                }\n              }).then((result, errors) => {\n                if (!errors) {\n                  localStorage.setItem('rffUserToken', token);\n                  props.loginSuccess(result.data.me);\n                  props.handleInfo('login renewed');\n                } else {\n                  props.loginFailure();\n                  props.handleError(errors[0]);\n                }\n              });\n            } else {\n              props.handleError(errors[0]);\n            }\n          });\n        } else {\n          props.handleError(errors[0]);\n        }\n      })\n      : props.handleError({message: 'New passwords do not match'});\n    document.getElementById('changePasswordOld').value = '';\n    document.getElementById('changePasswordNew').value = '';\n    document.getElementById('changePasswordConfirm').value = '';\n  };\n\n  const handleUsernameChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changeUsernamePW').value;\n    const newUsername = document.getElementById('changeUsernameNew').value;\n    await client.mutate({\n      mutation: UPDATE_USER,\n      variables: {\n        token: localStorage.getItem('rffUserToken').toString().substring(7),\n        password: password,\n        newUsername: newUsername\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        client.mutate({\n          mutation: LOGIN,\n          variables: {\n            username: newUsername,\n            password: password\n          }\n        }).then((result, errors) => {\n          if (!errors) {\n            const token = result.data.login.value;\n            client.query({\n              query: ME,\n              variables: {\n                token: token.substring(7)\n              }\n            }).then((result, errors) => {\n              if (!errors) {\n                localStorage.setItem('rffUserToken', token);\n                props.loginSuccess(result.data.me);\n                props.handleInfo('login renewed');\n              } else {\n                props.loginFailure();\n                props.handleError(errors[0]);\n              }\n            });\n          } else {\n            props.handleError(errors[0]);\n          }\n        });\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <UserManager/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n\n/*<form className='commonElements'>\n//           <input type='text' placeholder='username' onChange={({target}) => props.setUsername(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.username} autoComplete={true}/>\n//           <input type='password' placeholder='password' onChange={({target}) => props.setPassword(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.password} autoComplete={true}/>\n//           <button type='button' onClick={() => handleLogin()}\n//                   className={classProvider(props.theme, 'formElement')}>login</button>\n//           <Link to='/register' onClick={() => props.switchApp('Register')}\n//                 className={classProvider(props.theme, 'formElement')}>register</Link>\n//         </form>*/","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\n\nimport {ApolloClient} from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {setContext} from 'apollo-link-context';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {split} from 'apollo-link';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {getMainDefinition} from 'apollo-utilities';\n\nimport './core/style/root.css';\n\nimport Navigation from './components/Navigation';\nimport AdminTools from './components/AdminTools';\nimport About from './components/About';\nimport Calculate from './components/Calculate';\nimport Dashboard from './components/Dashboard';\nimport Dishy from './components/Dishy';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport OpenCountry from './components/OpenCountry';\nimport RegistrationPage from './components/RegistrationPage';\nimport Tasker from './components/Tasker';\nimport Transporter from './components/Transporter';\nimport Connector from './core/services/Connector';\nimport UserPage from './components/UserSettings';\n\nimport {initCountries} from './core/store/reducers/CountryReducer';\nimport {switchApp} from './core/store/reducers/AppReducer';\n\nconst mapDispatchToProps = {\n  initCountries, switchApp\n};\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    app: state.appState.application,\n    dishyState: state.dishyState,\n    loginState: state.loginState\n  };\n};\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_WEBSOCKET,\n  options: {reconnect: true}\n});\nconst httpLink = createHttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_ENDPOINT\n});\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('rffUserToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null\n    }\n  };\n});\nconst rffLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst hslLink = createHttpLink({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\n});\n\nconst rffClient = new ApolloClient({\n  link: rffLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst hslClient = new ApolloClient({\n  link: hslLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst App = (props) => {\n  // const url = window.location.href;\n  useEffect(() => {\n    document.body.className = props.theme;\n  });\n  useEffect(() => {\n    async function init() {\n      await Connector.getCountries().then(response => {\n        props.initCountries(response.data);\n      });\n    }\n    init();\n  }, [props]);\n\n  const Rff = () => {\n    const {user} = props.loginState;\n    return (\n      <Switch>\n        <Route exact path='/' render={(props) => <LandingPage {...props} show={true}/>}/>\n        <Route path='/about' render={(props) => <About {...props} show={true}/>}/>\n        <Route path='/admin' render={(props) => <AdminTools {...props}\n          show={user !== null && (user.role === 'admin' || user.role === 'owner')}/>}/>\n        <Route path='/calculate' render={(props) => <Calculate {...props} show={true}/>}/>\n        <Route path='/countries' render={(props) => <OpenCountry {...props} show={true}/>}/>\n        <Route path='/dashboard' render={(props) => <Dashboard {...props} show={user !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/dishy' render={(props) => <Dishy {...props} show={user !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/login' render={(props) => <LoginPage {...props} show={user === null}/>}/>\n        <Route path='/register' render={(props) => <RegistrationPage {...props} show={user === null}/>}/>\n        <Route path='/tasker' render={(props) => <Tasker {...props} show={user !== null}/>}/>\n        <Route path='/user' render={(props) => <UserPage {...props} show={user !== null}/>}/>\n      </Switch>\n    );\n  };\n\n  const Hsl = () => {\n    return (\n      <Switch>\n        <Route path='/transit' render={(props) => <Transporter {...props}/>}/>\n      </Switch>\n    );\n  };\n\n  return(\n    <div className='appContainer'>\n      <Router basename='/'>\n        <ApolloProvider client={rffClient}>\n          <Navigation/>\n          <Rff/>\n        </ApolloProvider>\n        <ApolloProvider client={hslClient}>\n          <Hsl/>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setNewUserName':\n    return {...state, newUserName: action.name};\n  case 'setNewUserUsername':\n    return {...state, newUserUsername: action.username};\n  case 'setNewUserPassword':\n    return {...state, newUserPassword: action.password};\n  case 'setConfirmNewUserPassword':\n    return {...state, confirmNewUserPassword: action.password};\n  case 'successfulReg':\n    return {...initialState};\n  case 'unsuccessfulReg':\n    return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n  case 'resetReg':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport default RegReducer;","import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport AppReducer from './reducers/AppReducer';\nimport CountryReducer from './reducers/CountryReducer';\nimport LoginReducer from './reducers/LoginReducer';\nimport RegReducer from './reducers/RegReducer';\nimport DishyReducer from './reducers/DishyReducer';\n\nconst reducers = combineReducers({\n  appState: AppReducer,\n  countryState: CountryReducer,\n  loginState: LoginReducer,\n  regState: RegReducer,\n  dishyState: DishyReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './core/store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}