{"version":3,"sources":["core/classes/User.js","core/store/reducers/LoginReducer.js","core/store/reducers/AppReducer.js","core/tools/classProvider.js","core/graphql/rff/fragments/f_userFragment.js","core/graphql/rff/queries/q_me.js","components/Navigation.js","components/widgets/CountryCount.js","core/graphql/rff/queries/q_groupCount.js","components/widgets/GroupCount.js","core/graphql/rff/queries/q_allListCount.js","core/graphql/rff/queries/q_listCount.js","components/widgets/ListCount.js","core/graphql/rff/queries/q_taskCount.js","core/graphql/rff/queries/q_allTaskCount.js","components/widgets/TaskCount.js","core/graphql/rff/queries/q_dishCount.js","components/widgets/DishCount.js","core/graphql/rff/queries/q_carbCount.js","core/graphql/rff/queries/q_proteinCount.js","core/graphql/rff/queries/q_spiceCount.js","components/widgets/IngredientCount.js","core/graphql/rff/queries/q_methodCount.js","components/widgets/MethodCount.js","components/widgets/TrackedStopsCount.js","core/graphql/rff/queries/q_userCount.js","components/widgets/UserCount.js","core/graphql/rff/fragments/f_newsFragment.js","core/graphql/rff/queries/q_news.js","core/graphql/rff/mutations/m_addNews.js","core/graphql/rff/mutations/m_removeNews.js","core/graphql/rff/subscriptions/s_newsAdded.js","core/graphql/rff/subscriptions/s_newsUpdated.js","core/graphql/rff/subscriptions/s_newsRemoved.js","components/News.js","core/graphql/rff/queries/q_users.js","core/graphql/rff/mutations/m_activateUser.js","core/graphql/rff/mutations/m_deactivateUser.js","core/graphql/rff/mutations/m_updateUser.js","core/graphql/rff/mutations/m_removeUser.js","core/graphql/rff/mutations/m_demoteUser.js","core/graphql/rff/mutations/m_promoteUser.js","core/graphql/rff/subscriptions/s_userAdded.js","core/graphql/rff/subscriptions/s_userUpdated.js","core/graphql/rff/subscriptions/s_userRemoved.js","components/Users.js","core/graphql/rff/fragments/f_groupFragment.js","core/graphql/rff/queries/q_allGroups.js","core/graphql/rff/mutations/m_addGroup.js","core/graphql/rff/mutations/m_updateGroup.js","core/graphql/rff/mutations/m_removeGroup.js","core/graphql/rff/mutations/m_activateGroup.js","core/graphql/rff/mutations/m_deactivateGroup.js","core/graphql/rff/subscriptions/s_groupAdded.js","core/graphql/rff/subscriptions/s_groupUpdated.js","core/graphql/rff/subscriptions/s_groupRemoved.js","components/Groups.js","components/AdminTools.js","components/widgets/Colors.js","components/widgets/Technologies.js","components/widgets/OtherStyles.js","components/About.js","components/Calculate.js","components/Dashboard.js","core/graphql/rff/fragments/f_ingredientFragment.js","core/graphql/rff/queries/q_allCarbs.js","core/graphql/rff/queries/q_allProteins.js","core/graphql/rff/queries/q_allSpices.js","core/graphql/rff/fragments/f_methodFragment.js","core/graphql/rff/queries/q_allMethods.js","core/graphql/rff/fragments/f_dishIngredientFragment.js","core/graphql/rff/fragments/f_dishMethodFragment.js","core/graphql/rff/fragments/f_dishFragment.js","core/graphql/rff/queries/q_allDishes.js","core/graphql/rff/mutations/m_addMethod.js","core/graphql/rff/mutations/m_addIngredient.js","core/graphql/rff/mutations/m_addDish.js","core/graphql/rff/subscriptions/s_dishAdded.js","core/graphql/rff/subscriptions/s_dishUpdated.js","core/graphql/rff/subscriptions/s_dishRemoved.js","core/graphql/rff/subscriptions/s_dishVoted.js","core/graphql/rff/subscriptions/s_ingredientAdded.js","core/graphql/rff/subscriptions/s_ingredientUpdated.js","core/graphql/rff/subscriptions/s_ingredientRemoved.js","core/graphql/rff/subscriptions/s_methodAdded.js","core/graphql/rff/subscriptions/s_methodUpdated.js","core/graphql/rff/subscriptions/s_methodRemoved.js","core/store/reducers/DishyReducer.js","components/Dishy.js","components/LandingPage.js","core/graphql/rff/mutations/m_login.js","components/LoginPage.js","core/store/reducers/CountryReducer.js","core/classes/Country.js","components/widgets/CountryDetails.js","components/OpenCountry.js","core/graphql/rff/mutations/m_addUser.js","components/RegistrationPage.js","core/graphql/rff/fragments/f_groupListFragment.js","core/graphql/rff/queries/q_groupLists.js","core/graphql/rff/fragments/f_privateListFragment.js","core/graphql/rff/queries/q_privateLists.js","core/graphql/rff/subscriptions/s_listAddedGroup.js","core/graphql/rff/subscriptions/s_listAddedPrivate.js","core/graphql/rff/subscriptions/s_listRemovedGroup.js","core/graphql/rff/subscriptions/s_listRemovedPrivate.js","core/graphql/rff/queries/q_groups.js","core/graphql/rff/mutations/m_addListGroup.js","core/graphql/rff/mutations/m_addListPrivate.js","core/graphql/rff/fragments/f_taskFragment.js","core/graphql/rff/queries/q_tasks.js","core/graphql/rff/subscriptions/s_taskAdded.js","core/graphql/rff/subscriptions/s_taskUpdated.js","core/graphql/rff/subscriptions/s_taskRemoved.js","core/graphql/rff/mutations/m_addTask.js","core/graphql/rff/mutations/m_taskPriority.js","core/graphql/rff/mutations/m_taskDeactivation.js","core/graphql/rff/mutations/m_taskActivation.js","core/graphql/rff/mutations/m_removeTask.js","components/widgets/List.js","components/Tasker.js","components/Transporter.js","core/services/Connector.js","components/UserSettings.js","App.js","serviceWorker.js","core/store/reducers/RegReducer.js","core/store/Store.js","index.js"],"names":["User","props","this","state","username","role","id","active","removable","propTypes","PropTypes","string","bool","initialState","user","loginFailure","dispatch","a","type","loginSuccess","LoginReducer","action","repository","url","name","theme","application","notification","switchApp","app","handleError","error","message","setTimeout","handleInfo","info","AppReducer","classProvider","element","USER_DETAILS","gql","ME","mapDispatchToProps","switchTheme","localStorage","setItem","logout","connect","appState","loginState","useApolloClient","themes","setTheme","getItem","useEffect","ThemeSelector","className","map","t","key","onClick","to","getRole","getUsername","title","removeItem","countries","countryState","length","GROUP_COUNT","userToken","substring","mode","useQuery","variables","token","data","loading","groupCount","ALL_LIST_COUNT","LIST_COUNT","listCount","allListCount","TASK_COUNT","ALL_TASK_COUNT","countType","taskCount","allTaskCount","DISH_COUNT","dishCount","CARB_COUNT","PROTEIN_COUNT","SPICE_COUNT","carbResult","proteinResult","spiceResult","carbCount","proteinCount","spiceCount","METHOD_COUNT","methodCount","USER_COUNT","userCount","NEWS_DETAILS","NEWS","ADD_NEWS","REMOVE_NEWS","NEWS_ADDED","NEWS_UPDATED","NEWS_REMOVED","client","useSubscription","fetchPolicy","onSubscriptionData","news","subscriptionData","newsAdded","updateCacheWithNews","newsUpdated","newsRemoved","eventType","includedIn","set","object","n","includes","readQuery","query","dataInStore","writeQuery","concat","content","forEach","handleRemoval","mutate","mutation","errorPolicy","then","result","removeNews","handleAddition","document","getElementById","value","category","addNews","Manage","icon","trashAlt","Add","required","minLength","placeholder","saveIcon","USERS","ACTIVATE_USER","DEACTIVATE_USER","UPDATE_USER","REMOVE_USER","DEMOTE_USER","PROMOTE_USER","USER_ADDED","USER_UPDATED","USER_REMOVED","currentUser","refetch","userAdded","updateCacheWithUser","userUpdated","userRemoved","u","users","errors","removeUser","handleActive","deactivateUser","activateUser","handleRole","promoteUser","demoteUser","getId","cogOutline","accountRemoveOutline","show","GROUP_DETAILS","ALL_GROUPS","ADD_GROUP","REMOVE_GROUP","ACTIVATE_GROUP","DEACTIVATE_GROUP","GROUP_ADDED","GROUP_UPDATED","GROUP_REMOVED","group","groupAdded","updateCacheWithGroup","groupUpdated","groupRemoved","g","allGroups","addGroup","removeGroup","handleActivate","deactivateGroup","activateGroup","accountMultipleRemoveOutline","accountMultiplePlusOutline","groups","push","frontend","reactIcon","ReduxIcon","graphqlIcon","apollostackIcon","backend","logoNodejs","expressIcon","mongodbIcon","testing","jestIcon","cypressIcon","tools","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","altairIcon","repo","href","f","b","d","dt","useState","value1","setValue1","value2","setValue2","Addition","Number","Subtraction","numbro","format","thousandSeparated","trimMantissa","mantissa","Division","Multiplication","Exponentiation","res1","res2","res3","Cube","RootSquare","Math","sqrt","RootCubic","cbrt","onChange","target","common","link","advanced","INGREDIENT_DETAILS","ALL_CARBS","ALL_PROTEINS","ALL_SPICES","METHOD_DETAILS","ALL_METHODS","DISH_INGREDIENT_DETAILS","DISH_METHOD_DETAILS","DISH_DETAILS","ALL_DISHES","ADD_METHOD","ADD_INGREDIENT","ADD_DISH","DISH_ADDED","DISH_UPDATED","DISH_REMOVED","DISH_VOTED","INGREDIENT_ADDED","INGREDIENT_UPDATED","INGREDIENT_REMOVED","METHOD_ADDED","METHOD_UPDATED","METHOD_REMOVED","carbSearch","proteinSearch","spiceSearch","methodSearch","newDish","newDishCarbs","newDishProteins","newDishSpices","newDishMethods","DishyReducer","carb","protein","spice","method","initDish","resetDish","addDishCarb","addDishProtein","addDishSpice","addDishMethod","dishyState","carbResults","proteinResults","spiceResults","methodResults","dishResults","dish","dishAdded","updateCacheWithDish","dishUpdated","dishVoted","dishRemoved","ingredient","ingredientAdded","updateCacheWithCarb","updateCacheWithProtein","updateCacheWithSpice","ingredientUpdated","methodAdded","updateCacheWithMethod","methodUpdated","methodRemoved","c","allCarbs","p","allProteins","s","allSpices","m","allMethods","allDishes","Loading","Error","Empty","handleAddComponent","event","component","preventDefault","filter","handleNewComponent","addIngredient","addMethod","DishComponentForm","selection","NewCarb","NewMethod","NewProtein","NewSpice","handleNewDish","note","cookingMethods","proteins","carbs","spices","resetDishForm","Dish","view","methods","DishComponents","components","viewType","Component","uses","resultCount","random","floor","setSelection","defaultValue","JSON","parse","disabled","stringify","LOGIN","useMutation","login","password","loginToken","me","countrySearch","selected","setSearch","search","CountryReducer","Country","numericCode","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","timezones","borders","nativeName","currencies","languages","flag","array","subRegion","number","country","Alias","alts","getAltSpellings","Borders","getBorders","Calling","codes","getCallingCodes","Currency","getCurrencies","code","symbol","Domain","domains","getDomain","CountryFlag","Image","size","src","getFlag","Language","getLanguages","l","Timezones","zones","getTimezones","z","getNumericCode","getName","overrideSearch","multi","Flag","getAlpha2","toLowerCase","getNativeName","getCapital","getRegion","getSubregion","getPopulation","getAlpha3","resetSearch","matched","handleSearch","onReset","resetIcon","i","ADD_USER","register","confirm","onSubmit","autoComplete","GROUP_LIST_DETAILS","GROUP_LISTS","PRIVATE_LIST_DETAILS","PRIVATE_LISTS","LIST_ADDED_GROUP","LIST_ADDED_PRIVATE","LIST_REMOVED_GROUP","LIST_REMOVED_PRIVATE","GROUPS","ADD_LIST_GROUP","ADD_LIST_PRIVATE","TASK_DETAILS","TASKS","TASK_ADDED","TASK_UPDATED","TASK_REMOVED","ADD_TASK","TASK_PRIORITY","TASK_DEACTIVATION","TASK_ACTIVATION","REMOVE_TASK","list","expanded","setExpanded","listID","updateCacheWithTask","task","tasks","taskAdded","taskUpdated","taskRemoved","handleSaveTask","priority","addTask","handleTaskPriority","taskPriority","handleTaskCompletion","taskDeactivation","taskActivation","handleTaskRemoval","removeTask","Flagged","flagged","flagVariant","flagVariantOutline","TaskEmpty","Task","status","listType","userShield","usersIcon","chevronUp","chevronDown","setPriority","tasker","taskerState","privateLists","groupLists","listAddedPrivate","updateCacheWithPrivatelist","listRemovedPrivate","listAddedGroup","updateCacheWithGrouplist","listRemovedGroup","handleSaveList","groupID","addListGroup","addListPrivate","ListsP","AddList","ListsG","groupSelection","setGroupSelection","getCountries","axios","get","UserData","getActive","getRemovable","ChangeUsername","handleUsernameChange","ChangePassword","handlePasswordChange","newPassword","toString","newUsername","initCountries","wsLink","WebSocketLink","uri","process","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","rffLink","split","getMainDefinition","kind","operation","hslLink","rffClient","ApolloClient","cache","InMemoryCache","connectToDevTools","hslClient","body","Connector","response","init","basename","exact","path","render","Calculate","OpenCountry","Boolean","window","location","hostname","match","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","reducers","combineReducers","regState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cd69241.chunk.js","sourcesContent":["// RFF demo project\n// Country.js\n// creates User-class for application to use - users\n\nimport PropTypes from 'prop-types';\n\nclass User {\n  constructor(props) {\n    this.state = {\n      username: props.username,\n      role: props.role,\n      id: props.id,\n      active: props.active,\n      removable: props.removable\n    };\n  }\n  getUsername() {\n    return this.state.username;\n  }\n  getRole() {\n    return this.state.role;\n  }\n  getId() {\n    return this.state.id;\n  }\n  getActive() {\n    return this.state.active;\n  }\n  getRemovable() {\n    return this.state.removable;\n  }\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  role: PropTypes.string,\n  id: PropTypes.string,\n  active: PropTypes.bool,\n  removable: PropTypes.bool\n};\n\nexport default User;","// RFF demo project\n// LoginReducer.js\n// creates reducer to Redux global state for application to use - login\n\nimport User from '../../classes/User';\n\nconst initialState = {\n  user: null\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'loginSuccess':\n    return {...state, user: new User(action.user)};\n  case 'loginFailure':\n    return {...state};\n  case 'logout':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport const loginFailure = () => {\n  return async dispatch => {\n    dispatch({type: 'loginFailure'});\n  };\n};\nexport const loginSuccess = (user) => {\n  return async dispatch => {\n    dispatch({type: 'loginSuccess', user: user});\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({type: 'logout'});\n  };\n};\n\nexport default LoginReducer;","// RFF demo project\n// AppReducer.js\n// creates reducer to Redux global state for application to use - app in general\n\nconst initialState = {\n  repository: {\n    url: 'https://github.com/RedFoxFinn/rff-project',\n    name: 'rff-demo-project'\n  },\n  theme: 'light',\n  application: 'Home',\n  notification: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'fu':\n    return {...state};\n  case 'switchApplication':\n    return {...state, application: action.application};\n  case 'switchTheme':\n    return {...state, theme: action.theme};\n  case 'setNotification':\n    return {...state, notification: action.notification};\n  case 'resetNotification':\n    return {...state, notification: null};\n  default:\n    return state;\n  }\n};\n\nexport const switchApp = (app) => {\n  return async dispatch => {\n    dispatch({\n      type: 'switchApplication', application: app\n    });\n  };\n};\n\nexport const switchTheme = (theme) => {\n  return async dispatch => {\n    localStorage.setItem('rffTheme', theme);\n    dispatch({\n      type: 'switchTheme', theme: theme\n    });\n  };\n};\n\nexport const handleError = (error) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'error', message: error}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\nexport const handleInfo = (info) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'info', message: info}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\n\nexport default AppReducer;","// RFF demo project\n// classProvider.js\n// provides predefined CSS-classes for application to use based on selected theme\n\nconst classProvider = (theme, element) => {\n  if (theme === 'dark') {\n    switch(element) {\n    case 'news': return 'newsDa';\n    case 'tableCell': return 'tableCellDa';\n    case 'table': return 'tableDa';\n    case 'tableRow': return 'tableRowDa';\n    case 'navMenu': return 'navMenuDa';\n    case 'navSubMenu': return 'navSubMenuDa';\n    case 'navButton': return 'navButtonDa';\n    case 'navSubButton': return 'navSubButtonDa';\n    case 'navContent': return 'navContentDa';\n    case 'navSubContent': return 'navSubContentDa';\n    case 'heading': return 'headingDa';\n    case 'formElement': return 'formElementDa';\n    case 'calculateElement': return 'formElementDa';\n    case 'calculateResult': return 'calculateResultDa';\n    case 'technologyElement': return 'technologyElementDa';\n    case 'text': return 'textDa';\n    case 'loginButton': return 'loginButtonDa';\n    case 'loginContent': return 'loginContentDa';\n    case 'loginMenu': return 'loginMenuDa';\n    case 'link': return 'linkDa';\n    case 'description': return 'descriptionDa';\n    case 'countrySearch': return 'searchElementDa';\n    case 'countrySearchCancel': return 'searchCancelDa';\n    case 'countryDetails': return 'countryDetailsDa';\n    case 'dishyElement': return 'dishyElementDa';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsDa';\n    case 'linkButton': return 'linkButtonDa';\n    case 'notificationInfo': return 'notificationInfoDa';\n    case 'notificationError': return 'notificationErrorDa';\n    case 'notificationNull': return 'notificationNullDa';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionDa';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'dashTile': return 'dashTile';\n    case 'listHeader': return 'listHeaderDa';\n    case 'listDescription': return 'listDescriptionDa';\n    case 'task': return 'taskDa';\n    case 'selector': return 'selectorDa';\n    case 'selected': return 'selectedDa';\n    case 'activator': return 'activatorDa';\n    case 'deactivator': return 'deactivatorDa';\n    case 'field': return 'fieldDa';\n    case 'noteArea': return 'noteAreaDa';\n    default: return '';\n    }\n  } else {\n    switch(element) {\n    case 'news': return 'newsLi';\n    case 'tableCell': return 'tableCellLi';\n    case 'table': return 'tableLi';\n    case 'tableRow': return 'tableRowLi';\n    case 'navMenu': return 'navMenuLi';\n    case 'navSubMenu': return 'navSubMenuLi';\n    case 'navButton': return 'navButtonLi';\n    case 'navSubButton': return 'navSubButtonLi';\n    case 'navContent': return 'navContentLi';\n    case 'navSubContent': return 'navSubContentLi';\n    case 'heading': return 'headingLi';\n    case 'formElement': return 'formElementLi';\n    case 'calculateElement': return 'formElementLi';\n    case 'calculateResult': return 'calculateResultLi';\n    case 'technologyElement': return 'technologyElementLi';\n    case 'text': return 'textLi';\n    case 'loginButton': return 'loginButtonLi';\n    case 'loginContent': return 'loginContentLi';\n    case 'loginMenu': return 'loginMenuLi';\n    case 'link': return 'linkLi';\n    case 'description': return 'descriptionLi';\n    case 'countrySearch': return 'searchElementLi';\n    case 'countrySearchCancel': return 'searchCancelLi';\n    case 'countryDetails': return 'countryDetailsLi';\n    case 'dishyElement': return 'dishyElementLi';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsLi';\n    case 'linkButton': return 'linkButtonLi';\n    case 'notificationInfo': return 'notificationInfoLi';\n    case 'notificationError': return 'notificationErrorLi';\n    case 'notificationNull': return 'notificationNullLi';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionLi';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'listHeader': return 'listHeaderLi';\n    case 'listDescription': return 'listDescriptionLi';\n    case 'task': return 'taskLi';\n    case 'selector': return 'selectorLi';\n    case 'selected': return 'selectedLi';\n    case 'activator': return 'activatorLi';\n    case 'deactivator': return 'deactivatorLi';\n    case 'field': return 'fieldLi';\n    case 'noteArea': return 'noteAreaLi';\n    default: return '';\n    }\n  }\n};\n\nexport default classProvider;","\nimport gql from 'graphql-tag';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    username\n    role\n    removable\n    active\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ME = gql`\n  query me($token: String!) {\n    me(token: $token) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// Navigation.js\n// React component that renders navigation-section of the webapp\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {handleError, handleInfo, switchApp, switchTheme} from '../core/store/reducers/AppReducer';\nimport {logout, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/navigation.css';\nimport '../core/style/global.css';\n\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {InlineIcon} from '@iconify/react';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  switchApp, switchTheme, logout, loginSuccess, handleError, handleInfo\n};\n\nconst Navigation = (props) => {\n  const client = useApolloClient();\n  const themes = ['light', 'dark'];\n  const theme = props.appState.theme;\n  const setTheme = localStorage.getItem('rffTheme');\n\n  // hook that handles theme setting if localstorage already has set theme for webapp\n  useEffect(() => {\n    setTheme !== null && props.switchTheme(setTheme);\n  }, []);\n\n  // module that renders main menu of the webapp\n  const MenuModule = () => {\n    return (\n      <div className={classProvider(theme, 'navMenu')}>\n        <button id='rffMenu' className={classProvider(theme, 'navButton')}>Menu</button>\n        <div className={classProvider(theme, 'navContent')}>\n          <Link to='/' onClick={() => props.switchApp('Home')}>Home</Link>\n          <Link to='/dashboard' onClick={() => props.switchApp('Dashboard')}>Dashboard</Link>\n          <Link to='/calculate' onClick={() => props.switchApp('Calculate')}>Calculate</Link>\n          <Link to='/countries' onClick={() => props.switchApp('OpenCountry')}>OpenCountry</Link>\n          <Link to='/dishy' onClick={() => props.switchApp('Dishy')}>Dishy</Link>\n          {props.loginState.user && <Link to='/tasker' onClick={() => props.switchApp('Tasker')}>Tasker</Link>}\n          <Link to='/transit' onClick={() => props.switchApp('Transporter')}>Transporter</Link>\n          {props.loginState.user && (props.loginState.user.getRole() === 'admin' || props.loginState.user.getRole() === 'owner')\n            && <Link to='/admin' onClick={() => props.switchApp('Admin tools')}>Admin tools</Link>}\n          <Link to='/about' onClick={() => props.switchApp('About')}>About</Link>\n          <ThemeSelector/>\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles theme selection\n  const ThemeSelector = () => {\n    return (\n      <div className={classProvider(theme, 'navSubMenu')}>\n        <button id='rffTheme' className={classProvider(theme, 'navSubButton')}>\n          <strong>{props.appState.theme}</strong> theme selected\n        </button>\n        <div className={classProvider(theme, 'navSubContent')}>\n          {themes.map((t) =>\n            <a key={t} onClick={() => props.switchTheme(t)}>{t}</a>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles rendering login session menu & actions\n  const LoginModule = () => {\n    if (!localStorage.getItem('rffUserToken')) {\n      return (\n        <div className={classProvider(theme, 'loginMenu')}>\n          <Link id='rffLogin' to='/login' title='login' onClick={() => props.switchApp('Login')}>Login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(theme, 'navMenu')}>\n          <button id='rffUsermenu' type='button' className={classProvider(theme, 'navButton')}>\n            {props.loginState.user !== null ? props.loginState.user.getUsername() : null}\n          </button>\n          <div className={classProvider(theme, 'navContent')}>\n            <Link id='rffUsersettings' to='/user' title='settings' onClick={() => props.switchApp('UserSettings')}>Settings</Link>\n            <Link id='rffLogout' to='/' title='logout' onClick={() => logout()}>Logout</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // login session helper function\n  function logout() {\n    props.logout();\n    localStorage.removeItem('rffUserToken');\n    props.handleInfo('logged out');\n    props.switchApp('Home');\n  }\n\n  // module that handles rendering notifications\n  const NotificationModule = () => {\n    const notification = props.appState.notification;\n\n    if (notification && notification.type === 'info') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationInfo')}>{notification.message}</h4>\n        </div>\n      );\n    } else if (notification && notification.type === 'error') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationError')}>{notification.message}</h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationNull')}>{' '}</h4>\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='navRow'>\n      <MenuModule/>\n      <NotificationModule/>\n      <LoginModule/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","// RFF demo project\n// CountryCount.js\n// React component that renders country counter based on available country information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries\n  };\n};\n\nconst CountryCount = (props) => {\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.theme, 'tileDescription')}>\n        <strong>{props.countries.length}</strong> countries information available</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(CountryCount);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_COUNT = gql`\n  query groupCount($token: String!, $mode: String) {\n    groupCount(token: $token, mode: $mode)\n  }\n`;","// RFF demo project\n// GroupCount.js\n// React component that renders group counter based on user groups in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {GROUP_COUNT} from '../../core/graphql/rff/queries/q_groupCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst GroupCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.groupCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> group accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> groups accessible</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken,\n        mode: 'admin'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>all {data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(GroupCount);","\nimport gql from 'graphql-tag';\n\nexport const ALL_LIST_COUNT = gql`\n  query allListCount($token: String!) {\n    allListCount(token: $token)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const LIST_COUNT = gql`\n  query listCount($token: String!) {\n    listCount(token: $token)\n  }\n`;","// RFF demo project\n// ListCount.js\n// React component that renders list counter based on available task list information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport {useQuery} from '@apollo/react-hooks';\nimport '../../core/style/global.css';\n\nimport {ALL_LIST_COUNT} from '../../core/graphql/rff/queries/q_allListCount';\nimport {LIST_COUNT} from '../../core/graphql/rff/queries/q_listCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst ListCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading task list count</p>;\n    } else {\n      if (error) {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading task list\n          count</p>;\n      } else if (data) {\n        return data.listCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task list accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task lists accessible</p>;\n      }\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task list count</p>;\n    } else {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allListCount}</strong> task lists in database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task list count</p>;\n      }\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCount);","\nimport gql from 'graphql-tag';\n\nexport const TASK_COUNT = gql`\n  query taskCount($token: String!, $countType: String!) {\n    taskCount(token: $token, countType: $countType)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const ALL_TASK_COUNT = gql`\n  query allTaskCount($token: String!) {\n    allTaskCount(token: $token)\n  }\n`;","// RFF demo project\n// CountryCount.js\n// React component that renders task counter based on available task information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nimport {TASK_COUNT} from '../../core/graphql/rff/queries/q_taskCount';\nimport {ALL_TASK_COUNT} from '../../core/graphql/rff/queries/q_allTaskCount';\nimport {useQuery} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TaskCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(TASK_COUNT, {\n      variables: {\n        token: userToken,\n        countType: 'total'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.taskCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> task listed in accessible lists</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> tasks listed in accessible lists</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_TASK_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allTaskCount}</strong> tasks listed in the database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TaskCount);","\nimport gql from 'graphql-tag';\n\nexport const DISH_COUNT = gql`\n  query {\n    dishCount\n  }\n`;","// RFF demo project\n// DishCount.js\n// React component that renders dish counter based on available dish information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {DISH_COUNT} from '../../core/graphql/rff/queries/q_dishCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst DishCount = (props) => {\n  const {data, error, loading} = useQuery(DISH_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.dishCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dish available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dishes available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading dish count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading dish count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DishCount);","\n\nimport gql from 'graphql-tag';\n\nexport const CARB_COUNT = gql`\n  query {\n    carbCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const PROTEIN_COUNT = gql`\n  query {\n    proteinCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const SPICE_COUNT = gql`\n  query {\n    spiceCount\n  }\n`;","// RFF demo project\n// IngredientCount.js\n// React component that renders ingredient counter based on available ingredient information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {CARB_COUNT} from '../../core/graphql/rff/queries/q_carbCount.js';\nimport {PROTEIN_COUNT} from '../../core/graphql/rff/queries/q_proteinCount.js';\nimport {SPICE_COUNT} from '../../core/graphql/rff/queries/q_spiceCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst IngredientCount = (props) => {\n  const carbResult = useQuery(CARB_COUNT);\n  const proteinResult = useQuery(PROTEIN_COUNT);\n  const spiceResult = useQuery(SPICE_COUNT);\n  let data = 0;\n\n  const Count = () => {\n    if (!carbResult.loading && !proteinResult.loading && !spiceResult.loading) {\n      if (carbResult.data && proteinResult.data && spiceResult.data) {\n        data = carbResult.data.carbCount + proteinResult.data.proteinCount + spiceResult.data.spiceCount;\n        return data === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredient available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredients available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading ingredient count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading ingredient count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(IngredientCount);","\nimport gql from 'graphql-tag';\n\nexport const METHOD_COUNT = gql`\n  query {\n    methodCount\n  }\n`;","// RFF demo project\n// MethodCount.js\n// React component that renders method counter based on available cooking method information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {METHOD_COUNT} from '../../core/graphql/rff/queries/q_methodCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst MethodCount = (props) => {\n  const {data, error, loading} = useQuery(METHOD_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.methodCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking method available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking methods available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading cooking method count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading cooking method count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(MethodCount);","// RFF demo project\n// TrackedStopsCount.js\n// React component that renders stop counter based on available stop tracking information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TrackedStopsCount = (props) => {\n  const data = 0;\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.appState.theme, 'tileDescription')}><strong>{data}</strong> stops timetables tracked</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TrackedStopsCount);","\nimport gql from 'graphql-tag';\n\nexport const USER_COUNT = gql`\n  query userCount($token: String!) {\n    userCount(token: $token)\n  }\n`;","// RFF demo project\n// UserCount.js\n// React component that renders user counter based on available information\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useApolloClient, useQuery} from '@apollo/react-hooks';\n\nimport {USER_COUNT} from '../../core/graphql/rff/queries/q_userCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst UserCount = (props) => {\n  const userCount = useQuery(USER_COUNT, {\n    variables: {\n      token: localStorage.getItem('rffUserToken').substring(7)\n    }\n  });\n\n  const Count = () => {\n    if (props.mode === 'admin') {\n      if (userCount.loading) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileLoading')}>loading user count</p>\n        );\n      } else if (userCount.error) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading data</p>\n        );\n      } else if (userCount.data) {\n        return userCount.data.userCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> user</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> users</p>;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserCount);","\nimport gql from 'graphql-tag';\n\nexport const NEWS_DETAILS = gql`\n  fragment NewsDetails on News {\n    content\n    category\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS = gql`\n  query news {\n    news {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const ADD_NEWS = gql`\n  mutation addNews($token: String!, $content: String!, $category: String!) {\n    addNews(token: $token, content: $content, category: $category) {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const REMOVE_NEWS = gql`\n  mutation removeNews($token: String!, $id: String!) {\n    removeNews(token: $token, id: $id) {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_ADDED = gql`\n  subscription {\n    newsAdded {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_UPDATED = gql`\n  subscription {\n    newsUpdated {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_REMOVED = gql`\n  subscription {\n    newsRemoved {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useSubscription, useApolloClient} from '@apollo/react-hooks';\nimport {NEWS} from '../core/graphql/rff/queries/q_news';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport saveIcon from '@iconify/icons-fa-regular/save';\nimport trashAlt from '@iconify/icons-fa-regular/trash-alt';\nimport {ADD_NEWS} from '../core/graphql/rff/mutations/m_addNews';\nimport {REMOVE_NEWS} from '../core/graphql/rff/mutations/m_removeNews';\nimport {NEWS_ADDED} from '../core/graphql/rff/subscriptions/s_newsAdded';\nimport {NEWS_UPDATED} from '../core/graphql/rff/subscriptions/s_newsUpdated';\nimport {NEWS_REMOVED} from '../core/graphql/rff/subscriptions/s_newsRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst News = (props) => {\n  let userToken;\n  const client = useApolloClient();\n  useSubscription(NEWS_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsAdded;\n      updateCacheWithNews('added', news);\n    }\n  });\n  useSubscription(NEWS_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsUpdated;\n      updateCacheWithNews('updated', news);\n    }\n  });\n  useSubscription(NEWS_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsRemoved;\n      updateCacheWithNews('removed', news);\n    }\n  });\n\n  const {data, error, loading} = useQuery(NEWS);\n\n  const updateCacheWithNews = async (eventType, news) => {\n    const includedIn = (set, object) => set.map(n => n.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: NEWS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {news: dataInStore.news.concat(news)}\n        });\n        props.handleInfo(`News added: ${news.content}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {\n            news: dataInStore.news.map(n => {\n              return n.id === news.id ? news : n;\n            })}\n        });\n        props.handleInfo(`News updated: ${news.content}`);\n      }\n      break;\n    case 'removed':\n      if(includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {\n            news: dataInStore.news.forEach(n => {\n              if (n.id !== news.id) return n;\n            })}\n        });\n        props.handleInfo(`News removed: ${news.content}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const handleRemoval = async ({id, content}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_NEWS,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithNews('removed', data.removeNews);\n      } else {\n        props.handleError(`Error occurred with task: cannot remove ${content}`);\n      }\n    });\n  };\n  const handleAddition = async () => {\n    const variables = {\n      token: userToken,\n      content: document.getElementById('addNewsContent').value,\n      category: document.getElementById('addNewsCategory').value\n    };\n    await client.mutate({\n      mutation: ADD_NEWS,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithNews('added', data.addNews);\n        document.getElementById('addNewsContent').value = '';\n        document.getElementById('addNewsCategory').value = '';\n      } else {\n        props.handleError(`Error occurred with news: cannot add ${variables.content}`);\n      }\n    });\n  };\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageNews = () => {\n    const news = data.news;\n    if (props.mode === 'admin') {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return news.length > 0\n        ? <>\n          <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n          <table className={classProvider(props.theme, 'table')}>\n            <thead>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <th className={classProvider(props.theme, 'tableCell')}>content</th>\n                <th className={classProvider(props.theme, 'tableCell')}>category</th>\n                <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {news.map(n => {\n                return <Manage key={n.id} news={n}/>;\n              })}\n              <Add/>\n            </tbody>\n          </table>\n        </> : <>\n          <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n          <p className={classProvider(props.theme, 'news')}>no news</p>\n        </>;\n    } else {\n      return news.length > 0\n        ? <>\n          <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n          <ul>\n            {news.map((n) => {\n              return <li key={n.id} className={classProvider(props.theme, 'news')}>{n.content}</li>;\n            })}</ul>\n        </> : <>\n          <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n          <p className={classProvider(props.theme, 'news')}>no news</p>\n        </>;\n    }\n  };\n\n  const Manage = ({news}) => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>{news.content}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{news.category}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='remove news' className={classProvider(props.theme, 'deactivator')}\n            onClick={() => handleRemoval(news)}><InlineIcon icon={trashAlt}/></button></td>\n      </tr>\n    );\n  };\n  const Add = () => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addNewsContent' type='text' required minLength={4} placeholder='news content'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addNewsCategory' type='text' required minLength={3} placeholder='news category'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='save news' className={classProvider(props.theme, 'activator')}\n            onClick={() => handleAddition()}><InlineIcon icon={saveIcon}/></button></td>\n      </tr>\n    );\n  };\n\n  return (\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageNews/>}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(News);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const USERS = gql`\n  query users($token: String!, $active: Boolean, $username: String, $role: String) {\n    users(token: $token, active: $active, username: $username, role: $role) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ACTIVATE_USER = gql`\n  mutation activateUser($token: String!, $id: String!) {\n    activateUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const DEACTIVATE_USER = gql`\n  mutation deactivateUser($token: String!, $id: String!) {\n    deactivateUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($token: String!, $newUsername: String, $newPassword: String, $password: String!) {\n    updateUser(newUsername: $newUsername, newPassword: $newPassword, token: $token, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const REMOVE_USER = gql`\n  mutation removeUser($token: String!, $id: String!) {\n    removeUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const DEMOTE_USER = gql`\n  mutation demoteUser($token: String!, $id: String!) {\n    demoteUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const PROMOTE_USER = gql`\n  mutation promoteUser($token: String!, $id: String!) {\n    promoteUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const USER_ADDED = gql`\n  subscription {\n    userAdded {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const USER_UPDATED = gql`\n  subscription {\n    userUpdated {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const USER_REMOVED = gql`\n  subscription {\n    userRemoved {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useApolloClient, useSubscription} from '@apollo/react-hooks';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport accountRemoveOutline from '@iconify/icons-mdi/account-remove-outline';\nimport cogOutline from '@iconify/icons-mdi/cog-outline';\nimport {USERS} from '../core/graphql/rff/queries/q_users';\nimport {ACTIVATE_USER} from '../core/graphql/rff/mutations/m_activateUser';\nimport {DEACTIVATE_USER} from '../core/graphql/rff/mutations/m_deactivateUser';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\nimport {REMOVE_USER} from '../core/graphql/rff/mutations/m_removeUser';\nimport {DEMOTE_USER} from '../core/graphql/rff/mutations/m_demoteUser';\nimport {PROMOTE_USER} from '../core/graphql/rff/mutations/m_promoteUser';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {USER_ADDED} from '../core/graphql/rff/subscriptions/s_userAdded';\nimport {USER_UPDATED} from '../core/graphql/rff/subscriptions/s_userUpdated';\nimport {USER_REMOVED} from '../core/graphql/rff/subscriptions/s_userRemoved';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    currentUser: state.loginState.user\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst Users = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const client = useApolloClient();\n  const {data, error, loading, refetch} = useQuery(USERS, {\n    variables: {token: userToken}\n  });\n\n  useSubscription(USER_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const user = subscriptionData.data.userAdded;\n      updateCacheWithUser('added', user);\n    }\n  });\n  useSubscription(USER_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const user = subscriptionData.data.userUpdated;\n      updateCacheWithUser('updated', user);\n    }\n  });\n  useSubscription(USER_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const user = subscriptionData.data.userRemoved;\n      updateCacheWithUser('removed', user);\n    }\n  });\n\n  const updateCacheWithUser = async (eventType, user) => {\n    const includedIn = (set, object) => set.map(u => u.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: USERS, variables: {\n        token: userToken}});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.users, user)) {\n        await refetch();\n        props.handleInfo(`User added: ${user.username}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.users, user)) {\n        await refetch();\n        props.handleInfo(`User updated: ${user.username}`);\n      }\n      break;\n    case 'removed':\n      if(includedIn(dataInStore.users, user)) {\n        await refetch();\n        props.handleInfo(`User removed: ${user.username}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const handleRemoval = async ({id}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_USER,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithUser('removed', data.removeUser);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n  const handleActive = async ({id, active}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: active ? DEACTIVATE_USER : ACTIVATE_USER,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithUser('added', active ? data.deactivateUser : data.activateUser);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n  const handleRole = async ({id, role}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    role !== 'owner' && await client.mutate({\n      mutation: role === 'user' ? PROMOTE_USER : DEMOTE_USER,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithUser('updated', role === 'user' ? data.promoteUser : data.demoteUser);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageUsers = () => {\n    const users = data.users;\n    return users.length > 0\n      ? <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage users:</h4>\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>username</th>\n              <th className={classProvider(props.theme, 'tableCell')}>role</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change role</th>\n              <th className={classProvider(props.theme, 'tableCell')}>activated</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change status</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(u => {\n              return <Manage key={u.id} user={u}/>;\n            })}\n          </tbody>\n        </table>\n      </> : <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n        <p className={classProvider(props.theme, 'news')}>no news</p>\n      </>;\n  };\n\n  const Manage = ({user}) => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>{user.username}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{user.role}</td>\n        {user.role !== 'owner' && props.currentUser.getId() !== user.id\n          ? <td className={classProvider(props.theme, 'tableCell')}>\n            <button title={user.role === 'user' ? 'promote' : 'demote'}\n              id={`${user.id}-roleButton`}\n              onClick={() => handleRole(user)} className={user.role === 'user'\n                ? classProvider(props.theme, 'activator')\n                : classProvider(props.theme, 'deactivator')}>\n              <InlineIcon icon={cogOutline}/></button></td>\n          : <td className={classProvider(props.theme, 'tableCell')}>{' '}</td>}\n        <td className={classProvider(props.theme, 'tableCell')}>{user.active ? 'true' : 'false'}</td>\n        {props.currentUser.getId() !== user.id && <td className={classProvider(props.theme, 'tableCell')}>\n          <button title={user.active ? 'deactivate' : 'activate'} id={`${user.id}-activatorButton`}\n            className={user.active ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}\n            onClick={() => handleActive(user)}><InlineIcon icon={cogOutline}/></button></td>}\n        {user.removable && <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='remove user' id={`${user.id}-removeButton`}\n            className={classProvider(props.theme, 'deactivator')}\n            onClick={() => handleRemoval(user)}><InlineIcon icon={accountRemoveOutline}/></button></td>}\n      </tr>\n    );\n  };\n\n  return props.show\n    ?\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageUsers/>}\n    </>\n    : null;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_DETAILS = gql`\n  fragment GroupDetails on Group {\n    title\n    active\n    removable\n    creator {\n      username\n    }\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const ALL_GROUPS = gql`\n  query allGroups($token: String!) {\n    allGroups(token: $token) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const ADD_GROUP = gql`\n  mutation addGroup($token: String!, $title: String!) {\n    addGroup(token: $token, title: $title) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const UPDATE_GROUP = gql`\n  mutation updateGroup($token: String!, $id: String!, $title: String, $active: Boolean) {\n    updateGroup(token: $token, id: $id, title: $title, active: $active) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const REMOVE_GROUP = gql`\n  mutation removeGroup($token: String!, $id: String!) {\n    removeGroup(token: $token, id: $id) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const ACTIVATE_GROUP = gql`\n  mutation activateGroup($token: String!, $id: String!) {\n    activateGroup(token: $token, id: $id) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const DEACTIVATE_GROUP = gql`\n  mutation deactivateGroup($token: String!, $id: String!) {\n    deactivateGroup(token: $token, id: $id) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_ADDED = gql`\n  subscription {\n    groupAdded {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_UPDATED = gql`\n  subscription {\n    groupUpdated {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_REMOVED = gql`\n  subscription {\n    groupRemoved {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useApolloClient, useSubscription} from '@apollo/react-hooks';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport cogOutline from '@iconify/icons-mdi/cog-outline';\nimport accountMultipleRemoveOutline from '@iconify/icons-mdi/account-multiple-remove-outline';\nimport accountMultiplePlusOutline from '@iconify/icons-mdi/account-multiple-plus-outline';\nimport {ALL_GROUPS} from '../core/graphql/rff/queries/q_allGroups';\nimport {ADD_GROUP} from '../core/graphql/rff/mutations/m_addGroup';\nimport {UPDATE_GROUP} from '../core/graphql/rff/mutations/m_updateGroup';\nimport {REMOVE_GROUP} from '../core/graphql/rff/mutations/m_removeGroup';\nimport {ACTIVATE_GROUP} from '../core/graphql/rff/mutations/m_activateGroup';\nimport {DEACTIVATE_GROUP} from '../core/graphql/rff/mutations/m_deactivateGroup';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {GROUP_ADDED} from '../core/graphql/rff/subscriptions/s_groupAdded';\nimport {GROUP_UPDATED} from '../core/graphql/rff/subscriptions/s_groupUpdated';\nimport {GROUP_REMOVED} from '../core/graphql/rff/subscriptions/s_groupRemoved';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst Groups = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const client = useApolloClient();\n  const {data, error, loading, refetch} = useQuery(ALL_GROUPS, {\n    variables: {token: userToken}\n  });\n\n  useSubscription(GROUP_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupAdded;\n      updateCacheWithGroup('added', group);\n    }\n  });\n  useSubscription(GROUP_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupUpdated;\n      updateCacheWithGroup('updated', group);\n    }\n  });\n  useSubscription(GROUP_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupRemoved;\n      updateCacheWithGroup('removed', group);\n    }\n  });\n\n  const updateCacheWithGroup = async (eventType, group) => {\n    const includedIn = (set, object) => set.map(g => g.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: ALL_GROUPS, variables: {\n        token: userToken}});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allGroups, group)) {\n        await refetch();\n        props.handleInfo(`Group added: ${group.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allGroups, group)) {\n        await refetch();\n        props.handleInfo(`Group updated: ${group.title}`);\n      }\n      break;\n    case 'removed':\n      if(includedIn(dataInStore.allGroups, group)) {\n        await refetch();\n        props.handleInfo(`Group removed: ${group.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const handleAddition = async () => {\n    const variables = {\n      token: userToken,\n      title: document.getElementById('addGroupTitle').value\n    };\n    await client.mutate({\n      mutation: ADD_GROUP,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithGroup('added', data.addGroup);\n        document.getElementById('addGroupTitle').value = '';\n      } else {\n        props.handleError(`Error occurred with group: cannot create ${variables.title}`);\n      }\n    });\n  };\n  const handleRemoval = async ({id}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_GROUP,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithGroup('removed', data.removeGroup);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n  const handleActivate = async ({id, active}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: active ? DEACTIVATE_GROUP : ACTIVATE_GROUP,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithGroup('updated', active ? data.deactivateGroup : data.activateGroup);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>Groups:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>Groups:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageGroups = () => {\n    const groups = data.allGroups;\n    return groups.length > 0\n      ? <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage groups:</h4>\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>title</th>\n              <th className={classProvider(props.theme, 'tableCell')}>active</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change status</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {groups.map(g => {\n              return <Manage key={g.id} group={g}/>;\n            })}\n            <Add/>\n          </tbody>\n        </table>\n      </> : <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage groups:</h4>\n        <p className={classProvider(props.theme, 'news')}>no groups</p>\n      </>;\n  };\n\n  const Manage = ({group}) => {\n    return (\n      <tr id={group.id} className={classProvider(props.theme, 'tableRow')}>\n        <td id={group.id + ':title'} className={classProvider(props.theme, 'tableCell')}>{group.title}</td>\n        <td id={group.id + ':status'} className={classProvider(props.theme, 'tableCell')}>{group.active ? 'true' : 'false'}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button title={group.active ? 'deactivate' : 'activate'} id={`${group.id}-statusButton`}\n            onClick={() => handleActivate(group)} className={group.active\n              ? classProvider(props.theme, 'deactivator') : classProvider(props.theme, 'activator')}>\n            <InlineIcon icon={cogOutline}/></button>\n        </td>\n        {group.removable && <td className={classProvider(props.theme, 'tableCell')}>\n          <button id={`${group.id}-removeButton`} title='remove group' className={classProvider(props.theme, 'deactivator')}\n            onClick={() => handleRemoval(group)}>\n            <InlineIcon icon={accountMultipleRemoveOutline}/></button></td>}\n      </tr>\n    );\n  };\n\n  const Add = () => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addGroupTitle' type='text' required minLength={3} placeholder='group title'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>{' '}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{' '}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button id='saveGroup' title='save group' className={classProvider(props.theme, 'activator')}\n            onClick={() => handleAddition()}><InlineIcon icon={accountMultiplePlusOutline}/></button></td>\n      </tr>\n    );\n  };\n\n  return props.user.getRole() === 'admin' || props.user.getRole() === 'owner'\n    ?\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageGroups/>}\n    </>\n    : null;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);","// RFF demo project\n// AdminTools.js\n// React component that renders webapp administrative tools\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport CountryCount from './widgets/CountryCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport TaskCount from './widgets/TaskCount';\nimport DishCount from './widgets/DishCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport MethodCount from './widgets/MethodCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport UserCount from './widgets/UserCount';\nimport {Redirect} from 'react-router-dom';\nimport News from './News';\nimport Users from './Users';\nimport Groups from './Groups';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    user: state.loginState.user\n  };\n};\n\nconst AdminTools = (props) => {\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <ListCount mode='admin'/>\n        <TaskCount mode='admin'/>\n        <GroupCount mode='admin'/>\n        <UserCount mode='admin'/>\n        <TrackedStopsCount mode='admin'/>\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='commonElements'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>App statistics:</h4>\n        <WidgetsCommon/>\n        <WidgetsAdvanced/>\n        <News mode='admin'/>\n        <Users show={props.user.getRole() === 'admin' || props.user.getRole() === 'owner'}/>\n        <Groups/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(AdminTools);","// RFF demo project\n// Colors.js\n// React component that renders color palette available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Colors = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used color palette:</h4>\n        <div className='appElements'>\n          <div className='peru'/>\n          <div className='gainsboro'/>\n          <div className='darkslategrey'/>\n          <div className='yellowgreen'/>\n          <div className='reactblue'/>\n          <div className='slateblue'/>\n          <div className='deeppink'/>\n        </div>\n        <div className='appElements'>\n          <div className='seagreen'/>\n          <div className='googleblue'/>\n          <div className='googlered'/>\n          <div className='googleyellow'/>\n          <div className='googlegreen'/>\n          <div className='amazonorange'/>\n          <div className='heroku'/>\n        </div>\n        <div className='appElements'>\n          <div className='bus'/>\n          <div className='citybike'/>\n          <div className='tram'/>\n          <div className='train'/>\n          <div className='metro'/>\n          <div className='jokerilightrail'/>\n          <div className='ferry'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslpink'/>\n          <div className='hslpinklight'/>\n          <div className='hslgreen'/>\n          <div className='hslgreenlight'/>\n          <div className='hslwarning'/>\n          <div className='hslhighlight'/>\n          <div className='ferrylight'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslblue'/>\n          <div className='digitransit'/>\n          <div className='dgray'/>\n          <div className='gray'/>\n          <div className='lgray'/>\n          <div className='vlgray'/>\n          <div className='jbamber'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbsiena'/>\n          <div className='jbcrimson'/>\n          <div className='jbcarmine'/>\n          <div className='jbfuchsia'/>\n          <div className='jbmauve'/>\n          <div className='jblilac'/>\n          <div className='jbpurple'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbskyblue'/>\n          <div className='jbgreen'/>\n          <div className='jblemon'/>\n          <div className='slackblue'/>\n          <div className='slackgreen'/>\n          <div className='slackyellow'/>\n          <div className='slackred'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Colors);","// RFF demo project\n// Technologies.js\n// React component that renders information of used technologies in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Icon, InlineIcon} from '@iconify/react';\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport altairIcon from '@iconify/icons-logos/altair';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>},\n    {name: 'Altair', url: 'https://altair.sirmuel.design/', icon: <InlineIcon icon={altairIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>;\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>;\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>;\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>;\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>;\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>;\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Repository:</h4>\n        <Repository/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        <Front/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        <Back/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        <Data/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        <Testing/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);","// RFF demo project\n// OtherStyles.js\n// React component that renders information of miscellaneous styling available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst OtherStyles = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Other styles:</h4>\n        <div className='appElements'>\n          <a className={classProvider(props.appState.theme, 'link')} href='https://fonts.google.com/specimen/Raleway'>Font: Raleway</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(OtherStyles);","// RFF demo project\n// About.js\n// React component that renders information related to webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../core/style/global.css';\n\nimport Colors from './widgets/Colors';\nimport Technologies from './widgets/Technologies';\nimport OtherStyles from './widgets/OtherStyles';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst About = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <Technologies/>\n        <Colors/>\n        <OtherStyles/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(About);","// RFF demo project\n// Calculate.js\n// React component that renders simple calculator app\n\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/calculate.css';\nimport '../core/style/forms.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Calculator = (props) => {\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n\n  const Results = () => {\n    return (\n      <>\n        <div className='appElements'>\n          <Addition/>\n          <Multiplication/>\n          <Exponentiation/>\n          <Cube/>\n        </div>\n        <div className='appElements'>\n          <Subtraction/>\n          <Division/>\n          <RootSquare/>\n          <RootCubic/>\n        </div>\n      </>\n    );\n  };\n\n  const Addition = () => {\n    const result = Number(value1) + Number(value2);\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Addition</p>\n        <p>{value1} + {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Subtraction = () => {\n    const result = numbro(Number(value1) - Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Subtraction</p>\n        <p>{value1} - {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Division = () => {\n    if (Number(value2) === 0) {\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <a href='https://en.wikipedia.org/wiki/Division_by_zero'> nope </a>\n        </div>\n      );\n    } else {\n      const result = numbro(Number(value1) / Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <p>{value1} / {value2} {'\\u2243'} <strong>{result}</strong></p>\n        </div>\n      );\n    }\n  };\n  const Multiplication = () => {\n    const result = numbro(Number(value1) * Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Multiplication</p>\n        <p>{value1} * {value2} {'\\u2243'} <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Exponentiation = () => {\n    const res1 = numbro(Number(value1) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res3 = numbro(Number(value1) ** Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Exponentiation</p>\n        <p>{value1} ^ 2 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 2 {'\\u2243'} <strong>{res2}</strong></p>\n        <p>{value1} ^ {value2} {'\\u2243'} <strong>{res3}</strong></p>\n      </div>\n    );\n  };\n  const Cube = () => {\n    const res1 = numbro(Number(value1) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube</p>\n        <p>{value1} ^ 3 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 3 {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootSquare = () => {\n    const res1 = numbro(Math.sqrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.sqrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Square root</p>\n        <p>{'\\u221a'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221a'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootCubic = () => {\n    const res1 = numbro(Math.cbrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.cbrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube root</p>\n        <p>{'\\u221B'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221B'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <form className='appElements'>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue1(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue2(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n        </form>\n        <Results/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Calculator);","// RFF demo project\n// Dashboard.js\n// React component that renders information summary dashboard\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport CountryCount from './widgets/CountryCount';\nimport DishCount from './widgets/DishCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport MethodCount from './widgets/MethodCount';\nimport TaskCount from './widgets/TaskCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport {Link} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Dashboard = (props) => {\n  const common = [\n    {app: 'Calculate', link: '/calculate'},\n    {app: 'Dishy', link: '/dishy'},\n    {app: 'OpenCountry', link: '/countries'},\n  ];\n  const advanced = [\n    {app: 'Tasker', link: '/tasker'},\n    {app: 'Transporter', link: '/transit'},\n  ];\n\n  const ApplicationsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        {common.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const ApplicationsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        {advanced.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <GroupCount/>\n        <ListCount/>\n        <TaskCount/>\n        <TrackedStopsCount/>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Available applications:</h4>\n        <ApplicationsCommon/>\n        {props.user ? <ApplicationsAdvanced/> : null}\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Statistics:</h4>\n        <WidgetsCommon/>\n        {props.user ? <WidgetsAdvanced/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport gql from 'graphql-tag';\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    type\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_CARBS = gql`\n  query {\n    allCarbs {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_PROTEINS = gql`\n  query {\n    allProteins {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_SPICES = gql`\n  query {\n    allSpices {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const METHOD_DETAILS = gql`\n  fragment MethodDetails on CookingMethod {\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ALL_METHODS = gql`\n  query {\n    allMethods {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_INGREDIENT_DETAILS = gql`\n    fragment DishIngredientDetails on Ingredient {\n        type\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_METHOD_DETAILS = gql`\n    fragment DishMethodDetails on CookingMethod {\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\nimport {DISH_INGREDIENT_DETAILS} from './f_dishIngredientFragment';\nimport {DISH_METHOD_DETAILS} from './f_dishMethodFragment';\n\nexport const DISH_DETAILS = gql`\n  fragment DishDetails on Dish {\n    name\n    cookingMethods {\n        ...DishMethodDetails\n    }\n    proteins {\n        ...DishIngredientDetails\n    }\n    carbs {\n        ...DishIngredientDetails\n    }\n    spices {\n        ...DishIngredientDetails\n    }\n    karma\n    note\n    addedBy {\n      ...UserDetails\n    }\n    id\n  }\n  ${USER_DETAILS}\n  ${DISH_INGREDIENT_DETAILS}\n  ${DISH_METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ALL_DISHES = gql`\n  query {\n    allDishes {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ADD_METHOD = gql`\n  mutation addMethod($token: String!, $name: String!) {\n    addMethod(token: $token, name: $name) {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient($token: String!, $name: String!, $type: String!) {\n    addIngredient(token: $token, name: $name, type: $type) {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ADD_DISH = gql`\n  mutation addDish($token: String!, $name: String!, $cookingMethods: [String!]!,\n    $carbs: [String!]!, $proteins: [String!]!, $spices: [String!]!, $note: String!) {\n    addDish(token: $token, name: $name, cookingMethods: $cookingMethods,\n      carbs: $carbs, proteins: $proteins, spices: $spices, note: $note) {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_ADDED = gql`\n  subscription {\n    dishAdded {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_UPDATED = gql`\n  subscription {\n    dishUpdated {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_REMOVED = gql`\n  subscription {\n    dishRemoved {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_VOTED = gql`\n  subscription {\n    dishVoted {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_UPDATED = gql`\n  subscription {\n    ingredientUpdated {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_REMOVED = gql`\n  subscription {\n    ingredientRemoved {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_ADDED = gql`\n  subscription {\n    methodAdded {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_UPDATED = gql`\n  subscription {\n    methodUpdated {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_REMOVED = gql`\n  subscription {\n    methodRemoved {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","// RFF demo project\n// DishyReducer.js\n// creates reducer to Redux global state for application to use - dishy\n\nconst initialState = {\n  carbSearch: '',\n  proteinSearch: '',\n  spiceSearch: '',\n  methodSearch: '',\n  newDish: false,\n  newDishCarbs: [],\n  newDishProteins: [],\n  newDishSpices: [],\n  newDishMethods: []\n};\n\nconst DishyReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setCarbSearch':\n    return {...state, carbSearch: action.carbSearch};\n  case 'setProteinSearch':\n    return {...state, proteinSearch: action.proteinSearch};\n  case 'setSpiceSearch':\n    return {...state, spiceSearch: action.spiceSearch};\n  case 'setMethodSearch':\n    return {...state, methodSearch: action.methodSearch};\n  case 'setNewDish':\n    return {...state, newDish: true};\n  case 'setNewDishCarbs':\n    return {...state, newDishCarbs: [...state.newDishCarbs, action.carb]};\n  case 'setNewDishProteins':\n    return {...state, newDishProteins: [...state.newDishProteins, action.protein]};\n  case 'setNewDishSpices':\n    return {...state, newDishSpices: [...state.newDishSpices, action.spice]};\n  case 'setNewDishMethods':\n    return {...state, newDishMethods: [...state.newDishMethods, action.method]};\n  case 'resetNewDish':\n    return {...state, newDish: false, newDishCarbs: [], newDishProteins: [], newDishSpices: [], newDishMethods: []};\n  default:\n    return state;\n  }\n};\n\nexport const initDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDish'\n    });\n  };\n};\n\nexport const resetDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetNewDish'\n    });\n  };\n};\n\nexport const addDishCarb = (carb) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishCarbs', carb: {name: carb.name, id: carb.id}\n    });\n  };\n};\n\nexport const addDishProtein = (protein) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishProteins', protein: {name: protein.name, id: protein.id}\n    });\n  };\n};\n\nexport const addDishSpice = (spice) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishSpices', spice: {name: spice.name, id: spice.id}\n    });\n  };\n};\n\nexport const addDishMethod = (method) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishMethods', method: {name: method.name, id: method.id}\n    });\n  };\n};\n\nexport const setSearchCarb = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: search\n    });\n  };\n};\n\nexport const setSearchProtein = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: search\n    });\n  };\n};\n\nexport const setSearchSpice = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: search\n    });\n  };\n};\n\nexport const setSearchMethod = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: search\n    });\n  };\n};\n\nexport const resetSearchCarb = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: ''\n    });\n  };\n};\n\nexport const resetSearchProtein = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: ''\n    });\n  };\n};\n\nexport const resetSearchSpice = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: ''\n    });\n  };\n};\n\nexport const resetSearchMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: ''\n    });\n  };\n};\n\nexport default DishyReducer;","// RFF demo project\n// Dishy.js\n// React component that renders dish suggestion-section of the webapp\n\n// IMPORTS\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\n\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\nimport {ALL_PROTEINS} from '../core/graphql/rff/queries/q_allProteins';\nimport {ALL_SPICES} from '../core/graphql/rff/queries/q_allSpices';\nimport {ALL_METHODS} from '../core/graphql/rff/queries/q_allMethods';\nimport {ALL_DISHES} from '../core/graphql/rff/queries/q_allDishes';\nimport {ADD_METHOD} from '../core/graphql/rff/mutations/m_addMethod';\nimport {ADD_INGREDIENT} from '../core/graphql/rff/mutations/m_addIngredient';\nimport {ADD_DISH} from '../core/graphql/rff/mutations/m_addDish';\nimport {DISH_ADDED} from '../core/graphql/rff/subscriptions/s_dishAdded';\nimport {DISH_UPDATED} from '../core/graphql/rff/subscriptions/s_dishUpdated';\nimport {DISH_REMOVED} from '../core/graphql/rff/subscriptions/s_dishRemoved';\nimport {DISH_VOTED} from '../core/graphql/rff/subscriptions/s_dishVoted';\nimport {INGREDIENT_ADDED} from '../core/graphql/rff/subscriptions/s_ingredientAdded';\nimport {INGREDIENT_UPDATED} from '../core/graphql/rff/subscriptions/s_ingredientUpdated';\nimport {INGREDIENT_REMOVED} from '../core/graphql/rff/subscriptions/s_ingredientRemoved';\nimport {METHOD_ADDED} from '../core/graphql/rff/subscriptions/s_methodAdded';\nimport {METHOD_UPDATED} from '../core/graphql/rff/subscriptions/s_methodUpdated';\nimport {METHOD_REMOVED} from '../core/graphql/rff/subscriptions/s_methodRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {initDish, resetDish, addDishCarb, addDishProtein, addDishSpice,\n  addDishMethod} from '../core/store/reducers/DishyReducer';\n\n// prop mapper. maps imported state from store to usable props.\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    dishyState: state.dishyState,\n    user: state.loginState.user\n  };\n};\n\n// prop mapper. maps imported functions from store to usable props.\nconst mapDispatchToProps = {\n  initDish, resetDish, addDishCarb, addDishProtein, addDishSpice, addDishMethod,\n  handleInfo, handleError\n};\n\n// Dishy. application for site.\nconst Dishy = (props) => {\n  const client = useApolloClient();\n  const carbResults = useQuery(ALL_CARBS);\n  const proteinResults = useQuery(ALL_PROTEINS);\n  const spiceResults = useQuery(ALL_SPICES);\n  const methodResults = useQuery(ALL_METHODS);\n  const dishResults = useQuery(ALL_DISHES);\n\n  useSubscription(DISH_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishAdded;\n      updateCacheWithDish('added', dish);\n    }\n  });\n  useSubscription(DISH_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishUpdated;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_VOTED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishVoted;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishRemoved;\n      updateCacheWithDish('removed', dish);\n    }\n  });\n  useSubscription(INGREDIENT_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('added', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('added', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('added', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientUpdated;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('updated', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('updated', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('updated', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('removed', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('removed', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('removed', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(METHOD_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodAdded;\n      updateCacheWithMethod('added', method);\n    }\n  });\n  useSubscription(METHOD_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodUpdated;\n      updateCacheWithMethod('updated', method);\n    }\n  });\n  useSubscription(METHOD_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodRemoved;\n      updateCacheWithMethod('removed', method);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithCarb = async (eventType, carb) => {\n    const includedIn = (set, object) => set.map(c => c.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_CARBS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {allCarbs: dataInStore.allCarbs.concat(carb)}\n        });\n        props.handleInfo(`Carb added: ${carb.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.map(c => {\n              return c.id === carb.id ? carb : c;\n            })}\n        });\n        props.handleInfo(`Carb updated: ${carb.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.forEach(c => {\n              if (c.id !== carb.id) return c;\n            })}\n        });\n        props.handleInfo(`Carb removed: ${carb.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithProtein = async (eventType, protein) => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_PROTEINS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {allProteins: dataInStore.allProteins.concat(protein)}\n        });\n        props.handleInfo(`Protein added: ${protein.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.map(p => {\n              return p.id === protein.id ? protein : p;\n            })}\n        });\n        props.handleInfo(`Protein updated: ${protein.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.forEach(p => {\n              if (p.id !== protein.id) return p;\n            })}\n        });\n        props.handleInfo(`Protein removed: ${protein.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithSpice = async (eventType, spice) => {\n    const includedIn = (set, object) => set.map(s => s.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_SPICES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {allSpices: dataInStore.allSpices.concat(spice)}\n        });\n        props.handleInfo(`Spice added: ${spice.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.map(s => {\n              return s.id === spice.id ? spice : s;\n            })}\n        });\n        props.handleInfo(`Spice updated: ${spice.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.forEach(s => {\n              if (s.id !== spice.id) return s;\n            })}\n        });\n        props.handleInfo(`Spice removed: ${spice.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithMethod = async (eventType, method) => {\n    const includedIn = (set, object) => set.map(m => m.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_METHODS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {allMethods: dataInStore.allMethods.concat(method)}\n        });\n        props.handleInfo(`Method added: ${method.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.map(m => {\n              return m.id === method.id ? method : m;\n            })}\n        });\n        props.handleInfo(`Method updated: ${method.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.forEach(m => {\n              if (m.id !== method.id) return m;\n            })}\n        });\n        props.handleInfo(`Method removed: ${method.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithDish = async (eventType, dish) => {\n    const includedIn = (set, object) => set.map(d => d.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_DISHES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {allDishes: dataInStore.allDishes.concat(dish)}\n        });\n        props.handleInfo(`Dish added: ${dish.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.map(d => {\n              return d.id === dish.id ? dish : d;\n            })}\n        });\n        props.handleInfo(`Dish updated: ${dish.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.forEach(d => {\n              if (d.id !== dish.id) return d;\n            })}\n        });\n        props.handleInfo(`Dish removed: ${dish.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Loading = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>loading . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Error = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>something went wrong . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'data' is set but has no information.\n  const Empty = ({type}) => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>no {type} available</p>\n        </div>\n      </div>\n    );\n  };\n\n  // helper function to add ingredients or methods to new dish.\n  // checks whether or not instance of component has been added already before adding to list.\n  function handleAddComponent(event, component, type) {\n    event.preventDefault();\n    const {newDishCarbs, newDishProteins, newDishSpices, newDishMethods} = props.dishyState;\n    if (!props.dishyState.newDish) {\n      props.initDish();\n    }\n    switch (type) {\n    case 'carb':\n      if (!newDishCarbs.filter(c => c.id === component.id).length > 0) props.addDishCarb(component);\n      break;\n    case 'protein':\n      if (!newDishProteins.filter(p => p.id === component.id).length > 0) props.addDishProtein(component);\n      break;\n    case 'spice':\n      if (!newDishSpices.filter(s => s.id === component.id).length > 0) props.addDishSpice(component);\n      break;\n    case 'method':\n      if (!newDishMethods.filter(m => m.id === component.id).length > 0) props.addDishMethod(component);\n      break;\n    default:\n      break;\n    }\n  }\n\n  // subcomponent. renders selector for found carbs & selected carb information.\n  const Carbs = () => {\n    const [selection, setSelection] = useState(null);\n    if (carbResults.loading) {\n      return <Loading/>;\n    } else if (carbResults.data && carbResults.data.allCarbs) {\n      const resultCount = carbResults.data.allCarbs.length;\n      if (resultCount > 0) {\n        return (\n          <div id='carbSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='carbSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>carbs</option>\n                {carbResults.data.allCarbs.map((c) => <option key={c.id} value={JSON.stringify(c)}>{c.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedCarb' type='carb' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'carb')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='carbs'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found proteins & selected protein information.\n  const Proteins = () => {\n    const [selection, setSelection] = useState(null);\n    if (proteinResults.loading) {\n      return <Loading/>;\n    } else if (proteinResults.data && proteinResults.data.allProteins) {\n      const resultCount = proteinResults.data.allProteins.length;\n      if (resultCount > 0) {\n        return (\n          <div id='proteinSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='proteinSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>proteins</option>\n                {proteinResults.data.allProteins.map((p) => <option key={p.id} value={JSON.stringify(p)}>{p.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedProtein' type='protein' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'protein')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='proteins'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found spices & selected spice information.\n  const Spices = () => {\n    const [selection, setSelection] = useState(null);\n    if (spiceResults.loading) {\n      return <Loading/>;\n    } else if (spiceResults.data && spiceResults.data.allSpices) {\n      const resultCount = spiceResults.data.allSpices.length;\n      if (resultCount > 0) {\n        return (\n          <div id='spiceSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='spiceSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>spices</option>\n                {spiceResults.data.allSpices.map((s) => <option key={s.id} value={JSON.stringify(s)}>{s.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedSpice' type='spice' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'spice')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='spices'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found cooking methods & selected method information.\n  const Methods = () => {\n    const [selection, setSelection] = useState(null);\n    if (methodResults.loading) {\n      return <Loading/>;\n    } else if (methodResults.data && methodResults.data.allMethods) {\n      const resultCount = methodResults.data.allMethods.length;\n      if (resultCount > 0) {\n        return (\n          <div id='methodSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='methodSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>cooking methods</option>\n                {methodResults.data.allMethods.map((m) => <option key={m.id} value={JSON.stringify(m)}>{m.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedMethod' type='method' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'method')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='cooking methods'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found dishes & selected dish information.\n  const Dishes = () => {\n    const [selection, setSelection] = useState(null);\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else {\n        return (\n          <div id='dishSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='dishSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>dishes</option>\n                {dishResults.data.allDishes.map((d) => <option key={d.id} value={JSON.stringify(d)}>{d.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Dish id='selectedDish' methods={selection.cookingMethods} carbs={selection.carbs} spices={selection.spices}\n                  proteins={selection.proteins} note={selection.note} name={selection.name}/>\n              </div>}\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders random dish information.\n  const Random = () => {\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else if (resultCount === 1) {\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[0];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      } else {\n        const random = Math.floor(Math.random() * Math.floor(dishResults.data.allDishes.length));\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[random];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n\n  // helper function. handles new dish component submission.\n  // checks the type of submission and sets variables accordingly.\n  const handleNewComponent = async (type) => {\n    const token = await localStorage.getItem('rffUserToken').substring(7);\n    let variables;\n    switch (type) {\n    case 'carb':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newCarbName').value\n      };\n      break;\n    case 'protein':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newProteinName').value\n      };\n      break;\n    case 'spice':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newSpiceName').value\n      };\n      break;\n    case 'method':\n      variables = {\n        token: token,\n        name: document.getElementById('newMethodName').value\n      };\n      break;\n    default:\n      variables = null;\n      break;\n    }\n    if (variables !== null && variables.token) {\n      await client.mutate({\n        mutation: type === 'method' ? ADD_METHOD : ADD_INGREDIENT,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          switch (type) {\n          case 'carb':\n            updateCacheWithCarb('added', data.addIngredient);\n            break;\n          case 'protein':\n            updateCacheWithProtein('added', data.addIngredient);\n            break;\n          case 'spice':\n            updateCacheWithSpice('added', data.addIngredient);\n            break;\n          case 'method':\n            updateCacheWithMethod('added', data.addMethod);\n            break;\n          default:\n            variables = null;\n            break;\n          }\n        } else {\n          props.handleError(`Error occurred with ${type}: cannot add ${variables.name}`);\n        }\n      }\n      );\n    }\n  };\n\n  // subcomponent. renders form for new dish component submission.\n  // selector defines which type of dish component will be submitted to handler function.\n  const NewComponent = () => {\n    const [selection, setSelection] = useState('carb');\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <p className={classProvider(props.theme, 'heading')}><strong>Add new...</strong></p>\n          <div id='addComponentSelector' className='selector'>\n            <button id='componentSelectCarb' type='button' onClick={() => setSelection('carb')}\n              className={selection === 'carb'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>carb</button>\n            <button id='componentSelectProtein' type='button' onClick={() => setSelection('protein')}\n              className={selection === 'protein'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>protein</button>\n            <button id='componentSelectSpice' type='button' onClick={() => setSelection('spice')}\n              className={selection === 'spice'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>spice</button>\n            <button id='componentSelectMethod' type='button' onClick={() => setSelection('method')}\n              className={selection === 'method'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>method</button>\n          </div>\n          <DishComponentForm selection={selection}/>\n        </div>\n      </div>\n    );\n  };\n\n  const DishComponentForm = ({selection}) => {\n    switch (selection) {\n    case 'carb': return <NewCarb/>;\n    case 'method': return <NewMethod/>;\n    case 'protein': return <NewProtein/>;\n    case 'spice': return <NewSpice/>;\n    default: return null;\n    }\n  };\n  // subcomponent. renders form for new spice submission.\n  const NewSpice = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newSpiceName' placeholder='spice name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('spice')} id='saveSpice' className={classProvider(props.theme, 'activator')}>Save spice</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new protein submission.\n  const NewProtein = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newProteinName' placeholder='protein name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('protein')} id='saveProtein' className={classProvider(props.theme, 'activator')}>Save protein</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new carb submission.\n  const NewCarb = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newCarbName' placeholder='carb name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('carb')} id='saveCarb' className={classProvider(props.theme, 'activator')}>Save carb</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new cooking method submission.\n  const NewMethod = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newMethodName' placeholder='method name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('method')} id='saveMethod' className={classProvider(props.theme, 'activator')}>Save method</button>\n      </div>\n    );\n  };\n\n  // helper function. handles new dish submission.\n  // maps added dish component values to id's (string formatted),\n  // creates variables for GraphQL and triggers mutation.\n  const handleNewDish = async () => {\n    const {newDishMethods, newDishProteins, newDishCarbs, newDishSpices, newDish} = props.dishyState;\n    if (newDish) {\n      const token = await localStorage.getItem('rffUserToken').substring(7);\n      const variables = {\n        token: token(),\n        name: document.getElementById('newDishName').value,\n        note: document.getElementById('newDishNote').value,\n        cookingMethods: newDishMethods.map(m => m.id),\n        proteins: newDishProteins.map(p => p.id),\n        carbs: newDishCarbs.map(c => c.id),\n        spices: newDishSpices.map(s => s.id)\n      };\n      if (variables.token) {\n        await client.mutate({\n          mutation: ADD_DISH,\n          variables: variables,\n          errorPolicy: 'ignore'\n        }).then((result) => {\n          const {data} = result;\n          if (data !== null) {\n            resetDishForm();\n            props.handleInfo(`New dish saved: ${variables.name}`);\n          } else {\n            props.handleError(`Error occurred with dish: cannot add ${variables.name}`);\n          }\n        });\n      }\n    }\n  };\n\n  const resetDishForm = () => {\n    document.getElementById('newDishName').value = '';\n    document.getElementById('newDishNote').value = '';\n    props.resetDish();\n  };\n\n  // subcomponent. renders form for new dish submission.\n  // selector activates/deactivates form.\n  // form activated also when dish component added to new dish if form is not active.\n  // deactivation resets added components from Redux-state.\n  const NewDish = () => {\n    const {\n      newDish, newDishCarbs, newDishProteins, newDishSpices, newDishMethods\n    } = props.dishyState;\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <h4 className={classProvider(props.theme, 'heading')}>Add new dish</h4>\n          {newDish\n            ? <button type='button' onClick={() => resetDishForm()} id='newDishDeactivate'\n              className={classProvider(props.theme, 'deactivator')}>reset dish</button>\n            : <button type='button' onClick={() => props.initDish()} id='newDishActivate'\n              className={classProvider(props.theme, 'activator')}>create dish</button>}\n          {newDish && <>\n            <Dish view='new' carbs={newDishCarbs} proteins={newDishProteins}\n              spices={newDishSpices} methods={newDishMethods}/>\n            <button id='saveDish' onClick={() => handleNewDish()}\n              type='button' className={classProvider(props.theme, 'activator')}>Save dish</button>\n          </>}\n        </div>\n      </div>\n    );\n  };\n\n  // subcomponent. renders dish with given information.\n  const Dish = ({view, carbs, proteins, spices, methods, note, name}) => {\n    if (view === 'random') {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else if (view === 'new') {\n      return (\n        <div className='dish'>\n          <input className={classProvider(props.theme, 'noteArea')}\n            placeholder='dish name' type='text' id='newDishName'/>\n          <input type='text' className={classProvider(props.theme, 'noteArea')}\n            placeholder='description, steps, etc.' id='newDishNote'/>\n          <div className='componentContainer'>\n            <DishComponents id='newDishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='newDishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='newDishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='newDishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish components with given information.\n  const DishComponents = ({type, components, viewType}) => {\n    if (components.length > 0) {\n      return (\n        <div className='components'>\n          {type === 'carb' && <h4 className={classProvider(props.theme, 'text')}>Carbs:</h4>}\n          {type === 'protein' && <h4 className={classProvider(props.theme, 'text')}>Proteins:</h4>}\n          {type === 'spice' && <h4 className={classProvider(props.theme, 'text')}>Spices:</h4>}\n          {type === 'method' && <h4 className={classProvider(props.theme, 'text')}>Cooking methods:</h4>}\n          {components.map((c) => <Component key={c.name} component={c} type={type} view='plain'/>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className='components'>\n          {type === 'carb' && <p className={classProvider(props.theme, 'text')}>no carbs</p>}\n          {type === 'protein' && <p className={classProvider(props.theme, 'text')}>no proteins</p>}\n          {type === 'spice' && <p className={classProvider(props.theme, 'text')}>no spices</p>}\n          {type === 'method' && <p className={classProvider(props.theme, 'text')}>no cooking methods</p>}\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish component information.\n  const Component = ({component, view}) => {\n    if (props.dishyState.newDish && view === 'new') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else if (view === 'random' || view === 'plain') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else {\n      const uses = component.uses.length;\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n          <p className={classProvider(props.theme, 'text')}>\n            {uses > 1 ? `used in ${uses} dishes` : uses === 1 ? 'used in 1 dish' : 'no usage'}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.theme, 'heading')}>Suggested:</h4>\n        <Random id='randomDish'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Dishes:</h4>\n        <Dishes id='dishes'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Carbs:</h4>\n        <Carbs id='carbs'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Proteins:</h4>\n        <Proteins id='proteins'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Spices:</h4>\n        <Spices id='spices'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Cooking methods:</h4>\n        <Methods id='methods'/>\n        {props.show === 'advanced' && <NewComponent id='newDishComponent'/>}\n        {props.show === 'advanced' && <NewDish id='newDish'/>}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishy);","// RFF demo project\n// LandingPage.js\n// React component that renders front page for the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {InlineIcon} from '@iconify/react';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {NEWS} from '../core/graphql/rff/queries/q_news';\nimport News from './News';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst LandingPage = (props) => {\n\n  const Locked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          If you want to use these advanced features, please log in.</p>\n      </div>\n    );\n  };\n\n  const Unlocked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          You have logged in and therefore eligible to use advanced features.</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        {props.loginState.user === null\n          ? <Locked/>\n          : <Unlocked/>\n        }\n        <News mode='landing'/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(LandingPage);","\nimport gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","// RFF demo project\n// LoginPage.js\n// React component that renders login page for the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {loginFailure, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient, useMutation} from '@apollo/react-hooks';\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst LoginPage = (props) => {\n  const client = useApolloClient();\n  const [login] = useMutation(LOGIN);\n\n  const handleLogin = () => {\n    login({\n      errorPolicy: 'ignore',\n      variables: {\n        username: document.getElementById('loginUsername').value,\n        password: document.getElementById('loginPassword').value\n      }\n    }).then((result) => {\n      const {data} = result;\n      let loginToken;\n      if (data !== null) {\n        loginToken = data.login.value;\n        client.query({\n          query: ME,\n          variables: {\n            token: loginToken.substring(7)\n          }\n        }).then(async (result) => {\n          document.getElementById('loginUsername').value = '';\n          document.getElementById('loginPassword').value = '';\n          localStorage.setItem('rffUserToken', loginToken);\n          await props.loginSuccess(result.data.me);\n          await props.handleInfo('logged in successfully');\n        });\n      } else {\n        document.getElementById('loginPassword').value = '';\n        props.handleError('invalid username or password');\n        props.loginFailure();\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      {localStorage.getItem('rffUserToken') && <Redirect push to='/'/>}\n      <div className='container'>\n        <form className='commonElements'>\n          <input id='loginUsername' type='text' placeholder='username'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='loginPassword' type='password' placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='loginButton' type='button' onClick={() => handleLogin()}\n            className={classProvider(props.theme, 'formElement')}>{'login >'}</button>\n          <Link id='gotoRegisterButton' to='/register' onClick={() => props.switchApp('Register')}\n            className={classProvider(props.theme, 'formElement')}>{'register >'}</Link>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","// RFF demo project\n// CountryReducer.js\n// creates reducer to Redux global state for application to use - OpenCountry\n\nconst initialState = {\n  countries: [],\n  countrySearch: '',\n  selected: ''\n};\n\nconst CountryReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'search':\n    return {...state, countrySearch: action.search};\n  case 'resetSearch':\n    return {...state, countrySearch: ''};\n  case 'setCountries':\n    return {...state, countries: action.countries};\n  case 'setSelected':\n    return {...state, selected: action.selected};\n  case 'resetSelected':\n    return {...state, selected: ''};\n  default:\n    return state;\n  }\n};\n\nexport const initCountries = (countries) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCountries',\n      countries: countries\n    });\n  };\n};\n\nexport const resetSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetSearch'\n    });\n  };\n};\n\nexport const setSearch = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'search',\n      search: search\n    });\n  };\n};\n\nexport const setSelection = (id) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected',\n      selected: id\n    });\n  };\n};\n\nexport const resetSelection = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected'\n    });\n  };\n};\n\nexport default CountryReducer;","// RFF demo project\n// Country.js\n// creates Country-class for application to use - OpenCountry\n\nimport PropTypes from 'prop-types';\n\nclass Country {\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      numericCode: props.numericCode,\n      topLevelDomain: props.topLevelDomain,\n      alpha2Code: props.alpha2Code,\n      alpha3Code: props.alpha3Code,\n      callingCodes: props.callingCodes,\n      capital: props.capital,\n      altSpellings: props.altSpellings,\n      region: props.region,\n      subregion: props.subregion,\n      population: props.population,\n      timezones: props.timezones,\n      borders: props.borders,\n      nativeName: props.nativeName,\n      currencies: props.currencies,\n      languages: props.languages,\n      flag: props.flag\n    };\n  }\n  getName() {\n    return this.state.name;\n  }\n  getNumericCode() {\n    return this.state.numericCode;\n  }\n  getDomain() {\n    return this.state.topLevelDomain;\n  }\n  getAlpha2() {\n    return this.state.alpha2Code;\n  }\n  getAlpha3() {\n    return this.state.alpha3Code;\n  }\n  getCallingCodes() {\n    return this.state.callingCodes;\n  }\n  getCapital() {\n    return this.state.capital;\n  }\n  getAltSpellings() {\n    return this.state.altSpellings;\n  }\n  getRegion() {\n    return this.state.region;\n  }\n  getSubregion() {\n    return this.state.subregion;\n  }\n  getPopulation() {\n    return this.state.population;\n  }\n  getTimezones() {\n    return this.state.timezones;\n  }\n  getBorders() {\n    return this.state.borders;\n  }\n  getNativeName() {\n    return this.state.nativeName;\n  }\n  getCurrencies() {\n    return this.state.currencies;\n  }\n  getLanguages() {\n    return this.state.languages;\n  }\n  getFlag() {\n    return this.state.flag;\n  }\n}\n\nCountry.propTypes = {\n  name: PropTypes.string,\n  numericCode: PropTypes.string,\n  topLevelDomain: PropTypes.array,\n  alpha2Code: PropTypes.string,\n  alpha3Code: PropTypes.string,\n  callingCodes: PropTypes.array,\n  capital: PropTypes.string,\n  altSpellings: PropTypes.array,\n  region: PropTypes.string,\n  subRegion: PropTypes.string,\n  population: PropTypes.number,\n  timezones: PropTypes.array,\n  borders: PropTypes.array,\n  nativeName: PropTypes.string,\n  currencies: PropTypes.array,\n  languages: PropTypes.array,\n  flag: PropTypes.string\n};\n\nexport default Country;","// RFF demo project\n// CountryDetails.js\n// React component that renders available information of the countries\n\nimport React from 'react';\nimport {Flag, Image} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Country from '../../core/classes/Country';\nimport '../../core/style/global.css';\nimport '../../core/style/elements.css';\nimport classProvider from '../../core/tools/classProvider';\nimport {setSearch} from '../../core/store/reducers/CountryReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n  };\n};\nconst mapDispatchToProps = {\n  setSearch\n};\n\nconst CountryDetails = (props) => {\n  const country = new Country(props.country);\n\n  const overrideSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(country.getName());\n  };\n\n  const Alias = () => {\n    const alts = country.getAltSpellings();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Also known as:</label>\n        <ul>\n          {alts.map((a) => {\n            return <li className={classProvider(props.theme, 'heading')} key={a}>{a}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Borders = () => {\n    const borders = country.getBorders();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Borders with:</label>\n        <ul>\n          {borders.map((b) => {\n            return <li className={classProvider(props.theme, 'heading')} key={b}>{b}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Calling = () => {\n    const codes = country.getCallingCodes();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Calling codes:</label>\n        <ul>\n          {codes.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c}>{c}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Currency = () => {\n    const currencies = country.getCurrencies();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Currency:</label>\n        <ul>\n          {currencies.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c.name}>{c.name}, {c.code}, {c.symbol}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Domain = () => {\n    const domains = country.getDomain();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Domain extensions:</label>\n        <ul>\n          {domains.map((d) => {\n            return <li className={classProvider(props.theme, 'heading')} key={d}>{d}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const CountryFlag = () => {\n    return <Image size='medium' src={country.getFlag()}/>;\n  };\n\n  const Language = () => {\n    const languages = country.getLanguages();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Official languages:</label>\n        <ul>\n          {languages.map((l) => {\n            return <li className={classProvider(props.theme, 'heading')} key={l.name}>{l.name}, {l.nativeName}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Timezones = () => {\n    const zones = country.getTimezones();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Timezones:</label>\n        <ul>\n          {zones.map((z) => {\n            return <li className={classProvider(props.theme, 'heading')} key={z}>{z}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Header = () => {\n    if (props.multi) {\n      return (\n        <div className='countryHeader'>\n          <h4 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='countryHeader'>\n          <h3 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h3>\n        </div>\n      );\n    }\n  };\n\n  const Body = () => {\n    if (props.multi) {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <Alias/>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n          <Language/>\n          <Timezones/>\n          <Borders/>\n          <Currency/>\n          <Calling/>\n          <Domain/>\n          <CountryFlag/>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div key={country.getNumericCode()} className='countryContainer' onClick={(event) => overrideSearch(event)}>\n      <Header/>\n      <Body/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetails);","// RFF demo project\n// OpenCountry.js\n// React component that renders country data -section of the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport resetIcon from '@iconify/icons-iwwa/reset';\n\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\nimport {setSearch, resetSearch} from '../core/store/reducers/CountryReducer';\nimport CountryDetails from './widgets/CountryDetails';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries,\n    countrySearch: state.countryState.countrySearch\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearch,\n  resetSearch\n};\n\nconst Countries = (props) => {\n\n  let matched = [];\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(event.target.value);\n  };\n\n  const ListCountries = () => {\n    if (props.countrySearch.length > 0) {\n      for (let i = 0; i < props.countries.length; i++) {\n        if (props.countries[i].name.toLowerCase().includes(props.countrySearch.toLowerCase())) {\n          matched = [...matched, props.countries[i]];\n        }\n      }\n      if (matched.length >= 4) {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={true} country={c}/>\n            </div>\n          );\n        });\n      } else if (matched.length < 1) {\n        return (\n          <div className='countryAppElements'>\n            <h5>{'Couldn\\'t find any entries'}</h5>\n          </div>\n        );\n      } else {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={false} country={c}/>\n            </div>\n          );\n        });\n      }\n    } else {\n      matched = [];\n      return props.countries.map((c) => {\n        return (\n          <div key={c.numericCode} className='countryAppElements'>\n            <CountryDetails key={c.numericCode} multi={true} country={c}/>\n          </div>\n        );\n      });\n    }\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>\n          Data for {props.countrySearch.length > 0 ? props.countries.length : props.countries.length} countries found.\n        </h5>\n        <div className='appElements'>\n          <input type='search' placeholder='search country by name'\n            onChange={event => handleSearch(event)}\n            onReset={() => props.resetSearch()} value={props.countrySearch}\n            className={classProvider(props.theme, 'formElement')}/>\n          <button onClick={() => props.resetSearch()} title='reset search'\n            className={classProvider(props.theme, 'formElement')}><Icon icon={resetIcon} /></button>\n        </div>\n        <ListCountries/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// RegistrationPage.js\n// React component that renders registration page of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {ADD_USER} from '../core/graphql/rff/mutations/m_addUser';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst RegistrationPage = (props) => {\n  const client = useApolloClient();\n\n  const register = async (event) => {\n    event.preventDefault();\n    const username = document.getElementById('regUsername').value;\n    const password = document.getElementById('regPassword').value;\n    const confirm = document.getElementById('regConfirm').value;\n    password === confirm\n      ? await client.mutate({\n        mutation: ADD_USER,\n        variables: {\n          username: username,\n          password: password\n        },\n        errorPolicy: 'ignore'\n      }).then(result => {\n        const {data} = result;\n        if (data !== null) {\n          props.handleInfo(`${username} registered`);\n        } else {\n          props.handleError(`username ${username} is already in use`);\n        }\n      })\n      : props.handleError('passwords do not match');\n    document.getElementById('regUsername').value = '';\n    document.getElementById('regPassword').value = '';\n    document.getElementById('regConfirm').value = '';\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <form className='commonElements' onSubmit={(event) => register(event)}>\n          <input id='regUsername' type='text' required minLength={4} placeholder='username'\n            className={classProvider(props.theme, 'formElement')} autoComplete/>\n          <input id='regPassword' type='password' required minLength={8} placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='regConfirm' type='password' required minLength={8} placeholder='re-type password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='regButton' type='submit' className={classProvider(props.theme, 'formElement')}>{'register >'}</button>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationPage);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_LIST_DETAILS = gql`\n    fragment GroupListDetails on GroupList {\n        title\n        listType\n        removable\n        id\n        group {\n            title\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const GROUP_LISTS = gql`\n  query groupLists($token: String!) {\n    groupLists(token: $token) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const PRIVATE_LIST_DETAILS = gql`\n    fragment PrivateListDetails on PrivateList {\n        title\n        listType\n        removable\n        id\n        owner {\n            username\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const PRIVATE_LISTS = gql`\n  query privateLists($token: String!) {\n    privateLists(token: $token) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_ADDED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_ADDED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_REMOVED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_REMOVED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUPS = gql`\n  query groups($token: String!) {\n    groups(token: $token) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const ADD_LIST_GROUP = gql`\n  mutation addListGroup($token: String!, $title: String!, $group: String!) {\n    addListGroup(token: $token, title: $title, group: $group) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const ADD_LIST_PRIVATE = gql`\n  mutation addListPrivate($token: String!, $title: String!) {\n    addListPrivate(token: $token, title: $title) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\n\nexport const TASK_DETAILS = gql`\n  fragment TaskDetails on Task {\n    task\n    active\n    priority\n    creator {\n      ...UserDetails\n    }\n    listID\n    id\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASKS = gql`\n  query tasks($token: String!, $listID: String!) {\n    tasks(token: $token, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ADDED = gql`\n  subscription {\n    taskAdded {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_UPDATED = gql`\n  subscription {\n    taskUpdated {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_REMOVED = gql`\n  subscription {\n    taskRemoved {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const ADD_TASK = gql`\n  mutation addTask($token: String!, $task: String!, $listID: String!, $priority: Boolean!) {\n    addTask(token: $token, task: $task, listID: $listID, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_PRIORITY = gql`\n  mutation taskPriority($token: String!, $id: String!, $priority: Boolean!) {\n    taskPriority(token: $token, id: $id, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_DEACTIVATION = gql`\n  mutation taskDeactivation($token: String!, $id: String!) {\n    taskDeactivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ACTIVATION = gql`\n  mutation taskActivation($token: String!, $id: String!) {\n    taskActivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const REMOVE_TASK = gql`\n  mutation removeTask($token: String!, $id: String!) {\n    removeTask(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","// RFF demo project\n// List.js\n// React component that renders list & tasks for task management\n\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\nimport {TASKS} from '../../core/graphql/rff/queries/q_tasks';\nimport classProvider from '../../core/tools/classProvider';\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\nimport chevronUp from '@iconify/icons-fa-solid/chevron-up';\nimport chevronDown from '@iconify/icons-fa-solid/chevron-down';\nimport flagVariant from '@iconify/icons-mdi/flag-variant';\nimport flagVariantOutline from '@iconify/icons-mdi/flag-variant-outline';\nimport {TASK_ADDED} from '../../core/graphql/rff/subscriptions/s_taskAdded';\nimport {TASK_UPDATED} from '../../core/graphql/rff/subscriptions/s_taskUpdated';\nimport {TASK_REMOVED} from '../../core/graphql/rff/subscriptions/s_taskRemoved';\nimport {ADD_TASK} from '../../core/graphql/rff/mutations/m_addTask';\nimport {TASK_PRIORITY} from '../../core/graphql/rff/mutations/m_taskPriority';\nimport {TASK_DEACTIVATION} from '../../core/graphql/rff/mutations/m_taskDeactivation';\nimport {TASK_ACTIVATION} from '../../core/graphql/rff/mutations/m_taskActivation';\nimport {REMOVE_TASK} from '../../core/graphql/rff/mutations/m_removeTask';\nimport {handleError, handleInfo} from '../../core/store/reducers/AppReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\n// task list rendering component\nconst List = (props) => {\n  const client = useApolloClient();\n  const list = props.list;\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const [expanded, setExpanded] = useState(false);\n  const {data, loading, error, refetch} = useQuery(TASKS, {\n    variables: {\n      token: userToken,\n      listID: list.id\n    }\n  });\n\n  // helper function for subscriptions\n  const updateCacheWithTask = async (eventType, task) => {\n    const includedIn = (set, object) => set.map(t => t.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: TASKS, variables: {\n        listID: task.listID,\n        token: userToken\n      }});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.tasks, task)) {\n        await refetch();\n        props.handleInfo(`Task added: ${task.task}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.tasks, task)) {\n        await refetch();\n        props.handleInfo(`Task updated: ${task.task}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.tasks, task)) {\n        await refetch();\n        props.handleInfo(`Task removed: ${task.task}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  useSubscription(TASK_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('added', task);\n    }\n  });\n  useSubscription(TASK_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskUpdated;\n      updateCacheWithTask('updated', task);\n    }\n  });\n  useSubscription(TASK_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskRemoved;\n      updateCacheWithTask('removed', task);\n    }\n  });\n\n  // helper functions: task handlers\n  const handleSaveTask = async (listID, priority) => {\n    const variables = {\n      token: userToken,\n      listID: listID,\n      task: document.getElementById('newTask').value,\n      priority: priority\n    };\n    if (userToken) {\n      await client.mutate({\n        mutation: ADD_TASK,\n        variables: variables\n      }).then((result) => {\n        const {data, errors} = result;\n        if (data !== null) {\n          updateCacheWithTask('added', data.addTask);\n        } else {\n          props.handleError(errors[0].message);\n        }\n      });\n    }\n  };\n  const handleTaskPriority = async ({id, priority}) => {\n    const variables = {\n      token: userToken,\n      id: id,\n      priority: !priority\n    };\n    await client.mutate({\n      mutation: TASK_PRIORITY,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', data.taskPriority);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n  const handleTaskCompletion = async ({id, active}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: active ? TASK_DEACTIVATION : TASK_ACTIVATION,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', active ? data.taskDeactivation : data.taskActivation);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n  const handleTaskRemoval = async ({id}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_TASK,\n      variables: variables\n    }).then((result) => {\n      const {data, errors} = result;\n      if (data !== null) {\n        updateCacheWithTask('removed', data.removeTask);\n      } else {\n        props.handleError(errors[0].message);\n      }\n    });\n  };\n\n  const Flagged = ({flagged}) => {\n    return flagged\n      ? <p className='flagged'>priority {<InlineIcon icon={flagVariant}/>}</p>\n      : <p className='flagged'>non priority {<InlineIcon icon={flagVariantOutline}/>}</p>;\n  };\n  const TaskEmpty = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='empty' task={{task: 'no tasks'}}/>\n      </div>\n    );\n  };\n  const TaskError = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='error' task={{task: 'error occurred'}}/>\n      </div>\n    );\n  };\n  const TaskLoading = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='loading' task={{task: 'loading tasks'}}/>\n      </div>\n    );\n  };\n\n  // task rendering component\n  const Tasks = ({tasks}) => {\n    if (tasks.length > 0) {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>mark done</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map(t => {\n              return <Task key={t.id} status='data' task={t}/>;\n            })}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <TaskEmpty/>;\n    }\n  };\n\n  const Task = ({task, status}) => {\n    const Flagged = ({flagged}) => {\n      return flagged\n        ? <InlineIcon icon={flagVariant}/>\n        : <InlineIcon icon={flagVariantOutline}/>;\n    };\n\n    if (status === 'error') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else if (status === 'loading') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else if (status === 'empty') {\n      return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n    } else {\n      return (\n        <tr className={classProvider(props.theme, 'tableRow')}>\n          <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>\n          <td className={classProvider(props.theme, 'tableCell')}><Flagged flagged={task.priority}/></td>\n          <td className={classProvider(props.theme, 'tableCell')}><button className={task.priority\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}\n          onClick={() => handleTaskPriority(task)}>\n            {task.priority\n              ? 'priority off'\n              : 'priority on'}\n          </button></td>\n          <td className={classProvider(props.theme, 'tableCell')}><button className={task.active\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}\n          onClick={() => handleTaskCompletion(task)}>\n            {task.active\n              ? 'done'\n              : 'undone'}\n          </button></td>\n          <td className={classProvider(props.theme, 'tableCell')}>\n            <button className={classProvider(props.theme, 'deactivator')}\n              onClick={() => handleTaskRemoval(task)}>remove</button></td>\n        </tr>\n      );\n    }\n  };\n\n  //rendering component for new task form\n  const AddTask = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const [priority, setPriority] = useState(false);\n    return (\n      <div id='newTaskForm'>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new task</p>\n          </div>\n          <button title={expanded ? 'close form' : 'open form'} id='taskFormActivator' onClick={() => setExpanded(!expanded)}\n            className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>\n            {expanded ? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n        </div>\n        {expanded && <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>list</th>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{list.title}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <input required minLength={2} id='newTask'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new task'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button id='newTaskPriority' type='button' className={classProvider(props.theme, 'formElement')}\n                  onClick={() => setPriority(!priority)}>{<Flagged flagged={priority}/>}</button>\n              </td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button type='button' className={classProvider(props.theme, 'activator')}\n                  onClick={() => handleSaveTask(list.id, priority)}>save list</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>}\n      </div>\n    );\n  };\n\n  return (\n    <div id={`${list.id}`} className='listContainer'>\n      <div className='componentContainer'>\n        <div className='component'>\n          <strong><p className={classProvider(props.theme, 'text')}>\n            <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> {list.title}\n          </p></strong>\n        </div>\n        <button id={`${list.id}:listExpander`} title={expanded ? 'hide list' : 'show list'} onClick={() => setExpanded(!expanded)}\n          className={expanded\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}>\n          {expanded ? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n      </div>\n      {data && expanded && <div className='componentContainer'>\n        <div className='taskList'>\n          <AddTask list={list}/>\n          <Tasks tasks={data.tasks}/>\n        </div>\n      </div>}\n      {error && <div className='componentContainer'>\n        <div className='taskList'>\n          <TaskError/>\n        </div>\n      </div>}\n      {loading && <div className='componentContainer'>\n        <div className='taskList'>\n          <TaskLoading/>\n        </div>\n      </div>}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","// RFF demo project\n// Tasker.js\n// React component that renders task management -section of the webapp\n\n// imports\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/tasker.css';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nimport {InlineIcon} from '@iconify/react';\nimport chevronUp from '@iconify/icons-fa-solid/chevron-up';\nimport chevronDown from '@iconify/icons-fa-solid/chevron-down';\n\nimport {GROUP_LISTS} from '../core/graphql/rff/queries/q_groupLists';\nimport {PRIVATE_LISTS} from '../core/graphql/rff/queries/q_privateLists';\nimport {Redirect} from 'react-router-dom';\n\nimport {LIST_ADDED_GROUP} from '../core/graphql/rff/subscriptions/s_listAddedGroup';\nimport {LIST_ADDED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listAddedPrivate';\nimport {LIST_REMOVED_GROUP} from '../core/graphql/rff/subscriptions/s_listRemovedGroup';\nimport {LIST_REMOVED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listRemovedPrivate';\nimport {GROUPS} from '../core/graphql/rff/queries/q_groups';\nimport {ADD_LIST_GROUP} from '../core/graphql/rff/mutations/m_addListGroup';\nimport {ADD_LIST_PRIVATE} from '../core/graphql/rff/mutations/m_addListPrivate';\nimport List from './widgets/List';\n\n// prop mappers\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user,\n    tasker: state.taskerState\n  };\n};\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst Tasker = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const client = useApolloClient();\n  const privateLists = useQuery(PRIVATE_LISTS, {\n    variables: {\n      token: userToken\n    }\n  });\n  const groupLists = useQuery(GROUP_LISTS, {\n    variables: {\n      token: userToken\n    }\n  });\n\n  // Apollo GraphQL subscriptions\n  useSubscription(LIST_ADDED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedPrivate;\n      updateCacheWithPrivatelist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedPrivate;\n      updateCacheWithPrivatelist('removed', list);\n    }\n  });\n  useSubscription(LIST_ADDED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedGroup;\n      updateCacheWithGrouplist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedGroup;\n      updateCacheWithGrouplist('removed', list);\n    }\n  });\n\n  // helper function: list saving handler\n  const handleSaveList = async (groupID, listType) => {\n    let variables;\n    if (listType === 'GroupList') {\n      variables = {\n        token: userToken,\n        group: groupID,\n        title: document.getElementById('newGrouplistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_GROUP,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithGrouplist('added', data.addListGroup);\n          document.getElementById('newGrouplistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    } else {\n      variables = {\n        token: userToken,\n        title: document.getElementById('newPrivatelistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_PRIVATE,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithPrivatelist('added', data.addListPrivate);\n          document.getElementById('newPrivatelistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    }\n  };\n\n  // helper functions for subscriptions\n  const updateCacheWithPrivatelist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: PRIVATE_LISTS, variables: {\n        token: userToken\n      }\n    });\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.privateLists, list)) {\n        await privateLists.refetch();\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await privateLists.refetch();\n        props.handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await privateLists.refetch();\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithGrouplist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      variables: {\n        token: userToken,\n      },\n      query: GROUP_LISTS\n    });\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.groupLists, list)) {\n        await groupLists.refetch();\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await groupLists.refetch();\n        props.handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await groupLists.refetch();\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // generic minor components, ie. query error & loading\n  const Empty = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileDescription')}>no accessible {type} lists</p>\n      </div>\n    );\n  };\n  const Error = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileError')}>error occurred while loading {type} lists</p>\n      </div>\n    );\n  };\n  const Loading = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileLoading')}>loading {type} lists</p>\n      </div>\n    );\n  };\n\n  // component that gives layout base for task list rendering\n  const Lists = () => {\n    return (\n      <div className='container'>\n        {props.user\n          ? <>\n            <ListsP/>\n            <ListsG/>\n          </>\n          : <p className={classProvider(props.theme, 'tileError')}>login needed</p>}\n      </div>\n    );\n  };\n\n  // task lists rendering components\n  const ListsP = () => {\n    const {data, error, loading} = privateLists;\n    return (\n      <div id='privateLists' className='taskList'>\n        <h4 className={classProvider(props.theme, 'listHeader')}>Accessible private lists:</h4>\n        <div className='taskList'>\n          <AddList listType='private'/>\n          {data && data.privateLists.length > 0\n            ? <>{data.privateLists.map(l =>\n              <List key={`privateList:${l.id}`} list={l}/>)}</>\n            : <Empty type='private'/>}\n        </div>\n        {error && <Error type='private'/>}\n        {loading && <Loading type='private'/>}\n      </div>\n    );\n  };\n  const ListsG = () => {\n    const {data, error, loading} = groupLists;\n    return (\n      <div id='groupLists' className='taskList'>\n        <h4 className={classProvider(props.theme, 'heading')}>Accessible group lists:</h4>\n        <div className='taskList'>\n          <AddList listType='group'/>\n          {data && data.groupLists.length > 0\n            ? <>{data.groupLists.map(l => <List key={`groupList:${l.id}`} list={l}/>)}</>\n            : <Empty type='group'/>}\n        </div>\n        {loading && <Loading type='group'/>}\n        {error && <Error type='group'/>}\n      </div>\n    );\n  };\n\n  // rendering component for new list form\n  const AddList = ({listType}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(GROUPS, {\n      variables: {\n        token: userToken\n      }\n    });\n    const Wait = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n        </div>\n      );\n    };\n    const Fail = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileError')}>error occurred</p>\n        </div>\n      );\n    };\n    const Group = () => {\n      const [groupSelection, setGroupSelection] = useState(null);\n      return (\n        <div className='taskList'>\n          {listType === 'group' && <select id='groupSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n            onChange={({target}) => setGroupSelection(JSON.parse(target.value))}>\n            <option key='default' value='default' disabled>groups</option>\n            {data.groups.map((g) => <option key={g.id} value={JSON.stringify(g)}>{g.title}</option>)}\n          </select>}\n          {groupSelection !== null && <table className={classProvider(props.theme, 'table')}>\n            <thead>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <th className={classProvider(props.theme, 'tableCell')}>group</th>\n                <th className={classProvider(props.theme, 'tableCell')}>title</th>\n                <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <td className={classProvider(props.theme, 'tableCell')}><strong>{groupSelection.title}</strong></td>\n                <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                  id='newGrouplistTitle'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new list title'/></td>\n                <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                  className={classProvider(props.theme, 'activator')}\n                  onClick={() => handleSaveList(groupSelection.id, 'GroupList')}>save list</button></td>\n              </tr>\n            </tbody>\n          </table>}\n        </div>\n      );\n    };\n    const Private = () => {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>user</th>\n              <th className={classProvider(props.theme, 'tableCell')}>title</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{props.user.getUsername()}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                className={classProvider(props.theme, 'formElement')}\n                placeholder='new list title' id='newPrivatelistTitle'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                className={classProvider(props.theme, 'activator')}\n                onClick={() => handleSaveList(null, 'PrivateList')}>save list</button></td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    };\n    return (\n      <div id={`newListForm_${listType}`}>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new {listType} list</p>\n          </div>\n          <button title={expanded ? 'close form' : 'open form'} id={`listFormActivator_${listType}`}\n            onClick={() => setExpanded(!expanded)} className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>\n            {expanded? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n        </div>\n        {error && <Fail/>}\n        {loading && <Wait/>}\n        {expanded && data && <div className='componentContainer'>\n          <div className='taskList'>\n            {listType === 'group' && <Group/>}\n            {listType !== 'group' && <Private/>}\n          </div>\n        </div>}\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <Lists/>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasker);","// RFF demo project\n// Transporter.js\n// React component that renders public transport information -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/transporter.css';\nimport HslHrtIcon from './icons/hsl/HslHrtIcon';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {};\n\nconst Transporter = (props) => {\n  const client = useApolloClient();\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>Tracked stops:</h5>\n        <p className={classProvider(props.theme, 'text')}>This feature will be added later</p>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transporter);","// RFF demo project\n// Connector.js\n// provides REST via Axios for application to use\n\nimport axios from 'axios';\n\nconst countriesUrl = 'https://restcountries.eu/rest/v2/all';\n\nconst getCountries = async () => {\n  return await axios.get(countriesUrl);\n};\n\nexport default {\n  getCountries\n};","// RFF demo project\n// UserSettings.js\n// React component that renders user settings -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {\n  loginFailure, loginSuccess\n} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst UserPage = (props) => {\n  const client = useApolloClient();\n\n  const UserManager = () => {\n    return (\n      <div className='commonElements'>\n        <h5 className={classProvider(props.theme, 'heading')}>User information</h5>\n        <UserData/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change password</h5>\n        <ChangePassword/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change username</h5>\n        <ChangeUsername/>\n      </div>\n    );\n  };\n\n  const UserData = () => {\n    return (\n      <>\n        <p className={classProvider(props.theme, 'description')}>User: <strong>{props.user.getUsername()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Role: <strong>{props.user.getRole()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Active: <strong>{props.user.getActive() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Removable: <strong>{props.user.getRemovable() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>ID: <strong>{props.user.getId()}</strong></p>\n      </>\n    );\n  };\n\n  const ChangeUsername = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handleUsernameChange(event)}>\n        <input id='changeUsernamePW' type='password' required placeholder='password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changeUsernameNew' type='text' required placeholder='new username'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>change username</button>\n      </form>\n    );\n  };\n\n  const ChangePassword = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handlePasswordChange(event)}>\n        <input id='changePasswordOld' type='password' required placeholder='old password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordNew' type='password' required placeholder='new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordConfirm' type='password' required placeholder='retype new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>\n          change password\n        </button>\n      </form>\n    );\n  };\n\n  const handlePasswordChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changePasswordOld').value;\n    const newPassword = document.getElementById('changePasswordNew').value;\n    const confirm = document.getElementById('changePasswordConfirm').value;\n    newPassword === confirm\n      ? await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          token: localStorage.getItem('rffUserToken').toString().substring(7),\n          password: password,\n          newPassword: newPassword === confirm && newPassword\n        }\n      }).then((result, errors) => {\n        if (!errors) {\n          client.mutate({\n            mutation: LOGIN,\n            variables: {\n              username: props.user.username,\n              password: newPassword\n            }\n          }).then((result, errors) => {\n            if (!errors) {\n              const token = result.data.login.value;\n              client.query({\n                query: ME,\n                variables: {\n                  token: token.substring(7)\n                }\n              }).then((result, errors) => {\n                if (!errors) {\n                  localStorage.setItem('rffUserToken', token);\n                  props.loginSuccess(result.data.me);\n                  props.handleInfo('login renewed');\n                } else {\n                  props.loginFailure();\n                  props.handleError(errors[0]);\n                }\n              });\n            } else {\n              props.handleError(errors[0]);\n            }\n          });\n        } else {\n          props.handleError(errors[0]);\n        }\n      })\n      : props.handleError({message: 'New passwords do not match'});\n    document.getElementById('changePasswordOld').value = '';\n    document.getElementById('changePasswordNew').value = '';\n    document.getElementById('changePasswordConfirm').value = '';\n  };\n\n  const handleUsernameChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changeUsernamePW').value;\n    const newUsername = document.getElementById('changeUsernameNew').value;\n    await client.mutate({\n      mutation: UPDATE_USER,\n      variables: {\n        token: localStorage.getItem('rffUserToken').toString().substring(7),\n        password: password,\n        newUsername: newUsername\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        client.mutate({\n          mutation: LOGIN,\n          variables: {\n            username: newUsername,\n            password: password\n          }\n        }).then((result, errors) => {\n          if (!errors) {\n            const token = result.data.login.value;\n            client.query({\n              query: ME,\n              variables: {\n                token: token.substring(7)\n              }\n            }).then((result, errors) => {\n              if (!errors) {\n                localStorage.setItem('rffUserToken', token);\n                props.loginSuccess(result.data.me);\n                props.handleInfo('login renewed');\n              } else {\n                props.loginFailure();\n                props.handleError(errors[0]);\n              }\n            });\n          } else {\n            props.handleError(errors[0]);\n          }\n        });\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <UserManager/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n\n/*<form className='commonElements'>\n//           <input type='text' placeholder='username' onChange={({target}) => props.setUsername(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.username} autoComplete={true}/>\n//           <input type='password' placeholder='password' onChange={({target}) => props.setPassword(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.password} autoComplete={true}/>\n//           <button type='button' onClick={() => handleLogin()}\n//                   className={classProvider(props.theme, 'formElement')}>login</button>\n//           <Link to='/register' onClick={() => props.switchApp('Register')}\n//                 className={classProvider(props.theme, 'formElement')}>register</Link>\n//         </form>*/","// RFF demo project\n// App.js\n// webapp file - provides Redux store and Apollo clients for application components\n// creates client side routing for webapp with React Router\n// creates base structure for app layout\n\n\n// imports\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport {ApolloClient} from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {setContext} from 'apollo-link-context';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {split} from 'apollo-link';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {getMainDefinition} from 'apollo-utilities';\nimport {loginSuccess} from './core/store/reducers/LoginReducer';\nimport './core/style/root.css';\nimport Navigation from './components/Navigation';\nimport AdminTools from './components/AdminTools';\nimport About from './components/About';\nimport Calculate from './components/Calculate';\nimport Dashboard from './components/Dashboard';\nimport Dishy from './components/Dishy';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport OpenCountry from './components/OpenCountry';\nimport RegistrationPage from './components/RegistrationPage';\nimport Tasker from './components/Tasker';\nimport Transporter from './components/Transporter';\nimport Connector from './core/services/Connector';\nimport UserPage from './components/UserSettings';\nimport {initCountries} from './core/store/reducers/CountryReducer';\nimport {handleError, handleInfo, switchApp} from './core/store/reducers/AppReducer';\nimport {ME} from './core/graphql/rff/queries/q_me';\n\n// prop mappings for Redux global state & thunk helper functions\nconst mapDispatchToProps = {\n  initCountries, switchApp, loginSuccess, handleError, handleInfo\n};\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    app: state.appState.application,\n    dishyState: state.dishyState,\n    loginState: state.loginState\n  };\n};\n\n// ApolloClient definitions: links & clients for different sections of the webapp\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_WEBSOCKET,\n  options: {reconnect: true}\n});\nconst httpLink = createHttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_ENDPOINT\n});\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('rffUserToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null\n    }\n  };\n});\nconst rffLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\nconst hslLink = createHttpLink({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\n});\nconst rffClient = new ApolloClient({\n  link: rffLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\nconst hslClient = new ApolloClient({\n  link: hslLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst App = (props) => {\n  const loginToken = localStorage.getItem('rffUserToken');\n\n  // hook that handles webapp background styling\n  useEffect(() => {\n    document.body.className = props.theme;\n  });\n  // hook that handles querying data from country API for webapp\n  useEffect(() => {\n    async function init() {\n      await Connector.getCountries().then(response => {\n        props.initCountries(response.data);\n      });\n    }\n    init();\n  }, [props]);\n  // hook that handles restoring login if localstorage already has token stored\n  useEffect(() => {\n    loginToken !== null && rffClient.query({\n      query: ME,\n      variables: {\n        token: loginToken.substring(7)\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        props.loginSuccess(result.data.me);\n        props.handleInfo('Login restored');\n      } else {\n        props.handleError(errors[0]);\n      }\n    });\n  }, [loginToken, rffClient]);\n\n  // webapp definitions: provides routing for most webapp sections\n  const Rff = () => {\n    const {user} = props.loginState;\n    return (\n      <Switch>\n        <Route exact path='/' render={(props) => <LandingPage {...props} show={true}/>}/>\n        <Route path='/about' render={(props) => <About {...props} show={true}/>}/>\n        <Route path='/admin' render={(props) => <AdminTools {...props}\n          show={loginToken !== null && user !== null && (user.getRole() === 'admin' || user.getRole() === 'owner')}/>}/>\n        <Route path='/calculate' render={(props) => <Calculate {...props} show={true}/>}/>\n        <Route path='/countries' render={(props) => <OpenCountry {...props} show={true}/>}/>\n        <Route path='/dashboard' render={(props) => <Dashboard {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/dishy' render={(props) => <Dishy {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/login' render={(props) => <LoginPage {...props} show={loginToken === null}/>}/>\n        <Route path='/register' render={(props) => <RegistrationPage {...props} show={loginToken === null}/>}/>\n        <Route path='/tasker' render={(props) => <Tasker {...props} show={loginToken !== null}/>}/>\n        <Route path='/user' render={(props) => <UserPage {...props} show={loginToken !== null}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides routing for public transport information section\n  const Hsl = () => {\n    return (\n      <Switch>\n        <Route path='/transit' render={(props) => <Transporter {...props}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides navigation & correct ApolloClients for the different sections of the webapp\n  return (\n    <div className='appContainer'>\n      <Router basename='/'>\n        <ApolloProvider client={rffClient}>\n          <Navigation/>\n          <Rff/>\n        </ApolloProvider>\n        <ApolloProvider client={hslClient}>\n          <Hsl/>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// RFF demo project\n// RegReducer.js\n// creates reducer to Redux global state for application to use - registration\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setNewUserName':\n    return {...state, newUserName: action.name};\n  case 'setNewUserUsername':\n    return {...state, newUserUsername: action.username};\n  case 'setNewUserPassword':\n    return {...state, newUserPassword: action.password};\n  case 'setConfirmNewUserPassword':\n    return {...state, confirmNewUserPassword: action.password};\n  case 'successfulReg':\n    return {...initialState};\n  case 'unsuccessfulReg':\n    return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n  case 'resetReg':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport default RegReducer;","// RFF demo project\n// Store.js\n// creates Redux global state for application\n\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport AppReducer from './reducers/AppReducer';\nimport CountryReducer from './reducers/CountryReducer';\nimport LoginReducer from './reducers/LoginReducer';\nimport RegReducer from './reducers/RegReducer';\nimport DishyReducer from './reducers/DishyReducer';\n\nconst reducers = combineReducers({\n  appState: AppReducer,\n  countryState: CountryReducer,\n  loginState: LoginReducer,\n  regState: RegReducer,\n  dishyState: DishyReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","// RFF demo project\n// index.js\n// webapp root file - provides Redux store for application\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './core/store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}