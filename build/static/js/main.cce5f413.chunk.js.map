{"version":3,"sources":["core/classes/User.js","core/store/reducers/LoginReducer.js","core/store/reducers/AppReducer.js","core/tools/classProvider.js","core/graphql/rff/fragments/f_userFragment.js","core/graphql/rff/queries/q_me.js","components/Navigation.js","components/widgets/CountryCount.js","core/graphql/rff/queries/q_groupCount.js","components/widgets/GroupCount.js","core/graphql/rff/queries/q_allListCount.js","core/graphql/rff/queries/q_listCount.js","components/widgets/ListCount.js","core/graphql/rff/queries/q_taskCount.js","core/graphql/rff/queries/q_allTaskCount.js","components/widgets/TaskCount.js","core/graphql/rff/queries/q_dishCount.js","components/widgets/DishCount.js","core/graphql/rff/queries/q_carbCount.js","core/graphql/rff/queries/q_proteinCount.js","core/graphql/rff/queries/q_spiceCount.js","components/widgets/IngredientCount.js","core/graphql/rff/queries/q_methodCount.js","components/widgets/MethodCount.js","components/widgets/TrackedStopsCount.js","core/graphql/rff/queries/q_userCount.js","components/widgets/UserCount.js","core/graphql/rff/fragments/f_newsFragment.js","core/graphql/rff/queries/q_news.js","core/graphql/rff/mutations/m_addNews.js","core/graphql/rff/mutations/m_removeNews.js","core/graphql/rff/subscriptions/s_newsAdded.js","core/graphql/rff/subscriptions/s_newsUpdated.js","core/graphql/rff/subscriptions/s_newsRemoved.js","components/News.js","core/graphql/rff/queries/q_users.js","core/graphql/rff/fragments/f_groupFragment.js","core/graphql/rff/mutations/m_addGroup.js","core/graphql/rff/mutations/m_updateUser.js","core/graphql/rff/mutations/m_removeUser.js","components/Users.js","core/graphql/rff/queries/q_allGroups.js","core/graphql/rff/mutations/m_updateGroup.js","core/graphql/rff/mutations/m_removeGroup.js","core/graphql/rff/subscriptions/s_groupAdded.js","core/graphql/rff/subscriptions/s_groupUpdated.js","core/graphql/rff/subscriptions/s_groupRemoved.js","components/Groups.js","components/AdminTools.js","components/widgets/Colors.js","components/widgets/Technologies.js","components/widgets/OtherStyles.js","components/About.js","components/Calculate.js","components/Dashboard.js","core/graphql/rff/fragments/f_ingredientFragment.js","core/graphql/rff/queries/q_allCarbs.js","core/graphql/rff/queries/q_allProteins.js","core/graphql/rff/queries/q_allSpices.js","core/graphql/rff/fragments/f_methodFragment.js","core/graphql/rff/queries/q_allMethods.js","core/graphql/rff/fragments/f_dishIngredientFragment.js","core/graphql/rff/fragments/f_dishMethodFragment.js","core/graphql/rff/fragments/f_dishFragment.js","core/graphql/rff/queries/q_allDishes.js","core/graphql/rff/mutations/m_addMethod.js","core/graphql/rff/mutations/m_addIngredient.js","core/graphql/rff/mutations/m_addDish.js","core/graphql/rff/subscriptions/s_dishAdded.js","core/graphql/rff/subscriptions/s_dishUpdated.js","core/graphql/rff/subscriptions/s_dishRemoved.js","core/graphql/rff/subscriptions/s_dishVoted.js","core/graphql/rff/subscriptions/s_ingredientAdded.js","core/graphql/rff/subscriptions/s_ingredientUpdated.js","core/graphql/rff/subscriptions/s_ingredientRemoved.js","core/graphql/rff/subscriptions/s_methodAdded.js","core/graphql/rff/subscriptions/s_methodUpdated.js","core/graphql/rff/subscriptions/s_methodRemoved.js","core/store/reducers/DishyReducer.js","components/Dishy.js","components/LandingPage.js","core/graphql/rff/mutations/m_login.js","components/LoginPage.js","core/store/reducers/CountryReducer.js","core/classes/Country.js","components/widgets/CountryDetails.js","components/OpenCountry.js","core/graphql/rff/mutations/m_addUser.js","components/RegistrationPage.js","core/graphql/rff/fragments/f_groupListFragment.js","core/graphql/rff/queries/q_groupLists.js","core/graphql/rff/fragments/f_privateListFragment.js","core/graphql/rff/queries/q_privateLists.js","core/graphql/rff/fragments/f_taskFragment.js","core/graphql/rff/queries/q_tasks.js","core/graphql/rff/subscriptions/s_taskAdded.js","core/graphql/rff/subscriptions/s_taskUpdated.js","core/graphql/rff/subscriptions/s_taskRemoved.js","core/graphql/rff/subscriptions/s_listAddedGroup.js","core/graphql/rff/subscriptions/s_listAddedPrivate.js","core/graphql/rff/subscriptions/s_listRemovedGroup.js","core/graphql/rff/subscriptions/s_listRemovedPrivate.js","core/graphql/rff/queries/q_groups.js","core/graphql/rff/mutations/m_addTask.js","core/graphql/rff/mutations/m_addListGroup.js","core/graphql/rff/mutations/m_addListPrivate.js","core/graphql/rff/mutations/m_taskPriority.js","core/graphql/rff/mutations/m_taskActivation.js","core/graphql/rff/mutations/m_taskDeactivation.js","core/graphql/rff/mutations/m_removeTask.js","components/widgets/Task.js","components/widgets/List.js","components/Tasker.js","components/Transporter.js","core/services/Connector.js","components/UserSettings.js","App.js","serviceWorker.js","core/store/reducers/RegReducer.js","core/store/Store.js","index.js"],"names":["User","props","this","state","username","role","id","active","removable","propTypes","PropTypes","string","bool","initialState","user","loginFailure","dispatch","a","type","loginSuccess","LoginReducer","action","repository","url","name","theme","application","notification","switchApp","app","handleError","error","message","setTimeout","handleInfo","info","AppReducer","classProvider","element","USER_DETAILS","gql","ME","mapDispatchToProps","switchTheme","localStorage","setItem","logout","connect","appState","loginState","useApolloClient","themes","setTheme","getItem","useEffect","ThemeSelector","className","map","t","key","onClick","to","getRole","getUsername","title","removeItem","countries","countryState","length","GROUP_COUNT","userToken","substring","mode","useQuery","variables","token","data","loading","groupCount","ALL_LIST_COUNT","LIST_COUNT","listCount","allListCount","TASK_COUNT","ALL_TASK_COUNT","countType","taskCount","allTaskCount","DISH_COUNT","dishCount","CARB_COUNT","PROTEIN_COUNT","SPICE_COUNT","carbResult","proteinResult","spiceResult","carbCount","proteinCount","spiceCount","METHOD_COUNT","methodCount","USER_COUNT","userCount","NEWS_DETAILS","NEWS","ADD_NEWS","REMOVE_NEWS","NEWS_ADDED","NEWS_UPDATED","NEWS_REMOVED","client","useSubscription","fetchPolicy","onSubscriptionData","news","subscriptionData","newsAdded","updateCacheWithNews","newsUpdated","newsRemoved","eventType","includedIn","set","object","n","includes","readQuery","query","dataInStore","writeQuery","concat","content","forEach","handleRemoval","mutate","mutation","errorPolicy","then","result","removeNews","handleAddition","document","getElementById","value","category","addNews","Manage","icon","trashAlt","Add","required","minLength","placeholder","saveIcon","USERS","GROUP_DETAILS","ADD_GROUP","UPDATE_USER","userTimes","users","u","ALL_GROUPS","UPDATE_GROUP","REMOVE_GROUP","GROUP_ADDED","GROUP_UPDATED","GROUP_REMOVED","group","groupAdded","updateCacheWithGroup","groupUpdated","groupRemoved","g","allGroups","addGroup","removeGroup","handleActivate","updateGroup","usergroupDeleteOutline","usergroupAddOutline","groups","show","push","frontend","reactIcon","ReduxIcon","graphqlIcon","apollostackIcon","backend","logoNodejs","expressIcon","mongodbIcon","testing","jestIcon","cypressIcon","tools","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","altairIcon","repo","href","f","b","d","dt","useState","value1","setValue1","value2","setValue2","Addition","Number","Subtraction","numbro","format","thousandSeparated","trimMantissa","mantissa","Division","Multiplication","Exponentiation","res1","res2","res3","Cube","RootSquare","Math","sqrt","RootCubic","cbrt","onChange","target","common","link","advanced","INGREDIENT_DETAILS","ALL_CARBS","ALL_PROTEINS","ALL_SPICES","METHOD_DETAILS","ALL_METHODS","DISH_INGREDIENT_DETAILS","DISH_METHOD_DETAILS","DISH_DETAILS","ALL_DISHES","ADD_METHOD","ADD_INGREDIENT","ADD_DISH","DISH_ADDED","DISH_UPDATED","DISH_REMOVED","DISH_VOTED","INGREDIENT_ADDED","INGREDIENT_UPDATED","INGREDIENT_REMOVED","METHOD_ADDED","METHOD_UPDATED","METHOD_REMOVED","carbSearch","proteinSearch","spiceSearch","methodSearch","newDish","newDishCarbs","newDishProteins","newDishSpices","newDishMethods","DishyReducer","carb","protein","spice","method","initDish","resetDish","addDishCarb","addDishProtein","addDishSpice","addDishMethod","dishyState","carbResults","proteinResults","spiceResults","methodResults","dishResults","dish","dishAdded","updateCacheWithDish","dishUpdated","dishVoted","dishRemoved","ingredient","ingredientAdded","updateCacheWithCarb","updateCacheWithProtein","updateCacheWithSpice","ingredientUpdated","methodAdded","updateCacheWithMethod","methodUpdated","methodRemoved","c","allCarbs","p","allProteins","s","allSpices","m","allMethods","allDishes","Loading","Error","Empty","handleAddComponent","event","component","preventDefault","filter","handleNewComponent","addIngredient","addMethod","DishComponentForm","selection","NewCarb","NewMethod","NewProtein","NewSpice","handleNewDish","note","cookingMethods","proteins","carbs","spices","resetDishForm","Dish","view","methods","DishComponents","components","viewType","Component","uses","resultCount","random","floor","setSelection","defaultValue","JSON","parse","disabled","stringify","LOGIN","useMutation","login","password","loginToken","me","countrySearch","selected","setSearch","search","CountryReducer","Country","numericCode","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","timezones","borders","nativeName","currencies","languages","flag","array","subRegion","number","country","Alias","alts","getAltSpellings","Borders","getBorders","Calling","codes","getCallingCodes","Currency","getCurrencies","code","symbol","Domain","domains","getDomain","CountryFlag","Image","size","src","getFlag","Language","getLanguages","l","Timezones","zones","getTimezones","z","getNumericCode","getName","overrideSearch","multi","Flag","getAlpha2","toLowerCase","getNativeName","getCapital","getRegion","getSubregion","getPopulation","getAlpha3","resetSearch","matched","handleSearch","onReset","resetIcon","i","ADD_USER","register","confirm","onSubmit","autoComplete","GROUP_LIST_DETAILS","GROUP_LISTS","PRIVATE_LIST_DETAILS","PRIVATE_LISTS","TASK_DETAILS","TASKS","TASK_ADDED","TASK_UPDATED","TASK_REMOVED","LIST_ADDED_GROUP","LIST_ADDED_PRIVATE","LIST_REMOVED_GROUP","LIST_REMOVED_PRIVATE","GROUPS","ADD_TASK","ADD_LIST_GROUP","ADD_LIST_PRIVATE","TASK_PRIORITY","TASK_ACTIVATION","TASK_DEACTIVATION","REMOVE_TASK","task","status","flagged","flagVariant","flagVariantOutline","priority","handlePriority","handleCompletion","list","expanded","setExpanded","listID","Flagged","TaskEmpty","listType","userShield","usersIcon","chevronUp","chevronDown","setPriority","handleSaveTask","tasks","handleTaskPriority","handleTaskCompletion","handleRemoveTask","tasker","taskerState","taskAdded","updateCacheWithTask","taskUpdated","taskRemoved","listAddedPrivate","updateCacheWithPrivatelist","listRemovedPrivate","listAddedGroup","updateCacheWithGrouplist","listRemovedGroup","handleSaveList","groupID","addListGroup","addListPrivate","addTask","taskPriority","taskDeactivation","taskActivation","handleTaskRemoval","removeTask","privateLists","groupLists","ListsP","AddList","ListsG","groupSelection","setGroupSelection","getCountries","axios","get","UserData","getActive","getRemovable","getId","ChangeUsername","handleUsernameChange","ChangePassword","handlePasswordChange","newPassword","toString","errors","newUsername","initCountries","wsLink","WebSocketLink","uri","process","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","rffLink","split","getMainDefinition","kind","operation","hslLink","rffClient","ApolloClient","cache","InMemoryCache","connectToDevTools","hslClient","body","Connector","response","init","basename","exact","path","render","Calculate","OpenCountry","Boolean","window","location","hostname","match","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","reducers","combineReducers","regState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cce5f413.chunk.js","sourcesContent":["// RFF demo project\n// Country.js\n// creates User-class for application to use - users\n\nimport PropTypes from 'prop-types';\n\nclass User {\n  constructor(props) {\n    this.state = {\n      username: props.username,\n      role: props.role,\n      id: props.id,\n      active: props.active,\n      removable: props.removable\n    };\n  }\n  getUsername() {\n    return this.state.username;\n  }\n  getRole() {\n    return this.state.role;\n  }\n  getId() {\n    return this.state.id;\n  }\n  getActive() {\n    return this.state.active;\n  }\n  getRemovable() {\n    return this.state.removable;\n  }\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  role: PropTypes.string,\n  id: PropTypes.string,\n  active: PropTypes.bool,\n  removable: PropTypes.bool\n};\n\nexport default User;","// RFF demo project\n// LoginReducer.js\n// creates reducer to Redux global state for application to use - login\n\nimport User from '../../classes/User';\n\nconst initialState = {\n  user: null\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'loginSuccess':\n    return {...state, user: new User(action.user)};\n  case 'loginFailure':\n    return {...state};\n  case 'logout':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport const loginFailure = () => {\n  return async dispatch => {\n    dispatch({type: 'loginFailure'});\n  };\n};\nexport const loginSuccess = (user) => {\n  return async dispatch => {\n    dispatch({type: 'loginSuccess', user: user});\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    dispatch({type: 'logout'});\n  };\n};\n\nexport default LoginReducer;","// RFF demo project\n// AppReducer.js\n// creates reducer to Redux global state for application to use - app in general\n\nconst initialState = {\n  repository: {\n    url: 'https://github.com/RedFoxFinn/rff-project',\n    name: 'rff-demo-project'\n  },\n  theme: 'light',\n  application: 'Home',\n  notification: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'fu':\n    return {...state};\n  case 'switchApplication':\n    return {...state, application: action.application};\n  case 'switchTheme':\n    return {...state, theme: action.theme};\n  case 'setNotification':\n    return {...state, notification: action.notification};\n  case 'resetNotification':\n    return {...state, notification: null};\n  default:\n    return state;\n  }\n};\n\nexport const switchApp = (app) => {\n  return async dispatch => {\n    dispatch({\n      type: 'switchApplication', application: app\n    });\n  };\n};\n\nexport const switchTheme = (theme) => {\n  return async dispatch => {\n    localStorage.setItem('rffTheme', theme);\n    dispatch({\n      type: 'switchTheme', theme: theme\n    });\n  };\n};\n\nexport const handleError = (error) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'error', message: error}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\nexport const handleInfo = (info) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNotification', notification: {type: 'info', message: info}\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'resetNotification'\n      });\n    }, 4000);\n  };\n};\n\nexport default AppReducer;","// RFF demo project\n// classProvider.js\n// provides predefined CSS-classes for application to use based on selected theme\n\nconst classProvider = (theme, element) => {\n  if (theme === 'dark') {\n    switch(element) {\n    case 'news': return 'newsDa';\n    case 'tableCell': return 'tableCellDa';\n    case 'table': return 'tableDa';\n    case 'tableRow': return 'tableRowDa';\n    case 'navMenu': return 'navMenuDa';\n    case 'navSubMenu': return 'navSubMenuDa';\n    case 'navButton': return 'navButtonDa';\n    case 'navSubButton': return 'navSubButtonDa';\n    case 'navContent': return 'navContentDa';\n    case 'navSubContent': return 'navSubContentDa';\n    case 'heading': return 'headingDa';\n    case 'formElement': return 'formElementDa';\n    case 'calculateElement': return 'formElementDa';\n    case 'calculateResult': return 'calculateResultDa';\n    case 'technologyElement': return 'technologyElementDa';\n    case 'text': return 'textDa';\n    case 'loginButton': return 'loginButtonDa';\n    case 'loginContent': return 'loginContentDa';\n    case 'loginMenu': return 'loginMenuDa';\n    case 'link': return 'linkDa';\n    case 'description': return 'descriptionDa';\n    case 'countrySearch': return 'searchElementDa';\n    case 'countrySearchCancel': return 'searchCancelDa';\n    case 'countryDetails': return 'countryDetailsDa';\n    case 'dishyElement': return 'dishyElementDa';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsDa';\n    case 'linkButton': return 'linkButtonDa';\n    case 'notificationInfo': return 'notificationInfoDa';\n    case 'notificationError': return 'notificationErrorDa';\n    case 'notificationNull': return 'notificationNullDa';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionDa';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'dashTile': return 'dashTile';\n    case 'listHeader': return 'listHeaderDa';\n    case 'listDescription': return 'listDescriptionDa';\n    case 'task': return 'taskDa';\n    case 'selector': return 'selectorDa';\n    case 'selected': return 'selectedDa';\n    case 'activator': return 'activatorDa';\n    case 'deactivator': return 'deactivatorDa';\n    case 'field': return 'fieldDa';\n    case 'noteArea': return 'noteAreaDa';\n    default: return '';\n    }\n  } else {\n    switch(element) {\n    case 'news': return 'newsLi';\n    case 'tableCell': return 'tableCellLi';\n    case 'table': return 'tableLi';\n    case 'tableRow': return 'tableRowLi';\n    case 'navMenu': return 'navMenuLi';\n    case 'navSubMenu': return 'navSubMenuLi';\n    case 'navButton': return 'navButtonLi';\n    case 'navSubButton': return 'navSubButtonLi';\n    case 'navContent': return 'navContentLi';\n    case 'navSubContent': return 'navSubContentLi';\n    case 'heading': return 'headingLi';\n    case 'formElement': return 'formElementLi';\n    case 'calculateElement': return 'formElementLi';\n    case 'calculateResult': return 'calculateResultLi';\n    case 'technologyElement': return 'technologyElementLi';\n    case 'text': return 'textLi';\n    case 'loginButton': return 'loginButtonLi';\n    case 'loginContent': return 'loginContentLi';\n    case 'loginMenu': return 'loginMenuLi';\n    case 'link': return 'linkLi';\n    case 'description': return 'descriptionLi';\n    case 'countrySearch': return 'searchElementLi';\n    case 'countrySearchCancel': return 'searchCancelLi';\n    case 'countryDetails': return 'countryDetailsLi';\n    case 'dishyElement': return 'dishyElementLi';\n    case 'stopContainer': return 'stopContainer';\n    case 'stopDetails': return 'stopDetailsLi';\n    case 'linkButton': return 'linkButtonLi';\n    case 'notificationInfo': return 'notificationInfoLi';\n    case 'notificationError': return 'notificationErrorLi';\n    case 'notificationNull': return 'notificationNullLi';\n    case 'tile': return 'tile';\n    case 'tileDescription': return 'tileDescriptionLi';\n    case 'tileLoading': return 'tileLoading';\n    case 'tileError': return 'tileError';\n    case 'listHeader': return 'listHeaderLi';\n    case 'listDescription': return 'listDescriptionLi';\n    case 'task': return 'taskLi';\n    case 'selector': return 'selectorLi';\n    case 'selected': return 'selectedLi';\n    case 'activator': return 'activatorLi';\n    case 'deactivator': return 'deactivatorLi';\n    case 'field': return 'fieldLi';\n    case 'noteArea': return 'noteAreaLi';\n    default: return '';\n    }\n  }\n};\n\nexport default classProvider;","\nimport gql from 'graphql-tag';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    username\n    role\n    removable\n    active\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ME = gql`\n  query me($token: String!) {\n    me(token: $token) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// Navigation.js\n// React component that renders navigation-section of the webapp\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {handleError, handleInfo, switchApp, switchTheme} from '../core/store/reducers/AppReducer';\nimport {logout, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/navigation.css';\nimport '../core/style/global.css';\n\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {InlineIcon} from '@iconify/react';\nimport loginOutlined from '@iconify/icons-ant-design/login-outlined';\nimport logoutOutlined from '@iconify/icons-ant-design/logout-outlined';\nimport settingOutlined from '@iconify/icons-ant-design/setting-outlined';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  switchApp, switchTheme, logout, loginSuccess, handleError, handleInfo\n};\n\nconst Navigation = (props) => {\n  const client = useApolloClient();\n  const themes = ['light', 'dark'];\n  const theme = props.appState.theme;\n  const setTheme = localStorage.getItem('rffTheme');\n\n  // hook that handles theme setting if localstorage already has set theme for webapp\n  useEffect(() => {\n    setTheme !== null && props.switchTheme(setTheme);\n  }, []);\n\n  // module that renders main menu of the webapp\n  const MenuModule = () => {\n    return (\n      <div className={classProvider(theme, 'navMenu')}>\n        <button id='rffMenu' className={classProvider(theme, 'navButton')}>Menu</button>\n        <div className={classProvider(theme, 'navContent')}>\n          <Link to='/' onClick={() => props.switchApp('Home')}>Home</Link>\n          <Link to='/dashboard' onClick={() => props.switchApp('Dashboard')}>Dashboard</Link>\n          <Link to='/calculate' onClick={() => props.switchApp('Calculate')}>Calculate</Link>\n          <Link to='/countries' onClick={() => props.switchApp('OpenCountry')}>OpenCountry</Link>\n          <Link to='/dishy' onClick={() => props.switchApp('Dishy')}>Dishy</Link>\n          {props.loginState.user && <Link to='/tasker' onClick={() => props.switchApp('Tasker')}>Tasker</Link>}\n          <Link to='/transit' onClick={() => props.switchApp('Transporter')}>Transporter</Link>\n          {props.loginState.user && (props.loginState.user.getRole() === 'admin' || props.loginState.user.getRole() === 'owner')\n            && <Link to='/admin' onClick={() => props.switchApp('Admin tools')}>Admin tools</Link>}\n          <Link to='/about' onClick={() => props.switchApp('About')}>About</Link>\n          <ThemeSelector/>\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles theme selection\n  const ThemeSelector = () => {\n    return (\n      <div className={classProvider(theme, 'navSubMenu')}>\n        <button id='rffTheme' className={classProvider(theme, 'navSubButton')}>\n          <strong>{props.appState.theme}</strong> theme selected\n        </button>\n        <div className={classProvider(theme, 'navSubContent')}>\n          {themes.map((t) =>\n            <a key={t} onClick={() => props.switchTheme(t)}>{t}</a>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // module that handles rendering login session menu & actions\n  const LoginModule = () => {\n    if (!localStorage.getItem('rffUserToken')) {\n      return (\n        <div className={classProvider(theme, 'loginMenu')}>\n          <Link id='rffLogin' to='/login' title='login' onClick={() => props.switchApp('Login')}>Login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(theme, 'navMenu')}>\n          <button id='rffUsermenu' type='button' className={classProvider(theme, 'navButton')}>\n            {props.loginState.user !== null ? props.loginState.user.getUsername() : null}\n          </button>\n          <div className={classProvider(theme, 'navContent')}>\n            <Link id='rffUsersettings' to='/user' title='settings' onClick={() => props.switchApp('UserSettings')}>Settings</Link>\n            <Link id='rffLogout' to='/' title='logout' onClick={() => logout()}>Logout</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // login session helper function\n  function logout() {\n    props.logout();\n    localStorage.removeItem('rffUserToken');\n    props.handleInfo('logged out');\n    props.switchApp('Home');\n  }\n\n  // module that handles rendering notifications\n  const NotificationModule = () => {\n    const notification = props.appState.notification;\n\n    if (notification && notification.type === 'info') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationInfo')}>{notification.message}</h4>\n        </div>\n      );\n    } else if (notification && notification.type === 'error') {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationError')}>{notification.message}</h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='commonElements'>\n          <h4 id='notification' className={classProvider(theme, 'notificationNull')}>{' '}</h4>\n        </div>\n      );\n    }\n  };\n\n  return(\n    <div className='navRow'>\n      <MenuModule/>\n      <NotificationModule/>\n      <LoginModule/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","// RFF demo project\n// CountryCount.js\n// React component that renders country counter based on available country information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries\n  };\n};\n\nconst CountryCount = (props) => {\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.theme, 'tileDescription')}>\n        <strong>{props.countries.length}</strong> countries information available</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(CountryCount);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_COUNT = gql`\n  query groupCount($token: String!, $mode: String) {\n    groupCount(token: $token, mode: $mode)\n  }\n`;","// RFF demo project\n// GroupCount.js\n// React component that renders group counter based on user groups in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {GROUP_COUNT} from '../../core/graphql/rff/queries/q_groupCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst GroupCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.groupCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> group accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.groupCount}</strong> groups accessible</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(GROUP_COUNT, {\n      variables: {\n        token: userToken,\n        mode: 'admin'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>all {data.groupCount}</strong> groups accessible\n        </p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading group count\n        </p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading group count\n      </p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(GroupCount);","\nimport gql from 'graphql-tag';\n\nexport const ALL_LIST_COUNT = gql`\n  query allListCount($token: String!) {\n    allListCount(token: $token)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const LIST_COUNT = gql`\n  query listCount($token: String!) {\n    listCount(token: $token)\n  }\n`;","// RFF demo project\n// ListCount.js\n// React component that renders list counter based on available task list information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport {useQuery} from '@apollo/react-hooks';\nimport '../../core/style/global.css';\n\nimport {ALL_LIST_COUNT} from '../../core/graphql/rff/queries/q_allListCount';\nimport {LIST_COUNT} from '../../core/graphql/rff/queries/q_listCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst ListCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading task list count</p>;\n    } else {\n      if (error) {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading task list\n          count</p>;\n      } else if (data) {\n        return data.listCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task list accessible</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.listCount}</strong> task lists accessible</p>;\n      }\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_LIST_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (loading) {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task list count</p>;\n    } else {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allListCount}</strong> task lists in database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task list count</p>;\n      }\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(ListCount);","\nimport gql from 'graphql-tag';\n\nexport const TASK_COUNT = gql`\n  query taskCount($token: String!, $countType: String!) {\n    taskCount(token: $token, countType: $countType)\n  }\n`;","\nimport gql from 'graphql-tag';\n\nexport const ALL_TASK_COUNT = gql`\n  query allTaskCount($token: String!) {\n    allTaskCount(token: $token)\n  }\n`;","// RFF demo project\n// CountryCount.js\n// React component that renders task counter based on available task information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nimport {TASK_COUNT} from '../../core/graphql/rff/queries/q_taskCount';\nimport {ALL_TASK_COUNT} from '../../core/graphql/rff/queries/q_allTaskCount';\nimport {useQuery} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TaskCount = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n\n  const Count = () => {\n    const {data, error, loading} = useQuery(TASK_COUNT, {\n      variables: {\n        token: userToken,\n        countType: 'total'\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return data.taskCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> task listed in accessible lists</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.taskCount}</strong> tasks listed in accessible lists</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n  const CountAdmin = () => {\n    const {data, error, loading} = useQuery(ALL_TASK_COUNT, {\n      variables: {\n        token: userToken\n      }\n    });\n    if (!loading) {\n      if (!error) {\n        return <p className={classProvider(props.appState.theme, 'tileDescription')}>\n          <strong>{data.allTaskCount}</strong> tasks listed in the database</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading task count</p>;\n      }\n    } else {\n      return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n        loading task count</p>;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          {props.mode !== 'admin' ? <Count/> : <CountAdmin/>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TaskCount);","\nimport gql from 'graphql-tag';\n\nexport const DISH_COUNT = gql`\n  query {\n    dishCount\n  }\n`;","// RFF demo project\n// DishCount.js\n// React component that renders dish counter based on available dish information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {DISH_COUNT} from '../../core/graphql/rff/queries/q_dishCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst DishCount = (props) => {\n  const {data, error, loading} = useQuery(DISH_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.dishCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dish available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.dishCount}</strong> dishes available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading dish count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>loading dish count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DishCount);","\n\nimport gql from 'graphql-tag';\n\nexport const CARB_COUNT = gql`\n  query {\n    carbCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const PROTEIN_COUNT = gql`\n  query {\n    proteinCount\n  }\n`;","\n\nimport gql from 'graphql-tag';\n\nexport const SPICE_COUNT = gql`\n  query {\n    spiceCount\n  }\n`;","// RFF demo project\n// IngredientCount.js\n// React component that renders ingredient counter based on available ingredient information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {CARB_COUNT} from '../../core/graphql/rff/queries/q_carbCount.js';\nimport {PROTEIN_COUNT} from '../../core/graphql/rff/queries/q_proteinCount.js';\nimport {SPICE_COUNT} from '../../core/graphql/rff/queries/q_spiceCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst IngredientCount = (props) => {\n  const carbResult = useQuery(CARB_COUNT);\n  const proteinResult = useQuery(PROTEIN_COUNT);\n  const spiceResult = useQuery(SPICE_COUNT);\n  let data = 0;\n\n  const Count = () => {\n    if (!carbResult.loading && !proteinResult.loading && !spiceResult.loading) {\n      if (carbResult.data && proteinResult.data && spiceResult.data) {\n        data = carbResult.data.carbCount + proteinResult.data.proteinCount + spiceResult.data.spiceCount;\n        return data === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredient available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data}</strong> ingredients available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading ingredient count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading ingredient count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(IngredientCount);","\nimport gql from 'graphql-tag';\n\nexport const METHOD_COUNT = gql`\n  query {\n    methodCount\n  }\n`;","// RFF demo project\n// MethodCount.js\n// React component that renders method counter based on available cooking method information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {METHOD_COUNT} from '../../core/graphql/rff/queries/q_methodCount.js';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst MethodCount = (props) => {\n  const {data, error, loading} = useQuery(METHOD_COUNT);\n\n  const Count = () => {\n    if (!loading) {\n      if (!error) {\n        return data.methodCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking method available</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>\n            <strong>{data.methodCount}</strong> cooking methods available</p>;\n      } else {\n        return <p className={classProvider(props.appState.theme, 'tileError')}>\n          error occurred while loading cooking method count</p>;\n      }\n    }\n    return <p className={classProvider(props.appState.theme, 'tileLoading')}>\n      loading cooking method count</p>;\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(MethodCount);","// RFF demo project\n// TrackedStopsCount.js\n// React component that renders stop counter based on available stop tracking information\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst TrackedStopsCount = (props) => {\n  const data = 0;\n\n  const Count = () => {\n    return (\n      <p className={classProvider(props.appState.theme, 'tileDescription')}><strong>{data}</strong> stops timetables tracked</p>\n    );\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(TrackedStopsCount);","\nimport gql from 'graphql-tag';\n\nexport const USER_COUNT = gql`\n  query userCount($token: String!) {\n    userCount(token: $token)\n  }\n`;","// RFF demo project\n// UserCount.js\n// React component that renders user counter based on available information\n\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport {useApolloClient, useQuery} from '@apollo/react-hooks';\n\nimport {USER_COUNT} from '../../core/graphql/rff/queries/q_userCount';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst UserCount = (props) => {\n  const userCount = useQuery(USER_COUNT, {\n    variables: {\n      token: localStorage.getItem('rffUserToken').substring(7)\n    }\n  });\n\n  const Count = () => {\n    if (props.mode === 'admin') {\n      if (userCount.loading) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileLoading')}>loading user count</p>\n        );\n      } else if (userCount.error) {\n        return (\n          <p className={classProvider(props.appState.theme, 'tileError')}>error occurred while loading data</p>\n        );\n      } else if (userCount.data) {\n        return userCount.data.userCount === 1\n          ? <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> user</p>\n          : <p className={classProvider(props.appState.theme, 'tileDescription')}>application has <strong>{userCount.data.userCount}</strong> users</p>;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return(\n    <div className='tile'>\n      <div className='app'>\n        <div className='container'>\n          <Count/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserCount);","\nimport gql from 'graphql-tag';\n\nexport const NEWS_DETAILS = gql`\n  fragment NewsDetails on News {\n    content\n    category\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS = gql`\n  query news {\n    news {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const ADD_NEWS = gql`\n  mutation addNews($token: String!, $content: String!, $category: String!) {\n    addNews(token: $token, content: $content, category: $category) {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const REMOVE_NEWS = gql`\n  mutation removeNews($token: String!, $id: String!) {\n    removeNews(token: $token, id: $id) {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_ADDED = gql`\n  subscription {\n    newsAdded {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_UPDATED = gql`\n  subscription {\n    newsUpdated {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {NEWS_DETAILS} from '../fragments/f_newsFragment';\n\nexport const NEWS_REMOVED = gql`\n  subscription {\n    newsRemoved {\n      ...NewsDetails\n    }\n  }\n  ${NEWS_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useSubscription, useApolloClient} from '@apollo/react-hooks';\nimport {NEWS} from '../core/graphql/rff/queries/q_news';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport saveIcon from '@iconify/icons-fa-regular/save';\nimport trashAlt from '@iconify/icons-fa-regular/trash-alt';\nimport {ADD_NEWS} from '../core/graphql/rff/mutations/m_addNews';\nimport {REMOVE_NEWS} from '../core/graphql/rff/mutations/m_removeNews';\nimport {NEWS_ADDED} from '../core/graphql/rff/subscriptions/s_newsAdded';\nimport {NEWS_UPDATED} from '../core/graphql/rff/subscriptions/s_newsUpdated';\nimport {NEWS_REMOVED} from '../core/graphql/rff/subscriptions/s_newsRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst News = (props) => {\n  let userToken;\n  const client = useApolloClient();\n  useSubscription(NEWS_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsAdded;\n      updateCacheWithNews('added', news);\n    }\n  });\n  useSubscription(NEWS_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsUpdated;\n      updateCacheWithNews('updated', news);\n    }\n  });\n  useSubscription(NEWS_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const news = subscriptionData.data.newsRemoved;\n      updateCacheWithNews('removed', news);\n    }\n  });\n\n  const {data, error, loading} = useQuery(NEWS);\n\n  const updateCacheWithNews = async (eventType, news) => {\n    const includedIn = (set, object) => set.map(n => n.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: NEWS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {news: dataInStore.news.concat(news)}\n        });\n        props.handleInfo(`News added: ${news.content}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {\n            news: dataInStore.news.map(n => {\n              return n.id === news.id ? news : n;\n            })}\n        });\n        props.handleInfo(`News updated: ${news.content}`);\n      }\n      break;\n    case 'removed':\n      if(includedIn(dataInStore.news, news)) {\n        await client.writeQuery({\n          query: NEWS,\n          data: {\n            news: dataInStore.news.forEach(n => {\n              if (n.id !== news.id) return n;\n            })}\n        });\n        props.handleInfo(`News removed: ${news.content}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const handleRemoval = async ({id, content}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_NEWS,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithNews('removed', data.removeNews);\n      } else {\n        props.handleError(`Error occurred with task: cannot remove ${content}`);\n      }\n    });\n  };\n  const handleAddition = async () => {\n    const variables = {\n      token: userToken,\n      content: document.getElementById('addNewsContent').value,\n      category: document.getElementById('addNewsCategory').value\n    };\n    await client.mutate({\n      mutation: ADD_NEWS,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithNews('added', data.addNews);\n        document.getElementById('addNewsContent').value = '';\n        document.getElementById('addNewsCategory').value = '';\n      } else {\n        props.handleError(`Error occurred with news: cannot add ${variables.content}`);\n      }\n    });\n  };\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageNews = () => {\n    const news = data.news;\n    if (props.mode === 'admin') {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return news.length > 0\n        ? <>\n          <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n          <table className={classProvider(props.theme, 'table')}>\n            <thead>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <th className={classProvider(props.theme, 'tableCell')}>content</th>\n                <th className={classProvider(props.theme, 'tableCell')}>category</th>\n                <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {news.map(n => {\n                return <Manage key={n.id} news={n}/>;\n              })}\n              <Add/>\n            </tbody>\n          </table>\n        </> : <>\n          <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n          <p className={classProvider(props.theme, 'news')}>no news</p>\n        </>;\n    } else {\n      return news.length > 0\n        ? <>\n          <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n          <ul>\n            {news.map((n) => {\n              return <li key={n.id} className={classProvider(props.theme, 'news')}>{n.content}</li>;\n            })}</ul>\n        </> : <>\n          <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n          <p className={classProvider(props.theme, 'news')}>no news</p>\n        </>;\n    }\n  };\n\n  const Manage = ({news}) => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>{news.content}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{news.category}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='remove news' className={classProvider(props.theme, 'deactivator')}\n            onClick={() => handleRemoval(news)}><InlineIcon icon={trashAlt}/></button></td>\n      </tr>\n    );\n  };\n  const Add = () => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addNewsContent' type='text' required minLength={4} placeholder='news content'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addNewsCategory' type='text' required minLength={3} placeholder='news category'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='save news' className={classProvider(props.theme, 'activator')}\n            onClick={() => handleAddition()}><InlineIcon icon={saveIcon}/></button></td>\n      </tr>\n    );\n  };\n\n  return (\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageNews/>}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(News);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const USERS = gql`\n  query users($token: String!, $active: Boolean, $username: String, $role: String) {\n    users(token: $token, active: $active, username: $username, role: $role) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const GROUP_DETAILS = gql`\n  fragment GroupDetails on Group {\n    title\n    active\n    removable\n    creator {\n      username\n    }\n    id\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const ADD_GROUP = gql`\n  mutation addGroup($token: String!, $title: String!) {\n    addGroup(token: $token, title: $title) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($token: String!, $newUsername: String, $newPassword: String, $password: String!) {\n    updateUser(newUsername: $newUsername, newPassword: $newPassword, token: $token, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const REMOVE_USER = gql`\n  mutation removeUser($token: String!, $id: String!) {\n    removeUser(token: $token, id: $id) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useApolloClient} from '@apollo/react-hooks';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport usersCog from '@iconify/icons-fa-solid/users-cog';\nimport userCog from '@iconify/icons-fa-solid/user-cog';\nimport userTimes from '@iconify/icons-fa-solid/user-times';\nimport saveIcon from '@iconify/icons-fa-regular/save';\nimport trashAlt from '@iconify/icons-fa-regular/trash-alt';\nimport {USERS} from '../core/graphql/rff/queries/q_users';\nimport {ADD_GROUP} from '../core/graphql/rff/mutations/m_addGroup';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\nimport {REMOVE_USER} from '../core/graphql/rff/mutations/m_removeUser';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst Users = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const client = useApolloClient();\n  const {data, error, loading} = useQuery(USERS, {\n    variables: {token: userToken}\n  });\n\n  const handleRemoval = async ({id, username}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_USER,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        props.handleInfo(`User removed: ${username}`);\n      } else {\n        props.handleError(`Error occurred with user: cannot remove ${username}`);\n      }\n    });\n  };\n  /*const handleEdit = async () => {\n    const variables = {\n      token: userToken,\n      content: document.getElementById('addNewsContent').value,\n      category: document.getElementById('addNewsCategory').value\n    };\n    await client.mutate({\n      mutation: ADD_NEWS,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithNews('added', data.addNews);\n        document.getElementById('addNewsContent').value = '';\n        document.getElementById('addNewsCategory').value = '';\n      } else {\n        props.handleError(`Error occurred with news: cannot add ${variables.content}`);\n      }\n    });\n  };*/\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>News:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageUsers = () => {\n    const users = data.users;\n    return users.length > 0\n      ? <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage users:</h4>\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>username</th>\n              <th className={classProvider(props.theme, 'tableCell')}>role</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change role</th>\n              <th className={classProvider(props.theme, 'tableCell')}>activated</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change status</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(u => {\n              return <Manage key={u.id} user={u}/>;\n            })}\n          </tbody>\n        </table>\n      </> : <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage news:</h4>\n        <p className={classProvider(props.theme, 'news')}>no news</p>\n      </>;\n  };\n\n  const Manage = ({user}) => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>{user.username}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{user.role}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button className={user.role === 'user'\n            ? classProvider(props.theme, 'activator') : classProvider(props.theme, 'deactivator')}>\n            {user.role === 'user' ? 'promote' : 'demote'}</button>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>{user.active ? 'true' : 'false'}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button className={user.role === 'user'\n            ? classProvider(props.theme, 'deactivator') : classProvider(props.theme, 'activator')}>\n            {user.active ? 'deactivate' : 'activate'}</button>\n        </td>\n        {user.removable && <td className={classProvider(props.theme, 'tableCell')}>\n          <button title='remove user' className={classProvider(props.theme, 'deactivator')}>\n            <InlineIcon icon={userTimes}/></button></td>}\n      </tr>\n    );\n  };\n\n  return props.user.getRole() === 'admin' || props.user.getRole() === 'owner'\n    ?\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageUsers/>}\n    </>\n    : null;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const ALL_GROUPS = gql`\n  query allGroups($token: String!) {\n    allGroups(token: $token) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const UPDATE_GROUP = gql`\n  mutation updateGroup($token: String!, $id: String!, $title: String, $active: Boolean) {\n    updateGroup(token: $token, id: $id, title: $title, active: $active) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const REMOVE_GROUP = gql`\n  mutation removeGroup($token: String!, $id: String!) {\n    removeGroup(token: $token, id: $id) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_ADDED = gql`\n  subscription {\n    groupAdded {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_UPDATED = gql`\n  subscription {\n    groupUpdated {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUP_REMOVED = gql`\n  subscription {\n    groupRemoved {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery, useApolloClient, useSubscription} from '@apollo/react-hooks';\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport {InlineIcon} from '@iconify/react';\nimport usersCog from '@iconify/icons-fa-solid/users-cog';\nimport usersIcon from '@iconify/icons-fa-solid/users';\nimport usergroupDeleteOutline from '@iconify/icons-ant-design/usergroup-delete-outline';\nimport usergroupAddOutline from '@iconify/icons-ant-design/usergroup-add-outline';\nimport {ALL_GROUPS} from '../core/graphql/rff/queries/q_allGroups';\nimport {ADD_GROUP} from '../core/graphql/rff/mutations/m_addGroup';\nimport {UPDATE_GROUP} from '../core/graphql/rff/mutations/m_updateGroup';\nimport {REMOVE_GROUP} from '../core/graphql/rff/mutations/m_removeGroup';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {GROUP_ADDED} from '../core/graphql/rff/subscriptions/s_groupAdded';\nimport {GROUP_UPDATED} from '../core/graphql/rff/subscriptions/s_groupUpdated';\nimport {GROUP_REMOVED} from '../core/graphql/rff/subscriptions/s_groupRemoved';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\nconst mapDispatchToProps = {\n  handleInfo, handleError\n};\n\nconst Groups = (props) => {\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const client = useApolloClient();\n  const {data, error, loading} = useQuery(ALL_GROUPS, {\n    variables: {token: userToken}\n  });\n\n  useSubscription(GROUP_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupAdded;\n      updateCacheWithGroup('added', group);\n    }\n  });\n  useSubscription(GROUP_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupUpdated;\n      updateCacheWithGroup('updated', group);\n    }\n  });\n  useSubscription(GROUP_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const group = subscriptionData.data.groupRemoved;\n      updateCacheWithGroup('removed', group);\n    }\n  });\n\n  const updateCacheWithGroup = async (eventType, group) => {\n    const includedIn = (set, object) => set.map(g => g.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: ALL_GROUPS, variables: {\n        token: userToken}});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allGroups, group)) {\n        await client.writeQuery({\n          query: ALL_GROUPS,\n          variables: {\n            token: userToken,\n          },\n          data: {allGroups: dataInStore.allGroups.concat(group)}\n        });\n        props.handleInfo(`Group added: ${group.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allGroups, group)) {\n        await client.writeQuery({\n          query: ALL_GROUPS,\n          variables: {\n            token: userToken,\n          },\n          data: {\n            allGroups: dataInStore.allGroups.map(g => {\n              return g.id === group.id ? group : g;\n            })}\n        });\n        props.handleInfo(`Group updated: ${group.title}`);\n      }\n      break;\n    case 'removed':\n      if(includedIn(dataInStore.allGroups, group)) {\n        await client.writeQuery({\n          query: ALL_GROUPS,\n          variables: {\n            token: userToken,\n          },\n          data: {\n            allGroups: dataInStore.allGroups.forEach(g => {\n              if (g.id !== group.id) return g;\n            })}\n        });\n        props.handleInfo(`Group removed: ${group.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const handleAddition = async () => {\n    const variables = {\n      token: userToken,\n      title: document.getElementById('addGroupTitle').value\n    };\n    await client.mutate({\n      mutation: ADD_GROUP,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithGroup('added', data.addGroup);\n        document.getElementById('addGroupTitle').value = '';\n      } else {\n        props.handleError(`Error occurred with group: cannot create ${variables.title}`);\n      }\n    });\n  };\n  const handleRemoval = async ({id, title}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_GROUP,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithGroup('removed', data.removeGroup);\n      } else {\n        props.handleError(`Error occurred with group: cannot remove ${title}`);\n      }\n    });\n  };\n  const handleActivate = async ({id, active, title}) => {\n    const variables = {\n      token: userToken,\n      id: id,\n      active: !active\n    };\n    await client.mutate({\n      mutation: UPDATE_GROUP,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithGroup('updated', data.updateGroup);\n      } else {\n        props.handleError(`Error occurred with group: cannot update ${title}`);\n      }\n    });\n  };\n\n  const Error = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>Groups:</h4>\n      <p className={classProvider(props.theme, 'tileError')}>Error occurred</p>\n    </>;\n  };\n  const Loading = () => {\n    return <>\n      <h4 className={classProvider(props.theme, 'description')}>Groups:</h4>\n      <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n    </>;\n  };\n\n  const ManageUsers = () => {\n    const groups = data.allGroups;\n    return groups.length > 0\n      ? <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage groups:</h4>\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>title</th>\n              <th className={classProvider(props.theme, 'tableCell')}>active</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change status</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {groups.map(g => {\n              return <Manage key={g.id} group={g}/>;\n            })}\n            <Add/>\n          </tbody>\n        </table>\n      </> : <>\n        <h4 className={classProvider(props.theme, 'description')}>Manage groups:</h4>\n        <p className={classProvider(props.theme, 'news')}>no groups</p>\n      </>;\n  };\n\n  const Manage = ({group}) => {\n    return (\n      <tr id={group.id} className={classProvider(props.theme, 'tableRow')}>\n        <td id={group.id + ':title'} className={classProvider(props.theme, 'tableCell')}>{group.title}</td>\n        <td id={group.id + ':status'} className={classProvider(props.theme, 'tableCell')}>{group.active ? 'true' : 'false'}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button id={group.id + ':statusButton'} onClick={() => handleActivate(group)} className={group.active\n            ? classProvider(props.theme, 'deactivator') : classProvider(props.theme, 'activator')}>\n            {group.active ? 'deactivate' : 'activate'}</button>\n        </td>\n        {group.removable && <td className={classProvider(props.theme, 'tableCell')}>\n          <button id={group.id + ':removeButton'} title='remove group' className={classProvider(props.theme, 'deactivator')}\n            onClick={() => handleRemoval(group)}>\n            <InlineIcon icon={usergroupDeleteOutline}/></button></td>}\n      </tr>\n    );\n  };\n\n  const Add = () => {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <input id='addGroupTitle' type='text' required minLength={3} placeholder='group title'\n            className={classProvider(props.theme, 'formElement')}/>\n        </td>\n        <td className={classProvider(props.theme, 'tableCell')}>{' '}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>{' '}</td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button id='saveGroup' title='save group' className={classProvider(props.theme, 'activator')}\n            onClick={() => handleAddition()}><InlineIcon icon={usergroupAddOutline}/></button></td>\n      </tr>\n    );\n  };\n\n  return props.user.getRole() === 'admin' || props.user.getRole() === 'owner'\n    ?\n    <>\n      {error && <Error/>}\n      {loading && <Loading/>}\n      {data && <ManageUsers/>}\n    </>\n    : null;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);","// RFF demo project\n// AdminTools.js\n// React component that renders webapp administrative tools\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport CountryCount from './widgets/CountryCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport TaskCount from './widgets/TaskCount';\nimport DishCount from './widgets/DishCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport MethodCount from './widgets/MethodCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport UserCount from './widgets/UserCount';\nimport {Redirect} from 'react-router-dom';\nimport News from './News';\nimport Users from './Users';\nimport Groups from './Groups';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    user: state.loginState.user\n  };\n};\n\nconst AdminTools = (props) => {\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <ListCount mode='admin'/>\n        <TaskCount mode='admin'/>\n        <GroupCount mode='admin'/>\n        <UserCount mode='admin'/>\n        <TrackedStopsCount mode='admin'/>\n      </div>\n    );\n  };\n\n  return props.show && props.user && (props.user.getRole() === 'admin' || props.user.getRole() === 'owner')\n    ? <div className='app'>\n      <div className='commonElements'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>App statistics:</h4>\n        <WidgetsCommon/>\n        <WidgetsAdvanced/>\n        <News mode='admin'/>\n        <Users/>\n        <Groups/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps)(AdminTools);","// RFF demo project\n// Colors.js\n// React component that renders color palette available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Colors = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used color palette:</h4>\n        <div className='appElements'>\n          <div className='peru'/>\n          <div className='gainsboro'/>\n          <div className='darkslategrey'/>\n          <div className='yellowgreen'/>\n          <div className='reactblue'/>\n          <div className='slateblue'/>\n          <div className='deeppink'/>\n        </div>\n        <div className='appElements'>\n          <div className='seagreen'/>\n          <div className='googleblue'/>\n          <div className='googlered'/>\n          <div className='googleyellow'/>\n          <div className='googlegreen'/>\n          <div className='amazonorange'/>\n          <div className='heroku'/>\n        </div>\n        <div className='appElements'>\n          <div className='bus'/>\n          <div className='citybike'/>\n          <div className='tram'/>\n          <div className='train'/>\n          <div className='metro'/>\n          <div className='jokerilightrail'/>\n          <div className='ferry'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslpink'/>\n          <div className='hslpinklight'/>\n          <div className='hslgreen'/>\n          <div className='hslgreenlight'/>\n          <div className='hslwarning'/>\n          <div className='hslhighlight'/>\n          <div className='ferrylight'/>\n        </div>\n        <div className='appElements'>\n          <div className='hslblue'/>\n          <div className='digitransit'/>\n          <div className='dgray'/>\n          <div className='gray'/>\n          <div className='lgray'/>\n          <div className='vlgray'/>\n          <div className='jbamber'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbsiena'/>\n          <div className='jbcrimson'/>\n          <div className='jbcarmine'/>\n          <div className='jbfuchsia'/>\n          <div className='jbmauve'/>\n          <div className='jblilac'/>\n          <div className='jbpurple'/>\n        </div>\n        <div className='appElements'>\n          <div className='jbskyblue'/>\n          <div className='jbgreen'/>\n          <div className='jblemon'/>\n          <div className='slackblue'/>\n          <div className='slackgreen'/>\n          <div className='slackyellow'/>\n          <div className='slackred'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Colors);","// RFF demo project\n// Technologies.js\n// React component that renders information of used technologies in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Icon, InlineIcon} from '@iconify/react';\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport altairIcon from '@iconify/icons-logos/altair';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>},\n    {name: 'Altair', url: 'https://altair.sirmuel.design/', icon: <InlineIcon icon={altairIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>;\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>;\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>;\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>;\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>;\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>;\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Repository:</h4>\n        <Repository/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack:</h4>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        <Front/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        <Back/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        <Data/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        <Testing/>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);","// RFF demo project\n// OtherStyles.js\n// React component that renders information of miscellaneous styling available in the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../../core/tools/classProvider';\nimport '../../core/style/global.css';\nimport '../../core/style/colors.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst OtherStyles = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Other styles:</h4>\n        <div className='appElements'>\n          <a className={classProvider(props.appState.theme, 'link')} href='https://fonts.google.com/specimen/Raleway'>Font: Raleway</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(OtherStyles);","// RFF demo project\n// About.js\n// React component that renders information related to webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../core/style/global.css';\n\nimport Colors from './widgets/Colors';\nimport Technologies from './widgets/Technologies';\nimport OtherStyles from './widgets/OtherStyles';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst About = (props) => {\n  return(\n    <div className='app'>\n      <div className='container'>\n        <Technologies/>\n        <Colors/>\n        <OtherStyles/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(About);","// RFF demo project\n// Calculate.js\n// React component that renders simple calculator app\n\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/calculate.css';\nimport '../core/style/forms.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Calculator = (props) => {\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n\n  const Results = () => {\n    return (\n      <>\n        <div className='appElements'>\n          <Addition/>\n          <Multiplication/>\n          <Exponentiation/>\n          <Cube/>\n        </div>\n        <div className='appElements'>\n          <Subtraction/>\n          <Division/>\n          <RootSquare/>\n          <RootCubic/>\n        </div>\n      </>\n    );\n  };\n\n  const Addition = () => {\n    const result = Number(value1) + Number(value2);\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Addition</p>\n        <p>{value1} + {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Subtraction = () => {\n    const result = numbro(Number(value1) - Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Subtraction</p>\n        <p>{value1} - {value2} = <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Division = () => {\n    if (Number(value2) === 0) {\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <a href='https://en.wikipedia.org/wiki/Division_by_zero'> nope </a>\n        </div>\n      );\n    } else {\n      const result = numbro(Number(value1) / Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n      return (\n        <div className={classProvider(props.appState.theme, 'calculateResult')}>\n          <p>Division</p>\n          <p>{value1} / {value2} {'\\u2243'} <strong>{result}</strong></p>\n        </div>\n      );\n    }\n  };\n  const Multiplication = () => {\n    const result = numbro(Number(value1) * Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Multiplication</p>\n        <p>{value1} * {value2} {'\\u2243'} <strong>{result}</strong></p>\n      </div>\n    );\n  };\n  const Exponentiation = () => {\n    const res1 = numbro(Number(value1) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 2).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res3 = numbro(Number(value1) ** Number(value2)).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Exponentiation</p>\n        <p>{value1} ^ 2 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 2 {'\\u2243'} <strong>{res2}</strong></p>\n        <p>{value1} ^ {value2} {'\\u2243'} <strong>{res3}</strong></p>\n      </div>\n    );\n  };\n  const Cube = () => {\n    const res1 = numbro(Number(value1) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Number(value2) ** 3).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube</p>\n        <p>{value1} ^ 3 {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{value2} ^ 3 {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootSquare = () => {\n    const res1 = numbro(Math.sqrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.sqrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Square root</p>\n        <p>{'\\u221a'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221a'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n  const RootCubic = () => {\n    const res1 = numbro(Math.cbrt(Number(value1))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    const res2 = numbro(Math.cbrt(Number(value2))).format({thousandSeparated: true, trimMantissa: true, mantissa: 4});\n    return (\n      <div className={classProvider(props.appState.theme, 'calculateResult')}>\n        <p>Cube root</p>\n        <p>{'\\u221B'}{value1} {'\\u2243'} <strong>{res1}</strong></p>\n        <p>{'\\u221B'}{value2} {'\\u2243'} <strong>{res2}</strong></p>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <form className='appElements'>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue1(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n          <input type='number' placeholder='numerical value' onChange={({target}) => setValue2(target.value)}\n            className={classProvider(props.appState.theme, 'calculateElement')}/>\n        </form>\n        <Results/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Calculator);","// RFF demo project\n// Dashboard.js\n// React component that renders information summary dashboard\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport CountryCount from './widgets/CountryCount';\nimport DishCount from './widgets/DishCount';\nimport GroupCount from './widgets/GroupCount';\nimport ListCount from './widgets/ListCount';\nimport MethodCount from './widgets/MethodCount';\nimport TaskCount from './widgets/TaskCount';\nimport IngredientCount from './widgets/IngredientCount';\nimport TrackedStopsCount from './widgets/TrackedStopsCount';\nimport {Link} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst Dashboard = (props) => {\n  const common = [\n    {app: 'Calculate', link: '/calculate'},\n    {app: 'Dishy', link: '/dishy'},\n    {app: 'OpenCountry', link: '/countries'},\n  ];\n  const advanced = [\n    {app: 'Tasker', link: '/tasker'},\n    {app: 'Transporter', link: '/transit'},\n  ];\n\n  const ApplicationsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        {common.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const ApplicationsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        {advanced.map(a => {\n          return (\n            <div key={`app:${a.app}`} className='dashTile'>\n              <div className='app'>\n                <div className='container'>\n                  <Link className={classProvider(props.theme, 'tileDescription')} push to={a.link}>{a.app}</Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const WidgetsCommon = () => {\n    return (\n      <div className='appWidgets'>\n        <CountryCount/>\n        <DishCount/>\n        <IngredientCount/>\n        <MethodCount/>\n      </div>\n    );\n  };\n\n  const WidgetsAdvanced = () => {\n    return (\n      <div className='appWidgets'>\n        <GroupCount/>\n        <ListCount/>\n        <TaskCount/>\n        <TrackedStopsCount/>\n      </div>\n    );\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Available applications:</h4>\n        <ApplicationsCommon/>\n        {props.user ? <ApplicationsAdvanced/> : null}\n        <h4 className={classProvider(props.appState.theme, 'heading')}>Statistics:</h4>\n        <WidgetsCommon/>\n        {props.user ? <WidgetsAdvanced/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);","\nimport gql from 'graphql-tag';\n\nexport const INGREDIENT_DETAILS = gql`\n  fragment IngredientDetails on Ingredient {\n    type\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_CARBS = gql`\n  query {\n    allCarbs {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_PROTEINS = gql`\n  query {\n    allProteins {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ALL_SPICES = gql`\n  query {\n    allSpices {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const METHOD_DETAILS = gql`\n  fragment MethodDetails on CookingMethod {\n    name\n    uses\n    id\n    addedBy {\n      username\n    }\n  }\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ALL_METHODS = gql`\n  query {\n    allMethods {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_INGREDIENT_DETAILS = gql`\n    fragment DishIngredientDetails on Ingredient {\n        type\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\n\nexport const DISH_METHOD_DETAILS = gql`\n    fragment DishMethodDetails on CookingMethod {\n        name\n        id\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\nimport {DISH_INGREDIENT_DETAILS} from './f_dishIngredientFragment';\nimport {DISH_METHOD_DETAILS} from './f_dishMethodFragment';\n\nexport const DISH_DETAILS = gql`\n  fragment DishDetails on Dish {\n    name\n    cookingMethods {\n        ...DishMethodDetails\n    }\n    proteins {\n        ...DishIngredientDetails\n    }\n    carbs {\n        ...DishIngredientDetails\n    }\n    spices {\n        ...DishIngredientDetails\n    }\n    karma\n    note\n    addedBy {\n      ...UserDetails\n    }\n    id\n  }\n  ${USER_DETAILS}\n  ${DISH_INGREDIENT_DETAILS}\n  ${DISH_METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ALL_DISHES = gql`\n  query {\n    allDishes {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const ADD_METHOD = gql`\n  mutation addMethod($token: String!, $name: String!) {\n    addMethod(token: $token, name: $name) {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const ADD_INGREDIENT = gql`\n  mutation addIngredient($token: String!, $name: String!, $type: String!) {\n    addIngredient(token: $token, name: $name, type: $type) {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const ADD_DISH = gql`\n  mutation addDish($token: String!, $name: String!, $cookingMethods: [String!]!,\n    $carbs: [String!]!, $proteins: [String!]!, $spices: [String!]!, $note: String!) {\n    addDish(token: $token, name: $name, cookingMethods: $cookingMethods,\n      carbs: $carbs, proteins: $proteins, spices: $spices, note: $note) {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_ADDED = gql`\n  subscription {\n    dishAdded {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_UPDATED = gql`\n  subscription {\n    dishUpdated {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_REMOVED = gql`\n  subscription {\n    dishRemoved {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {DISH_DETAILS} from '../fragments/f_dishFragment';\n\nexport const DISH_VOTED = gql`\n  subscription {\n    dishVoted {\n      ...DishDetails\n    }\n  }\n  ${DISH_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_ADDED = gql`\n  subscription {\n    ingredientAdded {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_UPDATED = gql`\n  subscription {\n    ingredientUpdated {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {INGREDIENT_DETAILS} from '../fragments/f_ingredientFragment';\n\nexport const INGREDIENT_REMOVED = gql`\n  subscription {\n    ingredientRemoved {\n      ...IngredientDetails\n    }\n  }\n  ${INGREDIENT_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_ADDED = gql`\n  subscription {\n    methodAdded {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_UPDATED = gql`\n  subscription {\n    methodUpdated {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {METHOD_DETAILS} from '../fragments/f_methodFragment';\n\nexport const METHOD_REMOVED = gql`\n  subscription {\n    methodRemoved {\n      ...MethodDetails\n    }\n  }\n  ${METHOD_DETAILS}\n`;","// RFF demo project\n// DishyReducer.js\n// creates reducer to Redux global state for application to use - dishy\n\nconst initialState = {\n  carbSearch: '',\n  proteinSearch: '',\n  spiceSearch: '',\n  methodSearch: '',\n  newDish: false,\n  newDishCarbs: [],\n  newDishProteins: [],\n  newDishSpices: [],\n  newDishMethods: []\n};\n\nconst DishyReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setCarbSearch':\n    return {...state, carbSearch: action.carbSearch};\n  case 'setProteinSearch':\n    return {...state, proteinSearch: action.proteinSearch};\n  case 'setSpiceSearch':\n    return {...state, spiceSearch: action.spiceSearch};\n  case 'setMethodSearch':\n    return {...state, methodSearch: action.methodSearch};\n  case 'setNewDish':\n    return {...state, newDish: true};\n  case 'setNewDishCarbs':\n    return {...state, newDishCarbs: [...state.newDishCarbs, action.carb]};\n  case 'setNewDishProteins':\n    return {...state, newDishProteins: [...state.newDishProteins, action.protein]};\n  case 'setNewDishSpices':\n    return {...state, newDishSpices: [...state.newDishSpices, action.spice]};\n  case 'setNewDishMethods':\n    return {...state, newDishMethods: [...state.newDishMethods, action.method]};\n  case 'resetNewDish':\n    return {...state, newDish: false, newDishCarbs: [], newDishProteins: [], newDishSpices: [], newDishMethods: []};\n  default:\n    return state;\n  }\n};\n\nexport const initDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDish'\n    });\n  };\n};\n\nexport const resetDish = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetNewDish'\n    });\n  };\n};\n\nexport const addDishCarb = (carb) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishCarbs', carb: {name: carb.name, id: carb.id}\n    });\n  };\n};\n\nexport const addDishProtein = (protein) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishProteins', protein: {name: protein.name, id: protein.id}\n    });\n  };\n};\n\nexport const addDishSpice = (spice) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishSpices', spice: {name: spice.name, id: spice.id}\n    });\n  };\n};\n\nexport const addDishMethod = (method) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setNewDishMethods', method: {name: method.name, id: method.id}\n    });\n  };\n};\n\nexport const setSearchCarb = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: search\n    });\n  };\n};\n\nexport const setSearchProtein = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: search\n    });\n  };\n};\n\nexport const setSearchSpice = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: search\n    });\n  };\n};\n\nexport const setSearchMethod = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: search\n    });\n  };\n};\n\nexport const resetSearchCarb = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCarbSearch', carbSearch: ''\n    });\n  };\n};\n\nexport const resetSearchProtein = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setProteinSearch', proteinSearch: ''\n    });\n  };\n};\n\nexport const resetSearchSpice = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSpiceSearch', spiceSearch: ''\n    });\n  };\n};\n\nexport const resetSearchMethod = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setMethodSearch', methodSearch: ''\n    });\n  };\n};\n\nexport default DishyReducer;","// RFF demo project\n// Dishy.js\n// React component that renders dish suggestion-section of the webapp\n\n// IMPORTS\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\n\nimport {ALL_CARBS} from '../core/graphql/rff/queries/q_allCarbs';\nimport {ALL_PROTEINS} from '../core/graphql/rff/queries/q_allProteins';\nimport {ALL_SPICES} from '../core/graphql/rff/queries/q_allSpices';\nimport {ALL_METHODS} from '../core/graphql/rff/queries/q_allMethods';\nimport {ALL_DISHES} from '../core/graphql/rff/queries/q_allDishes';\nimport {ADD_METHOD} from '../core/graphql/rff/mutations/m_addMethod';\nimport {ADD_INGREDIENT} from '../core/graphql/rff/mutations/m_addIngredient';\nimport {ADD_DISH} from '../core/graphql/rff/mutations/m_addDish';\nimport {DISH_ADDED} from '../core/graphql/rff/subscriptions/s_dishAdded';\nimport {DISH_UPDATED} from '../core/graphql/rff/subscriptions/s_dishUpdated';\nimport {DISH_REMOVED} from '../core/graphql/rff/subscriptions/s_dishRemoved';\nimport {DISH_VOTED} from '../core/graphql/rff/subscriptions/s_dishVoted';\nimport {INGREDIENT_ADDED} from '../core/graphql/rff/subscriptions/s_ingredientAdded';\nimport {INGREDIENT_UPDATED} from '../core/graphql/rff/subscriptions/s_ingredientUpdated';\nimport {INGREDIENT_REMOVED} from '../core/graphql/rff/subscriptions/s_ingredientRemoved';\nimport {METHOD_ADDED} from '../core/graphql/rff/subscriptions/s_methodAdded';\nimport {METHOD_UPDATED} from '../core/graphql/rff/subscriptions/s_methodUpdated';\nimport {METHOD_REMOVED} from '../core/graphql/rff/subscriptions/s_methodRemoved';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {initDish, resetDish, addDishCarb, addDishProtein, addDishSpice,\n  addDishMethod} from '../core/store/reducers/DishyReducer';\n\n// prop mapper. maps imported state from store to usable props.\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    dishyState: state.dishyState,\n    user: state.loginState.user\n  };\n};\n\n// prop mapper. maps imported functions from store to usable props.\nconst mapDispatchToProps = {\n  initDish, resetDish, addDishCarb, addDishProtein, addDishSpice, addDishMethod,\n  handleInfo, handleError\n};\n\n// Dishy. application for site.\nconst Dishy = (props) => {\n  const client = useApolloClient();\n  const carbResults = useQuery(ALL_CARBS);\n  const proteinResults = useQuery(ALL_PROTEINS);\n  const spiceResults = useQuery(ALL_SPICES);\n  const methodResults = useQuery(ALL_METHODS);\n  const dishResults = useQuery(ALL_DISHES);\n\n  useSubscription(DISH_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishAdded;\n      updateCacheWithDish('added', dish);\n    }\n  });\n  useSubscription(DISH_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishUpdated;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_VOTED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishVoted;\n      updateCacheWithDish('updated', dish);\n    }\n  });\n  useSubscription(DISH_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const dish = subscriptionData.data.dishRemoved;\n      updateCacheWithDish('removed', dish);\n    }\n  });\n  useSubscription(INGREDIENT_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('added', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('added', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('added', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientUpdated;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('updated', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('updated', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('updated', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(INGREDIENT_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const ingredient = subscriptionData.data.ingredientAdded;\n      switch (ingredient.type) {\n      case 'carb':\n        updateCacheWithCarb('removed', ingredient);\n        break;\n      case 'protein':\n        updateCacheWithProtein('removed', ingredient);\n        break;\n      case 'spice':\n        updateCacheWithSpice('removed', ingredient);\n        break;\n      default:\n        break;\n      }\n    }\n  });\n  useSubscription(METHOD_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodAdded;\n      updateCacheWithMethod('added', method);\n    }\n  });\n  useSubscription(METHOD_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodUpdated;\n      updateCacheWithMethod('updated', method);\n    }\n  });\n  useSubscription(METHOD_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const method = subscriptionData.data.methodRemoved;\n      updateCacheWithMethod('removed', method);\n    }\n  });\n\n  // helper functions for subscriptions\n  const updateCacheWithCarb = async (eventType, carb) => {\n    const includedIn = (set, object) => set.map(c => c.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_CARBS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {allCarbs: dataInStore.allCarbs.concat(carb)}\n        });\n        props.handleInfo(`Carb added: ${carb.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.map(c => {\n              return c.id === carb.id ? carb : c;\n            })}\n        });\n        props.handleInfo(`Carb updated: ${carb.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allCarbs, carb)) {\n        await client.writeQuery({\n          query: ALL_CARBS,\n          data: {\n            allCarbs: dataInStore.allCarbs.forEach(c => {\n              if (c.id !== carb.id) return c;\n            })}\n        });\n        props.handleInfo(`Carb removed: ${carb.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithProtein = async (eventType, protein) => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_PROTEINS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {allProteins: dataInStore.allProteins.concat(protein)}\n        });\n        props.handleInfo(`Protein added: ${protein.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.map(p => {\n              return p.id === protein.id ? protein : p;\n            })}\n        });\n        props.handleInfo(`Protein updated: ${protein.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allProteins, protein)) {\n        await client.writeQuery({\n          query: ALL_PROTEINS,\n          data: {\n            allProteins: dataInStore.allProteins.forEach(p => {\n              if (p.id !== protein.id) return p;\n            })}\n        });\n        props.handleInfo(`Protein removed: ${protein.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithSpice = async (eventType, spice) => {\n    const includedIn = (set, object) => set.map(s => s.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_SPICES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {allSpices: dataInStore.allSpices.concat(spice)}\n        });\n        props.handleInfo(`Spice added: ${spice.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.map(s => {\n              return s.id === spice.id ? spice : s;\n            })}\n        });\n        props.handleInfo(`Spice updated: ${spice.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allSpices, spice)) {\n        await client.writeQuery({\n          query: ALL_SPICES,\n          data: {\n            allSpices: dataInStore.allSpices.forEach(s => {\n              if (s.id !== spice.id) return s;\n            })}\n        });\n        props.handleInfo(`Spice removed: ${spice.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithMethod = async (eventType, method) => {\n    const includedIn = (set, object) => set.map(m => m.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_METHODS});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {allMethods: dataInStore.allMethods.concat(method)}\n        });\n        props.handleInfo(`Method added: ${method.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.map(m => {\n              return m.id === method.id ? method : m;\n            })}\n        });\n        props.handleInfo(`Method updated: ${method.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allMethods, method)) {\n        await client.writeQuery({\n          query: ALL_METHODS,\n          data: {\n            allMethods: dataInStore.allMethods.forEach(m => {\n              if (m.id !== method.id) return m;\n            })}\n        });\n        props.handleInfo(`Method removed: ${method.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithDish = async (eventType, dish) => {\n    const includedIn = (set, object) => set.map(d => d.id).includes(object.id);\n    const dataInStore = await client.readQuery({query: ALL_DISHES});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {allDishes: dataInStore.allDishes.concat(dish)}\n        });\n        props.handleInfo(`Dish added: ${dish.name}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.map(d => {\n              return d.id === dish.id ? dish : d;\n            })}\n        });\n        props.handleInfo(`Dish updated: ${dish.name}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.allDishes, dish)) {\n        await client.writeQuery({\n          query: ALL_DISHES,\n          data: {\n            allDishes: dataInStore.allDishes.forEach(d => {\n              if (d.id !== dish.id) return d;\n            })}\n        });\n        props.handleInfo(`Dish removed: ${dish.name}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Loading = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>loading . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'loading' is set.\n  const Error = () => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>something went wrong . . .</p>\n        </div>\n      </div>\n    );\n  };\n  // subcomponent. shown when GraphQL query/mutation property 'data' is set but has no information.\n  const Empty = ({type}) => {\n    return (\n      <div className='appWidgets'>\n        <div className={classProvider(props.theme, 'dishyElement')}>\n          <p className={classProvider(props.theme, 'description')}>no {type} available</p>\n        </div>\n      </div>\n    );\n  };\n\n  // helper function to add ingredients or methods to new dish.\n  // checks whether or not instance of component has been added already before adding to list.\n  function handleAddComponent(event, component, type) {\n    event.preventDefault();\n    const {newDishCarbs, newDishProteins, newDishSpices, newDishMethods} = props.dishyState;\n    if (!props.dishyState.newDish) {\n      props.initDish();\n    }\n    switch (type) {\n    case 'carb':\n      if (!newDishCarbs.filter(c => c.id === component.id).length > 0) props.addDishCarb(component);\n      break;\n    case 'protein':\n      if (!newDishProteins.filter(p => p.id === component.id).length > 0) props.addDishProtein(component);\n      break;\n    case 'spice':\n      if (!newDishSpices.filter(s => s.id === component.id).length > 0) props.addDishSpice(component);\n      break;\n    case 'method':\n      if (!newDishMethods.filter(m => m.id === component.id).length > 0) props.addDishMethod(component);\n      break;\n    default:\n      break;\n    }\n  }\n\n  // subcomponent. renders selector for found carbs & selected carb information.\n  const Carbs = () => {\n    const [selection, setSelection] = useState(null);\n    if (carbResults.loading) {\n      return <Loading/>;\n    } else if (carbResults.data && carbResults.data.allCarbs) {\n      const resultCount = carbResults.data.allCarbs.length;\n      if (resultCount > 0) {\n        return (\n          <div id='carbSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='carbSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>carbs</option>\n                {carbResults.data.allCarbs.map((c) => <option key={c.id} value={JSON.stringify(c)}>{c.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedCarb' type='carb' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'carb')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='carbs'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found proteins & selected protein information.\n  const Proteins = () => {\n    const [selection, setSelection] = useState(null);\n    if (proteinResults.loading) {\n      return <Loading/>;\n    } else if (proteinResults.data && proteinResults.data.allProteins) {\n      const resultCount = proteinResults.data.allProteins.length;\n      if (resultCount > 0) {\n        return (\n          <div id='proteinSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='proteinSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>proteins</option>\n                {proteinResults.data.allProteins.map((p) => <option key={p.id} value={JSON.stringify(p)}>{p.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedProtein' type='protein' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'protein')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='proteins'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found spices & selected spice information.\n  const Spices = () => {\n    const [selection, setSelection] = useState(null);\n    if (spiceResults.loading) {\n      return <Loading/>;\n    } else if (spiceResults.data && spiceResults.data.allSpices) {\n      const resultCount = spiceResults.data.allSpices.length;\n      if (resultCount > 0) {\n        return (\n          <div id='spiceSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='spiceSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>spices</option>\n                {spiceResults.data.allSpices.map((s) => <option key={s.id} value={JSON.stringify(s)}>{s.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedSpice' type='spice' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'spice')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='spices'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found cooking methods & selected method information.\n  const Methods = () => {\n    const [selection, setSelection] = useState(null);\n    if (methodResults.loading) {\n      return <Loading/>;\n    } else if (methodResults.data && methodResults.data.allMethods) {\n      const resultCount = methodResults.data.allMethods.length;\n      if (resultCount > 0) {\n        return (\n          <div id='methodSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='methodSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>cooking methods</option>\n                {methodResults.data.allMethods.map((m) => <option key={m.id} value={JSON.stringify(m)}>{m.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Component id='selectedMethod' type='method' component={selection}/>\n                {props.show === 'advanced' &&\n                <button className={classProvider(props.theme, 'activator')}\n                  onClick={(event) => handleAddComponent(event, selection, 'method')}>add to new dish</button>}\n              </div>}\n            </div>\n          </div>\n        );\n      } else {\n        return <Empty type='cooking methods'/>;\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders selector for found dishes & selected dish information.\n  const Dishes = () => {\n    const [selection, setSelection] = useState(null);\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else {\n        return (\n          <div id='dishSection' className='componentContainer'>\n            <div className='dish'>\n              <select id='dishSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n                onChange={({target}) => setSelection(JSON.parse(target.value))}>\n                <option key='default' value='default' disabled>dishes</option>\n                {dishResults.data.allDishes.map((d) => <option key={d.id} value={JSON.stringify(d)}>{d.name}</option>)}\n              </select>\n              {selection && <div className='componentContainer'>\n                <Dish id='selectedDish' methods={selection.cookingMethods} carbs={selection.carbs} spices={selection.spices}\n                  proteins={selection.proteins} note={selection.note} name={selection.name}/>\n              </div>}\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n  // subcomponent. renders random dish information.\n  const Random = () => {\n    if (dishResults.loading) {\n      return <Loading/>;\n    } else if (dishResults.data && dishResults.data.allDishes) {\n      const resultCount = dishResults.data.allDishes.length;\n      if (resultCount === 0) {\n        return <Empty type='dishes'/>;\n      } else if (resultCount === 1) {\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[0];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      } else {\n        const random = Math.floor(Math.random() * Math.floor(dishResults.data.allDishes.length));\n        const {cookingMethods, carbs, spices, proteins, note, name} = dishResults.data.allDishes[random];\n        return (\n          <div id='recommendationSection' className='componentContainer'>\n            <Dish id='recommendedDish' view='random' methods={cookingMethods} carbs={carbs} spices={spices}\n              proteins={proteins} note={note} name={name}/>\n          </div>\n        );\n      }\n    } else {\n      return <Error/>;\n    }\n  };\n\n  // helper function. handles new dish component submission.\n  // checks the type of submission and sets variables accordingly.\n  const handleNewComponent = async (type) => {\n    const token = await localStorage.getItem('rffUserToken').substring(7);\n    let variables;\n    switch (type) {\n    case 'carb':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newCarbName').value\n      };\n      break;\n    case 'protein':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newProteinName').value\n      };\n      break;\n    case 'spice':\n      variables = {\n        token: token,\n        type: type,\n        name: document.getElementById('newSpiceName').value\n      };\n      break;\n    case 'method':\n      variables = {\n        token: token,\n        name: document.getElementById('newMethodName').value\n      };\n      break;\n    default:\n      variables = null;\n      break;\n    }\n    if (variables !== null && variables.token) {\n      await client.mutate({\n        mutation: type === 'method' ? ADD_METHOD : ADD_INGREDIENT,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          switch (type) {\n          case 'carb':\n            updateCacheWithCarb('added', data.addIngredient);\n            break;\n          case 'protein':\n            updateCacheWithProtein('added', data.addIngredient);\n            break;\n          case 'spice':\n            updateCacheWithSpice('added', data.addIngredient);\n            break;\n          case 'method':\n            updateCacheWithMethod('added', data.addMethod);\n            break;\n          default:\n            variables = null;\n            break;\n          }\n        } else {\n          props.handleError(`Error occurred with ${type}: cannot add ${variables.name}`);\n        }\n      }\n      );\n    }\n  };\n\n  // subcomponent. renders form for new dish component submission.\n  // selector defines which type of dish component will be submitted to handler function.\n  const NewComponent = () => {\n    const [selection, setSelection] = useState('carb');\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <p className={classProvider(props.theme, 'heading')}><strong>Add new...</strong></p>\n          <div id='addComponentSelector' className='selector'>\n            <button id='componentSelectCarb' type='button' onClick={() => setSelection('carb')}\n              className={selection === 'carb'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>carb</button>\n            <button id='componentSelectProtein' type='button' onClick={() => setSelection('protein')}\n              className={selection === 'protein'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>protein</button>\n            <button id='componentSelectSpice' type='button' onClick={() => setSelection('spice')}\n              className={selection === 'spice'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>spice</button>\n            <button id='componentSelectMethod' type='button' onClick={() => setSelection('method')}\n              className={selection === 'method'\n                ? classProvider(props.theme, 'selected')\n                : classProvider(props.theme, 'selector')}>method</button>\n          </div>\n          <DishComponentForm selection={selection}/>\n        </div>\n      </div>\n    );\n  };\n\n  const DishComponentForm = ({selection}) => {\n    switch (selection) {\n    case 'carb': return <NewCarb/>;\n    case 'method': return <NewMethod/>;\n    case 'protein': return <NewProtein/>;\n    case 'spice': return <NewSpice/>;\n    default: return null;\n    }\n  };\n  // subcomponent. renders form for new spice submission.\n  const NewSpice = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newSpiceName' placeholder='spice name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('spice')} id='saveSpice' className={classProvider(props.theme, 'activator')}>Save spice</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new protein submission.\n  const NewProtein = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newProteinName' placeholder='protein name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('protein')} id='saveProtein' className={classProvider(props.theme, 'activator')}>Save protein</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new carb submission.\n  const NewCarb = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newCarbName' placeholder='carb name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('carb')} id='saveCarb' className={classProvider(props.theme, 'activator')}>Save carb</button>\n      </div>\n    );\n  };\n  // subcomponent. renders form for new cooking method submission.\n  const NewMethod = () => {\n    return (\n      <div className='newComponent'>\n        <input type='text' id='newMethodName' placeholder='method name' minLength={2}\n          required className={classProvider(props.theme, 'field')}/>\n        <button type='button' onClick={() => handleNewComponent('method')} id='saveMethod' className={classProvider(props.theme, 'activator')}>Save method</button>\n      </div>\n    );\n  };\n\n  // helper function. handles new dish submission.\n  // maps added dish component values to id's (string formatted),\n  // creates variables for GraphQL and triggers mutation.\n  const handleNewDish = async () => {\n    const {newDishMethods, newDishProteins, newDishCarbs, newDishSpices, newDish} = props.dishyState;\n    if (newDish) {\n      const token = await localStorage.getItem('rffUserToken').substring(7);\n      const variables = {\n        token: token(),\n        name: document.getElementById('newDishName').value,\n        note: document.getElementById('newDishNote').value,\n        cookingMethods: newDishMethods.map(m => m.id),\n        proteins: newDishProteins.map(p => p.id),\n        carbs: newDishCarbs.map(c => c.id),\n        spices: newDishSpices.map(s => s.id)\n      };\n      if (variables.token) {\n        await client.mutate({\n          mutation: ADD_DISH,\n          variables: variables,\n          errorPolicy: 'ignore'\n        }).then((result) => {\n          const {data} = result;\n          if (data !== null) {\n            resetDishForm();\n            props.handleInfo(`New dish saved: ${variables.name}`);\n          } else {\n            props.handleError(`Error occurred with dish: cannot add ${variables.name}`);\n          }\n        });\n      }\n    }\n  };\n\n  const resetDishForm = () => {\n    document.getElementById('newDishName').value = '';\n    document.getElementById('newDishNote').value = '';\n    props.resetDish();\n  };\n\n  // subcomponent. renders form for new dish submission.\n  // selector activates/deactivates form.\n  // form activated also when dish component added to new dish if form is not active.\n  // deactivation resets added components from Redux-state.\n  const NewDish = () => {\n    const {\n      newDish, newDishCarbs, newDishProteins, newDishSpices, newDishMethods\n    } = props.dishyState;\n    return (\n      <div className='componentContainer'>\n        <div className='dish'>\n          <h4 className={classProvider(props.theme, 'heading')}>Add new dish</h4>\n          {newDish\n            ? <button type='button' onClick={() => resetDishForm()} id='newDishDeactivate'\n              className={classProvider(props.theme, 'deactivator')}>reset dish</button>\n            : <button type='button' onClick={() => props.initDish()} id='newDishActivate'\n              className={classProvider(props.theme, 'activator')}>create dish</button>}\n          {newDish && <>\n            <Dish view='new' carbs={newDishCarbs} proteins={newDishProteins}\n              spices={newDishSpices} methods={newDishMethods}/>\n            <button id='saveDish' onClick={() => handleNewDish()}\n              type='button' className={classProvider(props.theme, 'activator')}>Save dish</button>\n          </>}\n        </div>\n      </div>\n    );\n  };\n\n  // subcomponent. renders dish with given information.\n  const Dish = ({view, carbs, proteins, spices, methods, note, name}) => {\n    if (view === 'random') {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else if (view === 'new') {\n      return (\n        <div className='dish'>\n          <input className={classProvider(props.theme, 'noteArea')}\n            placeholder='dish name' type='text' id='newDishName'/>\n          <input type='text' className={classProvider(props.theme, 'noteArea')}\n            placeholder='description, steps, etc.' id='newDishNote'/>\n          <div className='componentContainer'>\n            <DishComponents id='newDishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='newDishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='newDishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='newDishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='dish'>\n          <p id='dishName' className={classProvider(props.theme, 'text')}>{name}</p>\n          <p id='dishNote' className={classProvider(props.theme, 'text')}>{note}</p>\n          <div className='componentContainer'>\n            <DishComponents id='dishCarbs' type='carb' components={carbs} viewType={view}/>\n            <DishComponents id='dishProteins' type='protein' components={proteins} viewType={view}/>\n            <DishComponents id='dishSpices' type='spice' components={spices} viewType={view}/>\n            <DishComponents id='dishMethods' type='method' components={methods} viewType={view}/>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish components with given information.\n  const DishComponents = ({type, components, viewType}) => {\n    if (components.length > 0) {\n      return (\n        <div className='components'>\n          {type === 'carb' && <h4 className={classProvider(props.theme, 'text')}>Carbs:</h4>}\n          {type === 'protein' && <h4 className={classProvider(props.theme, 'text')}>Proteins:</h4>}\n          {type === 'spice' && <h4 className={classProvider(props.theme, 'text')}>Spices:</h4>}\n          {type === 'method' && <h4 className={classProvider(props.theme, 'text')}>Cooking methods:</h4>}\n          {components.map((c) => <Component key={c.name} component={c} type={type} view='plain'/>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className='components'>\n          {type === 'carb' && <p className={classProvider(props.theme, 'text')}>no carbs</p>}\n          {type === 'protein' && <p className={classProvider(props.theme, 'text')}>no proteins</p>}\n          {type === 'spice' && <p className={classProvider(props.theme, 'text')}>no spices</p>}\n          {type === 'method' && <p className={classProvider(props.theme, 'text')}>no cooking methods</p>}\n        </div>\n      );\n    }\n  };\n\n  // subcomponent. renders dish component information.\n  const Component = ({component, view}) => {\n    if (props.dishyState.newDish && view === 'new') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else if (view === 'random' || view === 'plain') {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n        </div>\n      );\n    } else {\n      const uses = component.uses.length;\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'text')}>{component.name}</p>\n          <p className={classProvider(props.theme, 'text')}>\n            {uses > 1 ? `used in ${uses} dishes` : uses === 1 ? 'used in 1 dish' : 'no usage'}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        <h4 className={classProvider(props.theme, 'heading')}>Suggested:</h4>\n        <Random id='randomDish'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Dishes:</h4>\n        <Dishes id='dishes'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Carbs:</h4>\n        <Carbs id='carbs'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Proteins:</h4>\n        <Proteins id='proteins'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Spices:</h4>\n        <Spices id='spices'/>\n        <h4 className={classProvider(props.theme, 'heading')}>Cooking methods:</h4>\n        <Methods id='methods'/>\n        {props.show === 'advanced' && <NewComponent id='newDishComponent'/>}\n        {props.show === 'advanced' && <NewDish id='newDish'/>}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishy);","// RFF demo project\n// LandingPage.js\n// React component that renders front page for the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {InlineIcon} from '@iconify/react';\nimport {useQuery} from '@apollo/react-hooks';\n\nimport {NEWS} from '../core/graphql/rff/queries/q_news';\nimport News from './News';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState,\n    loginState: state.loginState\n  };\n};\n\nconst LandingPage = (props) => {\n\n  const Locked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          If you want to use these advanced features, please log in.</p>\n      </div>\n    );\n  };\n\n  const Unlocked = () => {\n    return (\n      <div className='commonElements'>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          Some applications are available only for registered and logged users.</p>\n        <p className={classProvider(props.appState.theme, 'description')}>\n          You have logged in and therefore eligible to use advanced features.</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className='app'>\n      <div className='container'>\n        {props.loginState.user === null\n          ? <Locked/>\n          : <Unlocked/>\n        }\n        <News mode='landing'/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(LandingPage);","\nimport gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;","// RFF demo project\n// LoginPage.js\n// React component that renders login page for the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {loginFailure, loginSuccess} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient, useMutation} from '@apollo/react-hooks';\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst LoginPage = (props) => {\n  const client = useApolloClient();\n  const [login] = useMutation(LOGIN);\n\n  const handleLogin = () => {\n    login({\n      errorPolicy: 'ignore',\n      variables: {\n        username: document.getElementById('loginUsername').value,\n        password: document.getElementById('loginPassword').value\n      }\n    }).then((result) => {\n      const {data} = result;\n      let loginToken;\n      if (data !== null) {\n        loginToken = data.login.value;\n        client.query({\n          query: ME,\n          variables: {\n            token: loginToken.substring(7)\n          }\n        }).then(async (result) => {\n          document.getElementById('loginUsername').value = '';\n          document.getElementById('loginPassword').value = '';\n          localStorage.setItem('rffUserToken', loginToken);\n          await props.loginSuccess(result.data.me);\n          await props.handleInfo('logged in successfully');\n        });\n      } else {\n        document.getElementById('loginPassword').value = '';\n        props.handleError('invalid username or password');\n        props.loginFailure();\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      {localStorage.getItem('rffUserToken') && <Redirect push to='/'/>}\n      <div className='container'>\n        <form className='commonElements'>\n          <input id='loginUsername' type='text' placeholder='username'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='loginPassword' type='password' placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='loginButton' type='button' onClick={() => handleLogin()}\n            className={classProvider(props.theme, 'formElement')}>{'login >'}</button>\n          <Link id='gotoRegisterButton' to='/register' onClick={() => props.switchApp('Register')}\n            className={classProvider(props.theme, 'formElement')}>{'register >'}</Link>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","// RFF demo project\n// CountryReducer.js\n// creates reducer to Redux global state for application to use - OpenCountry\n\nconst initialState = {\n  countries: [],\n  countrySearch: '',\n  selected: ''\n};\n\nconst CountryReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'search':\n    return {...state, countrySearch: action.search};\n  case 'resetSearch':\n    return {...state, countrySearch: ''};\n  case 'setCountries':\n    return {...state, countries: action.countries};\n  case 'setSelected':\n    return {...state, selected: action.selected};\n  case 'resetSelected':\n    return {...state, selected: ''};\n  default:\n    return state;\n  }\n};\n\nexport const initCountries = (countries) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setCountries',\n      countries: countries\n    });\n  };\n};\n\nexport const resetSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'resetSearch'\n    });\n  };\n};\n\nexport const setSearch = (search) => {\n  return async dispatch => {\n    dispatch({\n      type: 'search',\n      search: search\n    });\n  };\n};\n\nexport const setSelection = (id) => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected',\n      selected: id\n    });\n  };\n};\n\nexport const resetSelection = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'setSelected'\n    });\n  };\n};\n\nexport default CountryReducer;","// RFF demo project\n// Country.js\n// creates Country-class for application to use - OpenCountry\n\nimport PropTypes from 'prop-types';\n\nclass Country {\n  constructor(props) {\n    this.state = {\n      name: props.name,\n      numericCode: props.numericCode,\n      topLevelDomain: props.topLevelDomain,\n      alpha2Code: props.alpha2Code,\n      alpha3Code: props.alpha3Code,\n      callingCodes: props.callingCodes,\n      capital: props.capital,\n      altSpellings: props.altSpellings,\n      region: props.region,\n      subregion: props.subregion,\n      population: props.population,\n      timezones: props.timezones,\n      borders: props.borders,\n      nativeName: props.nativeName,\n      currencies: props.currencies,\n      languages: props.languages,\n      flag: props.flag\n    };\n  }\n  getName() {\n    return this.state.name;\n  }\n  getNumericCode() {\n    return this.state.numericCode;\n  }\n  getDomain() {\n    return this.state.topLevelDomain;\n  }\n  getAlpha2() {\n    return this.state.alpha2Code;\n  }\n  getAlpha3() {\n    return this.state.alpha3Code;\n  }\n  getCallingCodes() {\n    return this.state.callingCodes;\n  }\n  getCapital() {\n    return this.state.capital;\n  }\n  getAltSpellings() {\n    return this.state.altSpellings;\n  }\n  getRegion() {\n    return this.state.region;\n  }\n  getSubregion() {\n    return this.state.subregion;\n  }\n  getPopulation() {\n    return this.state.population;\n  }\n  getTimezones() {\n    return this.state.timezones;\n  }\n  getBorders() {\n    return this.state.borders;\n  }\n  getNativeName() {\n    return this.state.nativeName;\n  }\n  getCurrencies() {\n    return this.state.currencies;\n  }\n  getLanguages() {\n    return this.state.languages;\n  }\n  getFlag() {\n    return this.state.flag;\n  }\n}\n\nCountry.propTypes = {\n  name: PropTypes.string,\n  numericCode: PropTypes.string,\n  topLevelDomain: PropTypes.array,\n  alpha2Code: PropTypes.string,\n  alpha3Code: PropTypes.string,\n  callingCodes: PropTypes.array,\n  capital: PropTypes.string,\n  altSpellings: PropTypes.array,\n  region: PropTypes.string,\n  subRegion: PropTypes.string,\n  population: PropTypes.number,\n  timezones: PropTypes.array,\n  borders: PropTypes.array,\n  nativeName: PropTypes.string,\n  currencies: PropTypes.array,\n  languages: PropTypes.array,\n  flag: PropTypes.string\n};\n\nexport default Country;","// RFF demo project\n// CountryDetails.js\n// React component that renders available information of the countries\n\nimport React from 'react';\nimport {Flag, Image} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport numbro from 'numbro';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Country from '../../core/classes/Country';\nimport '../../core/style/global.css';\nimport '../../core/style/elements.css';\nimport classProvider from '../../core/tools/classProvider';\nimport {setSearch} from '../../core/store/reducers/CountryReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n  };\n};\nconst mapDispatchToProps = {\n  setSearch\n};\n\nconst CountryDetails = (props) => {\n  const country = new Country(props.country);\n\n  const overrideSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(country.getName());\n  };\n\n  const Alias = () => {\n    const alts = country.getAltSpellings();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Also known as:</label>\n        <ul>\n          {alts.map((a) => {\n            return <li className={classProvider(props.theme, 'heading')} key={a}>{a}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Borders = () => {\n    const borders = country.getBorders();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Borders with:</label>\n        <ul>\n          {borders.map((b) => {\n            return <li className={classProvider(props.theme, 'heading')} key={b}>{b}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Calling = () => {\n    const codes = country.getCallingCodes();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Calling codes:</label>\n        <ul>\n          {codes.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c}>{c}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Currency = () => {\n    const currencies = country.getCurrencies();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Currency:</label>\n        <ul>\n          {currencies.map((c) => {\n            return <li className={classProvider(props.theme, 'heading')} key={c.name}>{c.name}, {c.code}, {c.symbol}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Domain = () => {\n    const domains = country.getDomain();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Domain extensions:</label>\n        <ul>\n          {domains.map((d) => {\n            return <li className={classProvider(props.theme, 'heading')} key={d}>{d}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const CountryFlag = () => {\n    return <Image size='medium' src={country.getFlag()}/>;\n  };\n\n  const Language = () => {\n    const languages = country.getLanguages();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Official languages:</label>\n        <ul>\n          {languages.map((l) => {\n            return <li className={classProvider(props.theme, 'heading')} key={l.name}>{l.name}, {l.nativeName}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Timezones = () => {\n    const zones = country.getTimezones();\n    return (\n      <>\n        <label className={classProvider(props.theme, 'heading')}>Timezones:</label>\n        <ul>\n          {zones.map((z) => {\n            return <li className={classProvider(props.theme, 'heading')} key={z}>{z}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  const Header = () => {\n    if (props.multi) {\n      return (\n        <div className='countryHeader'>\n          <h4 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h4>\n        </div>\n      );\n    } else {\n      return (\n        <div className='countryHeader'>\n          <h3 className={classProvider(props.theme, 'heading')}>\n            <Flag name={country.getAlpha2().toLowerCase()}/> {country.getName()}, {country.getNativeName()}\n          </h3>\n        </div>\n      );\n    }\n  };\n\n  const Body = () => {\n    if (props.multi) {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classProvider(props.theme, 'countryDetails')}>\n          <Alias/>\n          <p className={classProvider(props.theme, 'heading')}>Capital: {country.getCapital()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Region: {country.getRegion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Subregion: {country.getSubregion()}</p>\n          <p className={classProvider(props.theme, 'heading')}>Population: {numbro(country.getPopulation()).format({thousandSeparated: true})}</p>\n          <p className={classProvider(props.theme, 'heading')}>ISO 3166: {country.getAlpha2()}, {country.getAlpha3()}</p>\n          <Language/>\n          <Timezones/>\n          <Borders/>\n          <Currency/>\n          <Calling/>\n          <Domain/>\n          <CountryFlag/>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div key={country.getNumericCode()} className='countryContainer' onClick={(event) => overrideSearch(event)}>\n      <Header/>\n      <Body/>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetails);","// RFF demo project\n// OpenCountry.js\n// React component that renders country data -section of the webapp\n\nimport React, {} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport resetIcon from '@iconify/icons-iwwa/reset';\n\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/forms.css';\nimport '../core/style/elements.css';\nimport {setSearch, resetSearch} from '../core/store/reducers/CountryReducer';\nimport CountryDetails from './widgets/CountryDetails';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    countries: state.countryState.countries,\n    countrySearch: state.countryState.countrySearch\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearch,\n  resetSearch\n};\n\nconst Countries = (props) => {\n\n  let matched = [];\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.setSearch(event.target.value);\n  };\n\n  const ListCountries = () => {\n    if (props.countrySearch.length > 0) {\n      for (let i = 0; i < props.countries.length; i++) {\n        if (props.countries[i].name.toLowerCase().includes(props.countrySearch.toLowerCase())) {\n          matched = [...matched, props.countries[i]];\n        }\n      }\n      if (matched.length >= 4) {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={true} country={c}/>\n            </div>\n          );\n        });\n      } else if (matched.length < 1) {\n        return (\n          <div className='countryAppElements'>\n            <h5>{'Couldn\\'t find any entries'}</h5>\n          </div>\n        );\n      } else {\n        return matched.map((c) => {\n          return (\n            <div key={c.numericCode} className='countryAppElements'>\n              <CountryDetails key={c.numericCode} multi={false} country={c}/>\n            </div>\n          );\n        });\n      }\n    } else {\n      matched = [];\n      return props.countries.map((c) => {\n        return (\n          <div key={c.numericCode} className='countryAppElements'>\n            <CountryDetails key={c.numericCode} multi={true} country={c}/>\n          </div>\n        );\n      });\n    }\n  };\n\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>\n          Data for {props.countrySearch.length > 0 ? props.countries.length : props.countries.length} countries found.\n        </h5>\n        <div className='appElements'>\n          <input type='search' placeholder='search country by name'\n            onChange={event => handleSearch(event)}\n            onReset={() => props.resetSearch()} value={props.countrySearch}\n            className={classProvider(props.theme, 'formElement')}/>\n          <button onClick={() => props.resetSearch()} title='reset search'\n            className={classProvider(props.theme, 'formElement')}><Icon icon={resetIcon} /></button>\n        </div>\n        <ListCountries/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from '../fragments/f_userFragment';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!) {\n    addUser(username: $username, password: $password) {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`;","// RFF demo project\n// RegistrationPage.js\n// React component that renders registration page of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\n\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\nimport {ADD_USER} from '../core/graphql/rff/mutations/m_addUser';\nimport {useApolloClient} from '@apollo/react-hooks';\nimport {Redirect} from 'react-router-dom';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    loginState: state.loginState\n  };\n};\n\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst RegistrationPage = (props) => {\n  const client = useApolloClient();\n\n  const register = async (event) => {\n    event.preventDefault();\n    const username = document.getElementById('regUsername').value;\n    const password = document.getElementById('regPassword').value;\n    const confirm = document.getElementById('regConfirm').value;\n    password === confirm\n      ? await client.mutate({\n        mutation: ADD_USER,\n        variables: {\n          username: username,\n          password: password\n        },\n        errorPolicy: 'ignore'\n      }).then(result => {\n        const {data} = result;\n        if (data !== null) {\n          props.handleInfo(`${username} registered`);\n        } else {\n          props.handleError(`username ${username} is already in use`);\n        }\n      })\n      : props.handleError('passwords do not match');\n    document.getElementById('regUsername').value = '';\n    document.getElementById('regPassword').value = '';\n    document.getElementById('regConfirm').value = '';\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <form className='commonElements' onSubmit={(event) => register(event)}>\n          <input id='regUsername' type='text' required minLength={4} placeholder='username'\n            className={classProvider(props.theme, 'formElement')} autoComplete/>\n          <input id='regPassword' type='password' required minLength={8} placeholder='password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <input id='regConfirm' type='password' required minLength={8} placeholder='re-type password'\n            className={classProvider(props.theme, 'formElement')}/>\n          <button id='regButton' type='submit' className={classProvider(props.theme, 'formElement')}>{'register >'}</button>\n        </form>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationPage);","\nimport gql from 'graphql-tag';\n\nexport const GROUP_LIST_DETAILS = gql`\n    fragment GroupListDetails on GroupList {\n        title\n        listType\n        removable\n        id\n        group {\n            title\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const GROUP_LISTS = gql`\n  query groupLists($token: String!) {\n    groupLists(token: $token) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\n\nexport const PRIVATE_LIST_DETAILS = gql`\n    fragment PrivateListDetails on PrivateList {\n        title\n        listType\n        removable\n        id\n        owner {\n            username\n            id\n        }\n    }\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const PRIVATE_LISTS = gql`\n  query privateLists($token: String!) {\n    privateLists(token: $token) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {USER_DETAILS} from './f_userFragment';\n\nexport const TASK_DETAILS = gql`\n  fragment TaskDetails on Task {\n    task\n    active\n    priority\n    creator {\n      ...UserDetails\n    }\n    listID\n    id\n  }\n  ${USER_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASKS = gql`\n  query tasks($token: String!, $listID: String!) {\n    tasks(token: $token, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ADDED = gql`\n  subscription {\n    taskAdded {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_UPDATED = gql`\n  subscription {\n    taskUpdated {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_REMOVED = gql`\n  subscription {\n    taskRemoved {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_ADDED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_ADDED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const LIST_REMOVED_GROUP = gql`\n  subscription {\n    ...GroupListDetails\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const LIST_REMOVED_PRIVATE = gql`\n  subscription {\n    ...PrivateListDetails\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_DETAILS} from '../fragments/f_groupFragment';\n\nexport const GROUPS = gql`\n  query groups($token: String!) {\n    groups(token: $token) {\n      ...GroupDetails\n    }\n  }\n  ${GROUP_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const ADD_TASK = gql`\n  mutation addTask($token: String!, $task: String!, $listID: String!, $priority: Boolean!) {\n    addTask(token: $token, task: $task, listID: $listID, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {GROUP_LIST_DETAILS} from '../fragments/f_groupListFragment';\n\nexport const ADD_LIST_GROUP = gql`\n  mutation addListGroup($token: String!, $title: String!, $group: String!) {\n    addListGroup(token: $token, title: $title, group: $group) {\n      ...GroupListDetails\n    }\n  }\n  ${GROUP_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {PRIVATE_LIST_DETAILS} from '../fragments/f_privateListFragment';\n\nexport const ADD_LIST_PRIVATE = gql`\n  mutation addListPrivate($token: String!, $title: String!) {\n    addListPrivate(token: $token, title: $title) {\n      ...PrivateListDetails\n    }\n  }\n  ${PRIVATE_LIST_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_PRIORITY = gql`\n  mutation taskPriority($token: String!, $id: String!, $priority: Boolean!) {\n    taskPriority(token: $token, id: $id, priority: $priority) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_ACTIVATION = gql`\n  mutation taskActivation($token: String!, $id: String!) {\n    taskActivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const TASK_DEACTIVATION = gql`\n  mutation taskDeactivation($token: String!, $id: String!) {\n    taskDeactivation(token: $token, id: $id) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","\nimport gql from 'graphql-tag';\nimport {TASK_DETAILS} from '../fragments/f_taskFragment';\n\nexport const REMOVE_TASK = gql`\n  mutation removeTask($token: String!, $id: String!, $listID: String!) {\n    removeTask(token: $token, id: $id, listID: $listID) {\n      ...TaskDetails\n    }\n  }\n  ${TASK_DETAILS}\n`;","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {InlineIcon} from '@iconify/react';\nimport flagVariant from '@iconify/icons-mdi/flag-variant';\nimport flagVariantOutline from '@iconify/icons-mdi/flag-variant-outline';\nimport classProvider from '../../core/tools/classProvider';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme\n  };\n};\n\nconst Task = (props) => {\n  const client = useApolloClient();\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const task = props.task;\n\n  const Flagged = ({flagged}) => {\n    return flagged\n      ? <InlineIcon icon={flagVariant}/>\n      : <InlineIcon icon={flagVariantOutline}/>;\n  };\n\n  if (props.status === 'error') {\n    return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n  } else if (props.status === 'loading') {\n    return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n  } else if (props.status === 'empty') {\n    return <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>;\n  } else {\n    return (\n      <tr className={classProvider(props.theme, 'tableRow')}>\n        <td className={classProvider(props.theme, 'tableCell')}>{task.task}</td>\n        <td className={classProvider(props.theme, 'tableCell')}><Flagged flagged={task.priority}/></td>\n        <td className={classProvider(props.theme, 'tableCell')}><button className={task.priority\n          ? classProvider(props.theme, 'deactivator')\n          : classProvider(props.theme, 'activator')}\n        onClick={() => props.handlePriority(task)}>\n          {task.priority\n            ? 'priority off'\n            : 'priority on'}\n        </button></td>\n        <td className={classProvider(props.theme, 'tableCell')}><button className={task.active\n          ? classProvider(props.theme, 'deactivator')\n          : classProvider(props.theme, 'activator')}\n        onClick={() => props.handleCompletion(task)}>\n          {task.active\n            ? 'done'\n            : 'undone'}\n        </button></td>\n        <td className={classProvider(props.theme, 'tableCell')}>\n          <button className={classProvider(props.theme, 'deactivator')}\n            onClick={() => props.handleRemoval(task)}>remove</button></td>\n      </tr>\n    );\n  }\n};\n\nexport default connect(mapStateToProps)(Task);","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useQuery} from '@apollo/react-hooks';\nimport {TASKS} from '../../core/graphql/rff/queries/q_tasks';\nimport classProvider from '../../core/tools/classProvider';\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\nimport chevronUp from '@iconify/icons-fa-solid/chevron-up';\nimport chevronDown from '@iconify/icons-fa-solid/chevron-down';\nimport Task from './Task';\nimport flagVariant from '@iconify/icons-mdi/flag-variant';\nimport flagVariantOutline from '@iconify/icons-mdi/flag-variant-outline';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\n// task list rendering component\nconst List = (props) => {\n  const list = props.list;\n  const userToken = localStorage.getItem('rffUserToken').substring(7);\n  const [expanded, setExpanded] = useState(false);\n  const {data, loading, error} = useQuery(TASKS, {\n    variables: {\n      token: userToken,\n      listID: list.id\n    }\n  });\n\n  const Flagged = ({flagged}) => {\n    return flagged\n      ? <p className='flagged'>priority {<InlineIcon icon={flagVariant}/>}</p>\n      : <p className='flagged'>non priority {<InlineIcon icon={flagVariantOutline}/>}</p>;\n  };\n  const TaskEmpty = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='empty' task={{task: 'no tasks'}}/>\n      </div>\n    );\n  };\n  const TaskError = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='error' task={{task: 'error occurred'}}/>\n      </div>\n    );\n  };\n  const TaskLoading = () => {\n    return (\n      <div className='listContainer'>\n        <Task status='loading' task={{task: 'loading tasks'}}/>\n      </div>\n    );\n  };\n\n  // task rendering component\n  const Tasks = ({tasks}) => {\n    if (tasks.length > 0) {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>change priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>mark done</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map(t => {\n              return <Task key={t.id} status='data' task={t} handlePriority={props.handleTaskPriority}\n                handleCompletion={props.handleTaskCompletion} handleRemoval={props.handleRemoveTask}/>;\n            })}\n          </tbody>\n        </table>\n      );\n    } else {\n      return <TaskEmpty/>;\n    }\n  };\n\n  //rendering component for new task form\n  const AddTask = ({list}) => {\n    const [expanded, setExpanded] = useState(false);\n    const [priority, setPriority] = useState(false);\n    return (\n      <div id='newTaskForm'>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new task</p>\n          </div>\n          <button title={expanded ? 'close form' : 'open form'} id='taskFormActivator' onClick={() => setExpanded(!expanded)}\n            className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>\n            {expanded ? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n        </div>\n        {expanded && <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>list</th>\n              <th className={classProvider(props.theme, 'tableCell')}>task</th>\n              <th className={classProvider(props.theme, 'tableCell')}>priority</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{list.title}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <input required minLength={2} id='newTask'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new task'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button id='newTaskPriority' type='button' className={classProvider(props.theme, 'formElement')}\n                  onClick={() => setPriority(!priority)}>{<Flagged flagged={priority}/>}</button>\n              </td>\n              <td className={classProvider(props.theme, 'tableCell')}>\n                <button type='button' className={classProvider(props.theme, 'activator')}\n                  onClick={() => props.handleSaveTask(list.id, priority)}>save list</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>}\n      </div>\n    );\n  };\n\n  return (\n    <div className='listContainer'>\n      <div key={`${list.listType}:${list.id}`} className='componentContainer'>\n        <div className='component'>\n          <strong><p className={classProvider(props.theme, 'text')}>\n            <InlineIcon icon={list.listType === 'PrivateList' ? userShield : usersIcon}/> {list.title}\n          </p></strong>\n        </div>\n        <button title={expanded ? 'hide list' : 'show list'} onClick={() => setExpanded(!expanded)}\n          className={expanded\n            ? classProvider(props.theme, 'deactivator')\n            : classProvider(props.theme, 'activator')}>\n          {expanded ? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n      </div>\n      {data && expanded && <div className='componentContainer'>\n        <div className='taskList'>\n          <AddTask list={list}/>\n          <Tasks tasks={data.tasks}/>\n        </div>\n      </div>}\n      {error && <div className='componentContainer'>\n        <div className='taskList'>\n          <TaskError/>\n        </div>\n      </div>}\n      {loading && <div className='componentContainer'>\n        <div className='taskList'>\n          <TaskLoading/>\n        </div>\n      </div>}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(List);","// RFF demo project\n// Tasker.js\n// React component that renders task management -section of the webapp\n\n// imports\nimport React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/tasker.css';\nimport {useApolloClient, useQuery, useSubscription} from '@apollo/react-hooks';\nimport {handleInfo, handleError} from '../core/store/reducers/AppReducer';\n\nimport {InlineIcon} from '@iconify/react';\nimport userShield from '@iconify/icons-fa-solid/user-shield';\nimport usersIcon from '@iconify/icons-fa-solid/users';\nimport flagVariantOutline from '@iconify/icons-mdi/flag-variant-outline';\nimport flagVariant from '@iconify/icons-mdi/flag-variant';\nimport saveIcon from '@iconify/icons-fa-regular/save';\nimport trashAlt from '@iconify/icons-fa-regular/trash-alt';\nimport chevronUp from '@iconify/icons-fa-solid/chevron-up';\nimport chevronDown from '@iconify/icons-fa-solid/chevron-down';\n\nimport {GROUP_LISTS} from '../core/graphql/rff/queries/q_groupLists';\nimport {PRIVATE_LISTS} from '../core/graphql/rff/queries/q_privateLists';\nimport {TASKS} from '../core/graphql/rff/queries/q_tasks';\nimport {Redirect} from 'react-router-dom';\n\nimport {TASK_ADDED} from '../core/graphql/rff/subscriptions/s_taskAdded';\nimport {TASK_UPDATED} from '../core/graphql/rff/subscriptions/s_taskUpdated';\nimport {TASK_REMOVED} from '../core/graphql/rff/subscriptions/s_taskRemoved';\n\nimport {LIST_ADDED_GROUP} from '../core/graphql/rff/subscriptions/s_listAddedGroup';\nimport {LIST_ADDED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listAddedPrivate';\nimport {LIST_REMOVED_GROUP} from '../core/graphql/rff/subscriptions/s_listRemovedGroup';\nimport {LIST_REMOVED_PRIVATE} from '../core/graphql/rff/subscriptions/s_listRemovedPrivate';\nimport {GROUPS} from '../core/graphql/rff/queries/q_groups';\nimport {ADD_TASK} from '../core/graphql/rff/mutations/m_addTask';\nimport {ADD_LIST_GROUP} from '../core/graphql/rff/mutations/m_addListGroup';\nimport {ADD_LIST_PRIVATE} from '../core/graphql/rff/mutations/m_addListPrivate';\nimport {TASK_PRIORITY} from '../core/graphql/rff/mutations/m_taskPriority';\nimport {TASK_ACTIVATION} from '../core/graphql/rff/mutations/m_taskActivation';\nimport {TASK_DEACTIVATION} from '../core/graphql/rff/mutations/m_taskDeactivation';\nimport {REMOVE_TASK} from '../core/graphql/rff/mutations/m_removeTask';\nimport List from './widgets/List';\n\n// prop mappers\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user,\n    tasker: state.taskerState\n  };\n};\nconst mapDispatchToProps = {\n  handleError, handleInfo\n};\n\nconst Tasker = (props) => {\n  const client = useApolloClient();\n  let userToken;\n  // Apollo GraphQL subscriptions\n  useSubscription(TASK_ADDED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskAdded;\n      updateCacheWithTask('added', task);\n    }\n  });\n  useSubscription(TASK_UPDATED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskUpdated;\n      updateCacheWithTask('updated', task);\n    }\n  });\n  useSubscription(TASK_REMOVED, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const task = subscriptionData.data.taskRemoved;\n      updateCacheWithTask('removed', task);\n    }\n  });\n  useSubscription(LIST_ADDED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedPrivate;\n      updateCacheWithPrivatelist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_PRIVATE, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedPrivate;\n      updateCacheWithPrivatelist('removed', list);\n    }\n  });\n  useSubscription(LIST_ADDED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listAddedGroup;\n      updateCacheWithGrouplist('added', list);\n    }\n  });\n  useSubscription(LIST_REMOVED_GROUP, {\n    fetchPolicy: '',\n    onSubscriptionData: ({subscriptionData}) => {\n      const list = subscriptionData.data.listRemovedGroup;\n      updateCacheWithGrouplist('removed', list);\n    }\n  });\n\n  // helper function: list saving handler\n  const handleSaveList = async (groupID, listType) => {\n    let variables;\n    if (listType === 'GroupList') {\n      variables = {\n        token: userToken,\n        group: groupID,\n        title: document.getElementById('newGrouplistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_GROUP,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithGrouplist('added', data.addListGroup);\n          document.getElementById('newGrouplistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    } else {\n      variables = {\n        token: userToken,\n        title: document.getElementById('newPrivatelistTitle').value\n      };\n      await client.mutate({\n        mutation: ADD_LIST_PRIVATE,\n        variables: variables,\n        errorPolicy: 'ignore'\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithPrivatelist('added', data.addListPrivate);\n          document.getElementById('newPrivatelistTitle').value = '';\n        } else {\n          props.handleError(`Error occurred with list: cannot add ${variables.title}`);\n        }\n      });\n    }\n  };\n  // helper functions: task handlers\n  const handleSaveTask = async (listID, priority) => {\n    const variables = {\n      token: userToken,\n      listID: listID,\n      task: document.getElementById('newTask').value,\n      priority: priority\n    };\n    if (userToken) {\n      await client.mutate({\n        mutation: ADD_TASK,\n        errorPolicy: 'ignore',\n        variables: variables\n      }).then((result) => {\n        const {data} = result;\n        if (data !== null) {\n          updateCacheWithTask('added', data.addTask);\n        } else {\n          props.handleError(`Error occurred with task: cannot add ${variables.task}`);\n        }\n      });\n    }\n  };\n  const handleTaskPriority = async ({id, priority, task}) => {\n    const variables = {\n      token: userToken,\n      id: id,\n      priority: !priority\n    };\n    await client.mutate({\n      mutation: TASK_PRIORITY,\n      variables: variables,\n      errorPolicy: 'ignore'\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', data.taskPriority);\n      } else {\n        props.handleError(`Error occurred with task: cannot update ${task}`);\n      }\n    });\n  };\n  const handleTaskCompletion = async ({id, task, active}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: active ? TASK_DEACTIVATION : TASK_ACTIVATION,\n      variables: variables,\n      errorPolicy: 'ignore'\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('updated', active ? data.taskDeactivation : data.taskActivation);\n      } else {\n        props.handleError(`Error occurred with task: cannot update ${task}`);\n      }\n    });\n  };\n  const handleTaskRemoval = async ({id, task}) => {\n    const variables = {\n      token: userToken,\n      id: id\n    };\n    await client.mutate({\n      mutation: REMOVE_TASK,\n      errorPolicy: 'ignore',\n      variables: variables\n    }).then((result) => {\n      const {data} = result;\n      if (data !== null) {\n        updateCacheWithTask('removed', data.removeTask);\n      } else {\n        props.handleError(`Error occurred with task: cannot remove ${task}`);\n      }\n    });\n  };\n\n  // helper functions for subscriptions\n  const updateCacheWithTask = async (eventType, task) => {\n    const includedIn = (set, object) => set.map(t => t.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: TASKS, variables: {\n        listID: task.listID,\n        token: userToken\n      }});\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {tasks: dataInStore.tasks.concat(task)}\n        });\n        props.handleInfo(`Task added: ${task.task}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {\n            tasks: dataInStore.tasks.map(t => {\n              return t.id === task.id ? task : t;\n            })}\n        });\n        props.handleInfo(`Task updated: ${task.task}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.tasks, task)) {\n        await client.writeQuery({\n          query: TASKS,\n          variables: {\n            token: userToken,\n            listID: task.listID\n          },\n          data: {\n            tasks: dataInStore.tasks.forEach(t => {\n              if (t.id !== task.id) return t;\n            })}\n        });\n        props.handleInfo(`Task removed: ${task.task}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithPrivatelist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      query: PRIVATE_LISTS, variables: {\n        token: userToken\n      }\n    });\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {privateLists: dataInStore.privateLists.concat(list)}\n        });\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            privateLists: dataInStore.privateLists.map(l => {\n              return l.id === list.id ? list : l;\n            })}\n        });\n        handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.privateLists, list)) {\n        await client.writeQuery({\n          query: PRIVATE_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            privateLists: dataInStore.privateLists.forEach(l => {\n              if (l.id !== list.id) return l;\n            })}\n        });\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n  const updateCacheWithGrouplist = async (eventType, list) => {\n    const includedIn = (set, object) => set.map(l => l.id).includes(object.id);\n    const dataInStore = await client.readQuery({\n      variables: {\n        token: userToken,\n      },\n      query: GROUP_LISTS\n    });\n\n    switch (eventType) {\n    case 'added':\n      if (!includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {groupLists: dataInStore.groupLists.concat(list)}\n        });\n        props.handleInfo(`List added: ${list.title}`);\n      }\n      break;\n    case 'updated':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            groupLists: dataInStore.groupLists.map(l => {\n              return l.id === list.id ? list : l;\n            })}\n        });\n        props.handleInfo(`List updated: ${list.title}`);\n      }\n      break;\n    case 'removed':\n      if (includedIn(dataInStore.groupLists, list)) {\n        await client.writeQuery({\n          query: GROUP_LISTS,\n          variables: {\n            token: userToken\n          },\n          data: {\n            groupLists: dataInStore.groupLists.forEach(l => {\n              if (l.id !== list.id) return l;\n            })}\n        });\n        props.handleInfo(`List removed: ${list.title}`);\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  // generic minor components, ie. query error & loading\n  const Empty = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileDescription')}>no accessible {type} lists</p>\n      </div>\n    );\n  };\n  const Error = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileError')}>error occurred while loading {type} lists</p>\n      </div>\n    );\n  };\n  const Loading = ({type}) => {\n    return (\n      <div className='taskList'>\n        <p className={classProvider(props.theme, 'tileLoading')}>loading {type} lists</p>\n      </div>\n    );\n  };\n\n  // component that gives layout base for task list rendering\n  const Lists = () => {\n    if (props.user) {\n      userToken = localStorage.getItem('rffUserToken').substring(7);\n      return (\n        <div className='container'>\n          <ListsP/>\n          <ListsG/>\n        </div>\n      );\n    } else {\n      return (\n        <div className='container'>\n          <p className={classProvider(props.theme, 'tileError')}>login needed</p>\n        </div>\n      );\n    }\n  };\n\n  // task lists rendering components\n  const ListsP = () => {\n    const {data, loading, error} = useQuery(PRIVATE_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'listHeader')}>Accessible private lists:</h4>\n        <div className='taskList'>\n          <AddList listType='private'/>\n          {data && data.privateLists.length > 0\n            ? <>{data.privateLists.map(l =>\n              <List key={`privateList:${l.id}`} list={l} handleSaveTask={handleSaveTask} handleRemoveTask={handleTaskRemoval}\n                handleTaskCompletion={handleTaskCompletion} handleTaskPriority={handleTaskPriority}\n                updateCacheWithTask={updateCacheWithTask}/>)}</>\n            : <Empty type='private'/>}\n        </div>\n        {error && <Error type='private'/>}\n        {loading && <Loading type='private'/>}\n      </div>\n    );\n  };\n  const ListsG = () => {\n    const {data, loading, error} = useQuery(GROUP_LISTS, {\n      variables: {\n        token: userToken\n      }\n    });\n    return (\n      <div className='taskList'>\n        <h4 className={classProvider(props.theme, 'heading')}>Accessible group lists:</h4>\n        <div className='taskList'>\n          <AddList listType='group'/>\n          {data && data.groupLists.length > 0\n            ? <>{data.groupLists.map(l => <List key={`groupList:${l.id}`} list={l}/>)}</>\n            : <Empty type='group'/>}\n        </div>\n        {loading && <Loading type='group'/>}\n        {error && <Error type='group'/>}\n      </div>\n    );\n  };\n\n  // rendering component for new list form\n  const AddList = ({listType}) => {\n    const [expanded, setExpanded] = useState(false);\n    const {data, loading, error} = useQuery(GROUPS, {\n      variables: {\n        token: userToken\n      }\n    });\n    const Wait = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileLoading')}>loading . . .</p>\n        </div>\n      );\n    };\n    const Fail = () => {\n      return (\n        <div className='component'>\n          <p className={classProvider(props.theme, 'tileError')}>error occurred</p>\n        </div>\n      );\n    };\n    const Group = () => {\n      const [groupSelection, setGroupSelection] = useState(null);\n      return (\n        <div className='taskList'>\n          {listType === 'group' && <select id='groupSelector' defaultValue='default' className={classProvider(props.theme, 'formElement')}\n            onChange={({target}) => setGroupSelection(JSON.parse(target.value))}>\n            <option key='default' value='default' disabled>groups</option>\n            {data.groups.map((g) => <option key={g.id} value={JSON.stringify(g)}>{g.title}</option>)}\n          </select>}\n          {groupSelection !== null && <table className={classProvider(props.theme, 'table')}>\n            <thead>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <th className={classProvider(props.theme, 'tableCell')}>group</th>\n                <th className={classProvider(props.theme, 'tableCell')}>title</th>\n                <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr className={classProvider(props.theme, 'tableRow')}>\n                <td className={classProvider(props.theme, 'tableCell')}><strong>{groupSelection.title}</strong></td>\n                <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                  id='newGrouplistTitle'\n                  className={classProvider(props.theme, 'formElement')}\n                  placeholder='new list title'/></td>\n                <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                  className={classProvider(props.theme, 'activator')}\n                  onClick={() => handleSaveList(groupSelection.id, 'GroupList')}>save list</button></td>\n              </tr>\n            </tbody>\n          </table>}\n        </div>\n      );\n    };\n    const Private = () => {\n      return (\n        <table className={classProvider(props.theme, 'table')}>\n          <thead>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <th className={classProvider(props.theme, 'tableCell')}>user</th>\n              <th className={classProvider(props.theme, 'tableCell')}>title</th>\n              <th className={classProvider(props.theme, 'tableCell')}>{' '}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className={classProvider(props.theme, 'tableRow')}>\n              <td className={classProvider(props.theme, 'tableCell')}><strong>{props.user.getUsername()}</strong></td>\n              <td className={classProvider(props.theme, 'tableCell')}><input required minLength={2}\n                className={classProvider(props.theme, 'formElement')}\n                placeholder='new list title' id='newPrivatelistTitle'/></td>\n              <td className={classProvider(props.theme, 'tableCell')}><button type='button'\n                className={classProvider(props.theme, 'activator')}\n                onClick={() => handleSaveList(null, 'PrivateList')}>save list</button></td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    };\n    return (\n      <div id={`newListForm_${listType}`}>\n        <div className='componentContainer'>\n          <div className='component'>\n            <p className={classProvider(props.theme, 'text')}>Add new {listType} list</p>\n          </div>\n          <button title={expanded ? 'close form' : 'open form'} id={`listFormActivator_${listType}`}\n            onClick={() => setExpanded(!expanded)} className={expanded\n              ? classProvider(props.theme, 'deactivator')\n              : classProvider(props.theme, 'activator')}>\n            {expanded? <InlineIcon icon={chevronUp}/> : <InlineIcon icon={chevronDown}/>}</button>\n        </div>\n        {error && <Fail/>}\n        {loading && <Wait/>}\n        {expanded && data && <div className='componentContainer'>\n          <div className='taskList'>\n            {listType === 'group' && <Group/>}\n            {listType !== 'group' && <Private/>}\n          </div>\n        </div>}\n      </div>\n    );\n  };\n\n  return props.show\n    ? <div className='app'>\n      <Lists/>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasker);","// RFF demo project\n// Transporter.js\n// React component that renders public transport information -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport '../core/style/global.css';\nimport '../core/style/transporter.css';\nimport HslHrtIcon from './icons/hsl/HslHrtIcon';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {};\n\nconst Transporter = (props) => {\n  const client = useApolloClient();\n  return(\n    <div className='app'>\n      <div className='container'>\n        <h5 className={classProvider(props.theme, 'heading')}>Tracked stops:</h5>\n        <p className={classProvider(props.theme, 'text')}>This feature will be added later</p>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transporter);","// RFF demo project\n// Connector.js\n// provides REST via Axios for application to use\n\nimport axios from 'axios';\n\nconst countriesUrl = 'https://restcountries.eu/rest/v2/all';\n\nconst getCountries = async () => {\n  return await axios.get(countriesUrl);\n};\n\nexport default {\n  getCountries\n};","// RFF demo project\n// UserSettings.js\n// React component that renders user settings -section of the webapp\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport classProvider from '../core/tools/classProvider';\nimport {\n  loginFailure, loginSuccess\n} from '../core/store/reducers/LoginReducer';\nimport {handleError, handleInfo, switchApp} from '../core/store/reducers/AppReducer';\nimport '../core/style/global.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport {useApolloClient} from '@apollo/react-hooks';\n\nimport {LOGIN} from '../core/graphql/rff/mutations/m_login';\nimport {ME} from '../core/graphql/rff/queries/q_me';\nimport {UPDATE_USER} from '../core/graphql/rff/mutations/m_updateUser';\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    user: state.loginState.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginFailure, loginSuccess, switchApp, handleInfo, handleError\n};\n\nconst UserPage = (props) => {\n  const client = useApolloClient();\n\n  const UserManager = () => {\n    return (\n      <div className='commonElements'>\n        <h5 className={classProvider(props.theme, 'heading')}>User information</h5>\n        <UserData/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change password</h5>\n        <ChangePassword/>\n        <br/>\n        <h5 className={classProvider(props.theme, 'heading')}>Change username</h5>\n        <ChangeUsername/>\n      </div>\n    );\n  };\n\n  const UserData = () => {\n    return (\n      <>\n        <p className={classProvider(props.theme, 'description')}>User: <strong>{props.user.getUsername()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Role: <strong>{props.user.getRole()}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Active: <strong>{props.user.getActive() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>Removable: <strong>{props.user.getRemovable() ? 'true' : 'false'}</strong></p>\n        <p className={classProvider(props.theme, 'description')}>ID: <strong>{props.user.getId()}</strong></p>\n      </>\n    );\n  };\n\n  const ChangeUsername = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handleUsernameChange(event)}>\n        <input id='changeUsernamePW' type='password' required placeholder='password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changeUsernameNew' type='text' required placeholder='new username'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>change username</button>\n      </form>\n    );\n  };\n\n  const ChangePassword = () => {\n    return (\n      <form className='appContainer' onSubmit={(event) => handlePasswordChange(event)}>\n        <input id='changePasswordOld' type='password' required placeholder='old password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordNew' type='password' required placeholder='new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <input id='changePasswordConfirm' type='password' required placeholder='retype new password'\n          className={classProvider(props.theme, 'formElement')}/>\n        <button type='submit' className={classProvider(props.theme, 'formElement')}>\n          change password\n        </button>\n      </form>\n    );\n  };\n\n  const handlePasswordChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changePasswordOld').value;\n    const newPassword = document.getElementById('changePasswordNew').value;\n    const confirm = document.getElementById('changePasswordConfirm').value;\n    newPassword === confirm\n      ? await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          token: localStorage.getItem('rffUserToken').toString().substring(7),\n          password: password,\n          newPassword: newPassword === confirm && newPassword\n        }\n      }).then((result, errors) => {\n        if (!errors) {\n          client.mutate({\n            mutation: LOGIN,\n            variables: {\n              username: props.user.username,\n              password: newPassword\n            }\n          }).then((result, errors) => {\n            if (!errors) {\n              const token = result.data.login.value;\n              client.query({\n                query: ME,\n                variables: {\n                  token: token.substring(7)\n                }\n              }).then((result, errors) => {\n                if (!errors) {\n                  localStorage.setItem('rffUserToken', token);\n                  props.loginSuccess(result.data.me);\n                  props.handleInfo('login renewed');\n                } else {\n                  props.loginFailure();\n                  props.handleError(errors[0]);\n                }\n              });\n            } else {\n              props.handleError(errors[0]);\n            }\n          });\n        } else {\n          props.handleError(errors[0]);\n        }\n      })\n      : props.handleError({message: 'New passwords do not match'});\n    document.getElementById('changePasswordOld').value = '';\n    document.getElementById('changePasswordNew').value = '';\n    document.getElementById('changePasswordConfirm').value = '';\n  };\n\n  const handleUsernameChange = async (event) => {\n    event.preventDefault();\n    const password = document.getElementById('changeUsernamePW').value;\n    const newUsername = document.getElementById('changeUsernameNew').value;\n    await client.mutate({\n      mutation: UPDATE_USER,\n      variables: {\n        token: localStorage.getItem('rffUserToken').toString().substring(7),\n        password: password,\n        newUsername: newUsername\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        client.mutate({\n          mutation: LOGIN,\n          variables: {\n            username: newUsername,\n            password: password\n          }\n        }).then((result, errors) => {\n          if (!errors) {\n            const token = result.data.login.value;\n            client.query({\n              query: ME,\n              variables: {\n                token: token.substring(7)\n              }\n            }).then((result, errors) => {\n              if (!errors) {\n                localStorage.setItem('rffUserToken', token);\n                props.loginSuccess(result.data.me);\n                props.handleInfo('login renewed');\n              } else {\n                props.loginFailure();\n                props.handleError(errors[0]);\n              }\n            });\n          } else {\n            props.handleError(errors[0]);\n          }\n        });\n      }\n    });\n  };\n\n  return props.show\n    ? <div className='app'>\n      <div className='container'>\n        <UserManager/>\n      </div>\n    </div>\n    : <Redirect push to='/'/>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n\n/*<form className='commonElements'>\n//           <input type='text' placeholder='username' onChange={({target}) => props.setUsername(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.username} autoComplete={true}/>\n//           <input type='password' placeholder='password' onChange={({target}) => props.setPassword(target.value)}\n//                  className={classProvider(props.theme, 'formElement')} value={props.loginState.password} autoComplete={true}/>\n//           <button type='button' onClick={() => handleLogin()}\n//                   className={classProvider(props.theme, 'formElement')}>login</button>\n//           <Link to='/register' onClick={() => props.switchApp('Register')}\n//                 className={classProvider(props.theme, 'formElement')}>register</Link>\n//         </form>*/","// RFF demo project\n// App.js\n// webapp file - provides Redux store and Apollo clients for application components\n// creates client side routing for webapp with React Router\n// creates base structure for app layout\n\n\n// imports\nimport React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport {ApolloClient} from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {setContext} from 'apollo-link-context';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {split} from 'apollo-link';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {getMainDefinition} from 'apollo-utilities';\nimport {loginSuccess} from './core/store/reducers/LoginReducer';\nimport './core/style/root.css';\nimport Navigation from './components/Navigation';\nimport AdminTools from './components/AdminTools';\nimport About from './components/About';\nimport Calculate from './components/Calculate';\nimport Dashboard from './components/Dashboard';\nimport Dishy from './components/Dishy';\nimport LandingPage from './components/LandingPage';\nimport LoginPage from './components/LoginPage';\nimport OpenCountry from './components/OpenCountry';\nimport RegistrationPage from './components/RegistrationPage';\nimport Tasker from './components/Tasker';\nimport Transporter from './components/Transporter';\nimport Connector from './core/services/Connector';\nimport UserPage from './components/UserSettings';\nimport {initCountries} from './core/store/reducers/CountryReducer';\nimport {handleError, handleInfo, switchApp} from './core/store/reducers/AppReducer';\nimport {ME} from './core/graphql/rff/queries/q_me';\n\n// prop mappings for Redux global state & thunk helper functions\nconst mapDispatchToProps = {\n  initCountries, switchApp, loginSuccess, handleError, handleInfo\n};\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.appState.theme,\n    app: state.appState.application,\n    dishyState: state.dishyState,\n    loginState: state.loginState\n  };\n};\n\n// ApolloClient definitions: links & clients for different sections of the webapp\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_WEBSOCKET,\n  options: {reconnect: true}\n});\nconst httpLink = createHttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4010/graphql'\n    : process.env.REACT_APP_RFF_ENDPOINT\n});\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem('rffUserToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null\n    }\n  };\n});\nconst rffLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\nconst hslLink = createHttpLink({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'\n});\nconst rffClient = new ApolloClient({\n  link: rffLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\nconst hslClient = new ApolloClient({\n  link: hslLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: process.env.NODE_ENV === 'development'\n});\n\nconst App = (props) => {\n  const loginToken = localStorage.getItem('rffUserToken');\n\n  // hook that handles webapp background styling\n  useEffect(() => {\n    document.body.className = props.theme;\n  });\n  // hook that handles querying data from country API for webapp\n  useEffect(() => {\n    async function init() {\n      await Connector.getCountries().then(response => {\n        props.initCountries(response.data);\n      });\n    }\n    init();\n  }, [props]);\n  // hook that handles restoring login if localstorage already has token stored\n  useEffect(() => {\n    loginToken !== null && rffClient.query({\n      query: ME,\n      variables: {\n        token: loginToken.substring(7)\n      }\n    }).then((result, errors) => {\n      if (!errors) {\n        props.loginSuccess(result.data.me);\n        props.handleInfo('Login restored');\n      } else {\n        props.handleError(errors[0]);\n      }\n    });\n  }, [loginToken, rffClient]);\n\n  // webapp definitions: provides routing for most webapp sections\n  const Rff = () => {\n    const {user} = props.loginState;\n    return (\n      <Switch>\n        <Route exact path='/' render={(props) => <LandingPage {...props} show={true}/>}/>\n        <Route path='/about' render={(props) => <About {...props} show={true}/>}/>\n        <Route path='/admin' render={(props) => <AdminTools {...props}\n          show={loginToken !== null}/>}/>\n        <Route path='/calculate' render={(props) => <Calculate {...props} show={true}/>}/>\n        <Route path='/countries' render={(props) => <OpenCountry {...props} show={true}/>}/>\n        <Route path='/dashboard' render={(props) => <Dashboard {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/dishy' render={(props) => <Dishy {...props} show={loginToken !== null ? 'advanced' : 'common'}/>}/>\n        <Route path='/login' render={(props) => <LoginPage {...props} show={loginToken === null}/>}/>\n        <Route path='/register' render={(props) => <RegistrationPage {...props} show={loginToken === null}/>}/>\n        <Route path='/tasker' render={(props) => <Tasker {...props} show={loginToken !== null}/>}/>\n        <Route path='/user' render={(props) => <UserPage {...props} show={loginToken !== null}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides routing for public transport information section\n  const Hsl = () => {\n    return (\n      <Switch>\n        <Route path='/transit' render={(props) => <Transporter {...props}/>}/>\n      </Switch>\n    );\n  };\n\n  // webapp definitions: provides navigation & correct ApolloClients for the different sections of the webapp\n  return (\n    <div className='appContainer'>\n      <Router basename='/'>\n        <ApolloProvider client={rffClient}>\n          <Navigation/>\n          <Rff/>\n        </ApolloProvider>\n        <ApolloProvider client={hslClient}>\n          <Hsl/>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// RFF demo project\n// RegReducer.js\n// creates reducer to Redux global state for application to use - registration\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'setNewUserName':\n    return {...state, newUserName: action.name};\n  case 'setNewUserUsername':\n    return {...state, newUserUsername: action.username};\n  case 'setNewUserPassword':\n    return {...state, newUserPassword: action.password};\n  case 'setConfirmNewUserPassword':\n    return {...state, confirmNewUserPassword: action.password};\n  case 'successfulReg':\n    return {...initialState};\n  case 'unsuccessfulReg':\n    return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n  case 'resetReg':\n    return {...initialState};\n  default:\n    return state;\n  }\n};\n\nexport default RegReducer;","// RFF demo project\n// Store.js\n// creates Redux global state for application\n\nimport {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport AppReducer from './reducers/AppReducer';\nimport CountryReducer from './reducers/CountryReducer';\nimport LoginReducer from './reducers/LoginReducer';\nimport RegReducer from './reducers/RegReducer';\nimport DishyReducer from './reducers/DishyReducer';\n\nconst reducers = combineReducers({\n  appState: AppReducer,\n  countryState: CountryReducer,\n  loginState: LoginReducer,\n  regState: RegReducer,\n  dishyState: DishyReducer\n});\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","// RFF demo project\n// index.js\n// webapp root file - provides Redux store for application\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './core/store/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}