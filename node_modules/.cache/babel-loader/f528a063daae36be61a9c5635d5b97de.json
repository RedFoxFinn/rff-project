{"ast":null,"code":"import _defineProperty from \"/home/redfoxfinn/Projects/WebstormProjects/rff-demo-project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'setNewUserName':\n      return _objectSpread({}, state, {\n        newUserName: action.name\n      });\n\n    case 'setNewUserUsername':\n      return _objectSpread({}, state, {\n        newUserUsername: action.username\n      });\n\n    case 'setNewUserPassword':\n      return _objectSpread({}, state, {\n        newUserPassword: action.password\n      });\n\n    case 'setConfirmNewUserPassword':\n      return _objectSpread({}, state, {\n        confirmNewUserPassword: action.password\n      });\n\n    case 'successfulReg':\n      return _objectSpread({}, initialState);\n\n    case 'unsuccessfulReg':\n      return _objectSpread({}, state, {\n        newUserPassword: '',\n        confirmNewUserPassword: ''\n      });\n\n    case 'resetReg':\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n};\n\nexport default RegReducer;","map":{"version":3,"sources":["/home/redfoxfinn/Projects/WebstormProjects/rff-demo-project/frontend/src/reducers/RegReducer.js"],"names":["initialState","newUserName","newUserUsername","newUserPassword","confirmNewUserPassword","RegReducer","state","action","type","name","username","password"],"mappings":";;;;;;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,eAAe,EAAE,EAFE;AAGnBC,EAAAA,eAAe,EAAE,EAHE;AAInBC,EAAAA,sBAAsB,EAAE;AAJL,CAArB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,+BAAWF,KAAX;AAAkBL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAAtC;;AACF,SAAK,oBAAL;AACE,+BAAWH,KAAX;AAAkBJ,QAAAA,eAAe,EAAEK,MAAM,CAACG;AAA1C;;AACF,SAAK,oBAAL;AACE,+BAAWJ,KAAX;AAAkBH,QAAAA,eAAe,EAAEI,MAAM,CAACI;AAA1C;;AACF,SAAK,2BAAL;AACE,+BAAWL,KAAX;AAAkBF,QAAAA,sBAAsB,EAAEG,MAAM,CAACI;AAAjD;;AACF,SAAK,eAAL;AACE,+BAAWX,YAAX;;AACF,SAAK,iBAAL;AACE,+BAAWM,KAAX;AAAkBH,QAAAA,eAAe,EAAE,EAAnC;AAAuCC,QAAAA,sBAAsB,EAAE;AAA/D;;AACF,SAAK,UAAL;AACE,+BAAWJ,YAAX;;AACF;AACE,aAAOM,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,UAAf","sourcesContent":["\n\nconst initialState = {\n  newUserName: '',\n  newUserUsername: '',\n  newUserPassword: '',\n  confirmNewUserPassword: ''\n};\n\nconst RegReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'setNewUserName':\n      return {...state, newUserName: action.name};\n    case 'setNewUserUsername':\n      return {...state, newUserUsername: action.username};\n    case 'setNewUserPassword':\n      return {...state, newUserPassword: action.password};\n    case 'setConfirmNewUserPassword':\n      return {...state, confirmNewUserPassword: action.password};\n    case 'successfulReg':\n      return {...initialState};\n    case 'unsuccessfulReg':\n      return {...state, newUserPassword: '', confirmNewUserPassword: ''};\n    case 'resetReg':\n      return {...initialState};\n    default:\n      return state;\n  }\n};\n\nexport default RegReducer;"]},"metadata":{},"sourceType":"module"}