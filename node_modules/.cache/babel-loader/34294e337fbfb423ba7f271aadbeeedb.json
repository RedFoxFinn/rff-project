{"ast":null,"code":"var _jsxFileName = \"/home/redfoxfinn/Projects/WebstormProjects/rff-demo-project/frontend/src/components/widgets/Technologies.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\nimport classProvider from '../../tools/classProvider';\nimport '../../style/global.css';\nimport '../../style/technologies.css';\n\nconst mapStateToProps = state => {\n  return {\n    appState: state.appState\n  };\n};\n\nconst Technologies = props => {\n  const frontend = [{\n    name: 'React.js',\n    url: 'https://reactjs.org/',\n    icon: React.createElement(InlineIcon, {\n      icon: reactIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })\n  }, {\n    name: 'Redux.js',\n    url: 'https://redux.js.org/',\n    icon: React.createElement(InlineIcon, {\n      icon: ReduxIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })\n  }, {\n    name: 'GraphQL',\n    url: 'https://graphql.org/',\n    icon: React.createElement(InlineIcon, {\n      icon: graphqlIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })\n  }, {\n    name: 'Apollo-client',\n    url: 'https://www.apollographql.com/docs/react/',\n    icon: React.createElement(InlineIcon, {\n      icon: apollostackIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })\n  }];\n  const backend = [{\n    name: 'Node.js',\n    url: 'https://nodejs.org/en/',\n    icon: React.createElement(InlineIcon, {\n      icon: logoNodejs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })\n  }, {\n    name: 'Express.js',\n    url: 'https://expressjs.com/',\n    icon: React.createElement(InlineIcon, {\n      icon: expressIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })\n  }, {\n    name: 'mongoose.js',\n    url: 'https://mongoosejs.com/',\n    icon: ''\n  }, {\n    name: 'JWT',\n    url: 'https://jwt.io/',\n    icon: ''\n  }, {\n    name: 'bcrypt',\n    url: 'https://github.com/kelektiv/node.bcrypt.js',\n    icon: ''\n  }, {\n    name: 'GraphQL',\n    url: 'https://graphql.org/',\n    icon: React.createElement(InlineIcon, {\n      icon: graphqlIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })\n  }, {\n    name: 'Apollo-server',\n    url: 'https://www.apollographql.com/docs/apollo-server/',\n    icon: React.createElement(InlineIcon, {\n      icon: apollostackIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })\n  }];\n  const data = [{\n    name: 'MongoDB - Atlas',\n    url: 'https://www.mongodb.com/cloud/atlas',\n    icon: React.createElement(InlineIcon, {\n      icon: mongodbIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })\n  }, {\n    name: 'HSL API',\n    url: 'https://digitransit.fi/en/developers/apis/1-routing-api/',\n    icon: ''\n  }];\n  const testing = [{\n    name: 'Jest',\n    url: 'https://jestjs.io/',\n    icon: React.createElement(InlineIcon, {\n      icon: jestIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })\n  }, {\n    name: 'EasyGraphQL',\n    url: 'https://easygraphql.com/',\n    icon: ''\n  }, {\n    name: 'cypress',\n    url: 'https://www.cypress.io/',\n    icon: React.createElement(InlineIcon, {\n      icon: cypressIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })\n  }];\n  const tools = [{\n    name: 'npm',\n    url: 'https://www.npmjs.com/',\n    icon: React.createElement(InlineIcon, {\n      icon: npmIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })\n  }, {\n    name: 'git',\n    url: 'https://git-scm.com/',\n    icon: React.createElement(InlineIcon, {\n      icon: gitIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })\n  }, {\n    name: 'GitHub',\n    url: 'https://github.com/',\n    icon: React.createElement(InlineIcon, {\n      icon: githubIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })\n  }, {\n    name: 'WebStorm',\n    url: 'https://www.jetbrains.com/webstorm/',\n    icon: React.createElement(InlineIcon, {\n      icon: webstormIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })\n  }, {\n    name: 'Chrome',\n    url: 'https://www.google.com/intl/en_en/chrome/',\n    icon: React.createElement(InlineIcon, {\n      icon: googlechromeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })\n  }, {\n    name: 'Postman',\n    url: 'https://www.getpostman.com/',\n    icon: React.createElement(InlineIcon, {\n      icon: postmanIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })\n  }];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return React.createElement(\"a\", {\n      className: classProvider(props.appState.theme, 'technologyElement'),\n      href: repo.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, repo.icon, \" \", repo.name);\n  };\n\n  const Front = () => {\n    return frontend.map(f => {\n      return React.createElement(\"a\", {\n        className: classProvider(props.appState.theme, 'technologyElement'),\n        href: f.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, f.icon, \" \", f.name);\n    });\n  };\n\n  const Back = () => {\n    return backend.map(b => {\n      return React.createElement(\"a\", {\n        className: classProvider(props.appState.theme, 'technologyElement'),\n        href: b.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, b.icon, \" \", b.name);\n    });\n  };\n\n  const Data = () => {\n    return data.map(d => {\n      return React.createElement(\"a\", {\n        className: classProvider(props.appState.theme, 'technologyElement'),\n        href: d.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, d.icon, \" \", d.name);\n    });\n  };\n\n  const Testing = () => {\n    return testing.map(t => {\n      return React.createElement(\"a\", {\n        className: classProvider(props.appState.theme, 'technologyElement'),\n        href: t.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, t.icon, \" \", t.name);\n    });\n  };\n\n  const DevTools = () => {\n    return tools.map(dt => {\n      return React.createElement(\"a\", {\n        className: classProvider(props.appState.theme, 'technologyElement'),\n        href: dt.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, dt.icon, \" \", dt.name);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"appContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Used technology stack\")), React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Frontend\")), React.createElement(React.Fragment, null, React.createElement(Front, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Backend\")), React.createElement(Back, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Database & API\")), React.createElement(Data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Testing\")), React.createElement(Testing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"appElements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classProvider(props.appState.theme, 'heading'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Development tools\")), React.createElement(DevTools, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })));\n};\n\nexport default connect(mapStateToProps)(Technologies);","map":{"version":3,"sources":["/home/redfoxfinn/Projects/WebstormProjects/rff-demo-project/frontend/src/components/widgets/Technologies.js"],"names":["React","connect","Icon","InlineIcon","ReduxIcon","reactIcon","graphqlIcon","logoNodejs","apollostackIcon","expressIcon","cypressIcon","mongodbIcon","npmIcon","gitIcon","githubIcon","webstormIcon","googlechromeIcon","postmanIcon","jestIcon","classProvider","mapStateToProps","state","appState","Technologies","props","frontend","name","url","icon","backend","data","testing","tools","Repository","repo","repository","theme","Front","map","f","Back","b","Data","d","Testing","t","DevTools","dt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {Icon, InlineIcon} from \"@iconify/react\";\nimport ReduxIcon from '@iconify/icons-simple-icons/redux';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport graphqlIcon from '@iconify/icons-simple-icons/graphql';\nimport logoNodejs from '@iconify/icons-ion/logo-nodejs';\nimport apollostackIcon from '@iconify/icons-logos/apollostack';\nimport expressIcon from '@iconify/icons-logos/express';\nimport cypressIcon from '@iconify/icons-logos/cypress';\nimport mongodbIcon from '@iconify/icons-simple-icons/mongodb';\nimport npmIcon from '@iconify/icons-simple-icons/npm';\nimport gitIcon from '@iconify/icons-simple-icons/git';\nimport githubIcon from '@iconify/icons-simple-icons/github';\nimport webstormIcon from '@iconify/icons-simple-icons/webstorm';\nimport googlechromeIcon from '@iconify/icons-simple-icons/googlechrome';\nimport postmanIcon from '@iconify/icons-simple-icons/postman';\nimport jestIcon from '@iconify/icons-simple-icons/jest';\n\nimport classProvider from '../../tools/classProvider';\nimport '../../style/global.css';\nimport '../../style/technologies.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    appState: state.appState\n  }\n};\n\nconst Technologies = (props) => {\n\n  const frontend = [\n    {name: 'React.js', url: 'https://reactjs.org/', icon: <InlineIcon icon={reactIcon} />},\n    {name: 'Redux.js', url: 'https://redux.js.org/', icon: <InlineIcon icon={ReduxIcon}/>},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-client', url: 'https://www.apollographql.com/docs/react/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const backend = [\n    {name: 'Node.js', url: 'https://nodejs.org/en/', icon: <InlineIcon icon={logoNodejs}/>},\n    {name: 'Express.js', url: 'https://expressjs.com/', icon: <InlineIcon icon={expressIcon}/>},\n    {name: 'mongoose.js', url: 'https://mongoosejs.com/', icon: ''},\n    {name: 'JWT', url: 'https://jwt.io/', icon: ''},\n    {name: 'bcrypt', url: 'https://github.com/kelektiv/node.bcrypt.js', icon: ''},\n    {name: 'GraphQL', url: 'https://graphql.org/', icon: <InlineIcon icon={graphqlIcon}/>},\n    {name: 'Apollo-server', url: 'https://www.apollographql.com/docs/apollo-server/', icon: <InlineIcon icon={apollostackIcon}/>}\n  ];\n  const data = [\n    {name: 'MongoDB - Atlas', url: 'https://www.mongodb.com/cloud/atlas', icon: <InlineIcon icon={mongodbIcon}/>},\n    {name: 'HSL API', url: 'https://digitransit.fi/en/developers/apis/1-routing-api/', icon: ''}\n  ];\n  const testing = [\n    {name: 'Jest', url: 'https://jestjs.io/', icon: <InlineIcon icon={jestIcon}/>},\n    {name: 'EasyGraphQL', url: 'https://easygraphql.com/', icon: ''},\n    {name: 'cypress', url: 'https://www.cypress.io/', icon: <InlineIcon icon={cypressIcon}/>},\n  ];\n  const tools = [\n    {name: 'npm', url: 'https://www.npmjs.com/', icon: <InlineIcon icon={npmIcon}/>},\n    {name: 'git', url: 'https://git-scm.com/', icon: <InlineIcon icon={gitIcon}/>},\n    {name: 'GitHub', url: 'https://github.com/', icon: <InlineIcon icon={githubIcon}/>},\n    {name: 'WebStorm', url: 'https://www.jetbrains.com/webstorm/', icon: <InlineIcon icon={webstormIcon}/>},\n    {name: 'Chrome', url: 'https://www.google.com/intl/en_en/chrome/', icon: <InlineIcon icon={googlechromeIcon}/>},\n    {name: 'Postman', url: 'https://www.getpostman.com/', icon: <InlineIcon icon={postmanIcon}/>}\n  ];\n\n  const Repository = () => {\n    const repo = props.appState.repository;\n    return <a className={classProvider(props.appState.theme, 'technologyElement')} href={repo.url}>{repo.icon} {repo.name}</a>\n  };\n  const Front = () => {\n    return frontend.map((f) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={f.url}>{f.icon} {f.name}</a>\n    });\n  };\n  const Back = () => {\n    return backend.map((b) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={b.url}>{b.icon} {b.name}</a>\n    });\n  };\n  const Data = () => {\n    return data.map((d) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={d.url}>{d.icon} {d.name}</a>\n    });\n  };\n  const Testing = () => {\n    return testing.map((t) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={t.url}>{t.icon} {t.name}</a>\n    });\n  };\n  const DevTools = () => {\n    return tools.map((dt) => {\n      return <a className={classProvider(props.appState.theme, 'technologyElement')} href={dt.url}>{dt.icon} {dt.name}</a>\n    });\n  };\n  return(\n    <div className='app'>\n      <div className='appContainer'>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Used technology stack</h4>\n        </div>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Frontend</h4>\n        </div>\n        <>\n          <Front/>\n        </>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Backend</h4>\n        </div>\n        <Back/>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Database & API</h4>\n        </div>\n        <Data/>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Testing</h4>\n        </div>\n        <Testing/>\n        <div className='appElements'>\n          <h4 className={classProvider(props.appState.theme, 'heading')}>Development tools</h4>\n        </div>\n        <DevTools/>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Technologies);"]},"metadata":{},"sourceType":"module"}